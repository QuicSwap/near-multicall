(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $none_=>_i64 (func (result i64)))
 (type $i64_=>_none (func (param i64)))
 (type $i64_i64_=>_none (func (param i64 i64)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_i32_i64_=>_none (func (param i32 i32 i64)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_i32_=>_i64 (func (param i32 i32) (result i64)))
 (type $i64_i64_=>_i64 (func (param i64 i64) (result i64)))
 (type $i32_i32_i32_i64_i32_=>_i32 (func (param i32 i32 i32 i64 i32) (result i32)))
 (type $i32_i32_i64_i32_=>_i32 (func (param i32 i32 i64 i32) (result i32)))
 (type $i64_=>_i64 (func (param i64) (result i64)))
 (type $i64_i64_i64_=>_i64 (func (param i64 i64 i64) (result i64)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i64_i64_=>_i32 (func (param i32 i64 i64) (result i32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i32_i32_i32_i32_i64_i64_i32_=>_none (func (param i32 i32 i32 i32 i64 i64 i32)))
 (type $i32_i32_i32_i64_i64_i32_=>_none (func (param i32 i32 i32 i64 i64 i32)))
 (type $i32_i32_f64_=>_none (func (param i32 i32 f64)))
 (type $i32_i64_i32_i32_=>_none (func (param i32 i64 i32 i32)))
 (type $i32_f64_=>_none (func (param i32 f64)))
 (type $i64_i64_i64_=>_none (func (param i64 i64 i64)))
 (type $i64_i64_i64_i64_i64_i64_i64_=>_none (func (param i64 i64 i64 i64 i64 i64 i64)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i32_i32_i32_i32_i64_=>_i32 (func (param i32 i32 i32 i32 i64) (result i32)))
 (type $i32_i32_i32_i32_i64_i32_=>_i32 (func (param i32 i32 i32 i32 i64 i32) (result i32)))
 (type $i32_i32_i32_i64_i32_i32_i64_i64_=>_i32 (func (param i32 i32 i32 i64 i32 i32 i64 i64) (result i32)))
 (type $i32_i32_i64_i32_i32_i64_i64_=>_i32 (func (param i32 i32 i64 i32 i32 i64 i64) (result i32)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $i64_i32_i32_=>_i32 (func (param i64 i32 i32) (result i32)))
 (type $i32_=>_i64 (func (param i32) (result i64)))
 (type $i32_i32_i64_=>_i64 (func (param i32 i32 i64) (result i64)))
 (type $i64_i64_i64_i64_=>_i64 (func (param i64 i64 i64 i64) (result i64)))
 (type $i64_i64_i64_i64_i64_=>_i64 (func (param i64 i64 i64 i64 i64) (result i64)))
 (type $i64_i64_i64_i64_i64_i64_i64_i64_=>_i64 (func (param i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (type $i64_i64_i64_i64_i64_i64_i64_i64_i64_=>_i64 (func (param i64 i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (type $f64_i32_=>_f64 (func (param f64 i32) (result f64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "input" (func $~lib/near-sdk-core/env/env/env.input (param i64)))
 (import "env" "register_len" (func $~lib/near-sdk-core/env/env/env.register_len (param i64) (result i64)))
 (import "env" "panic" (func $~lib/near-sdk-core/env/env/env.panic))
 (import "env" "read_register" (func $~lib/near-sdk-core/env/env/env.read_register (param i64 i64)))
 (import "env" "predecessor_account_id" (func $~lib/near-sdk-core/env/env/env.predecessor_account_id (param i64)))
 (import "env" "keccak256" (func $~lib/near-sdk-core/env/env/env.keccak256 (param i64 i64 i64)))
 (import "env" "storage_has_key" (func $~lib/near-sdk-core/env/env/env.storage_has_key (param i64 i64) (result i64)))
 (import "env" "attached_deposit" (func $~lib/near-sdk-core/env/env/env.attached_deposit (param i64)))
 (import "env" "promise_batch_create" (func $~lib/near-sdk-core/env/env/env.promise_batch_create (param i64 i64) (result i64)))
 (import "env" "promise_batch_then" (func $~lib/near-sdk-core/env/env/env.promise_batch_then (param i64 i64 i64) (result i64)))
 (import "env" "promise_batch_action_function_call" (func $~lib/near-sdk-core/env/env/env.promise_batch_action_function_call (param i64 i64 i64 i64 i64 i64 i64)))
 (import "env" "promise_and" (func $~lib/near-sdk-core/env/env/env.promise_and (param i64 i64) (result i64)))
 (import "env" "current_account_id" (func $~lib/near-sdk-core/env/env/env.current_account_id (param i64)))
 (import "env" "promise_batch_action_transfer" (func $~lib/near-sdk-core/env/env/env.promise_batch_action_transfer (param i64 i64)))
 (import "env" "promise_return" (func $~lib/near-sdk-core/env/env/env.promise_return (param i64)))
 (import "env" "storage_read" (func $~lib/near-sdk-core/env/env/env.storage_read (param i64 i64 i64) (result i64)))
 (import "env" "log_utf8" (func $~lib/near-sdk-core/env/env/env.log_utf8 (param i64 i64)))
 (import "env" "prepaid_gas" (func $~lib/near-sdk-core/env/env/env.prepaid_gas (result i64)))
 (import "env" "promise_create" (func $~lib/near-sdk-core/env/env/env.promise_create (param i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (import "env" "promise_then" (func $~lib/near-sdk-core/env/env/env.promise_then (param i64 i64 i64 i64 i64 i64 i64 i64 i64) (result i64)))
 (import "env" "storage_write" (func $~lib/near-sdk-core/env/env/env.storage_write (param i64 i64 i64 i64 i64) (result i64)))
 (import "env" "storage_usage" (func $~lib/near-sdk-core/env/env/env.storage_usage (result i64)))
 (import "env" "account_balance" (func $~lib/near-sdk-core/env/env/env.account_balance (param i64)))
 (import "env" "storage_remove" (func $~lib/near-sdk-core/env/env/env.storage_remove (param i64 i64 i64) (result i64)))
 (import "env" "value_return" (func $~lib/near-sdk-core/env/env/env.value_return (param i64 i64)))
 (import "env" "promise_results_count" (func $~lib/near-sdk-core/env/env/env.promise_results_count (result i64)))
 (import "env" "promise_result" (func $~lib/near-sdk-core/env/env/env.promise_result (param i64 i64) (result i64)))
 (import "env" "block_timestamp" (func $~lib/near-sdk-core/env/env/env.block_timestamp (result i64)))
 (global $~lib/rt/stub/startOffset (mut i32) (i32.const 0))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $~lib/as-bignum/utils/RadixCharsTable i32 (i32.const 448))
 (global $~lib/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~lib/as-bignum/globals/__res128_hi (mut i64) (i64.const 0))
 (global $assembly/multicall/utils/StorageCostUtils.STORAGE_PRICE_PER_BYTE (mut i32) (i32.const 0))
 (global $~lib/near-sdk-core/collections/index/collections._KEY_ELEMENT_SUFFIX i32 (i32.const 496))
 (global $~lib/near-sdk-core/collections/index/collections._KEY_LENGTH_SUFFIX i32 (i32.const 592))
 (global $assembly/multicall/index/admins (mut i32) (i32.const 0))
 (global $assembly/multicall/index/tokens (mut i32) (i32.const 0))
 (global $assembly/multicall/index/KEY_INIT i32 (i32.const 736))
 (global $assembly/multicall/index/KEY_CRONCAT_MANAGER_ADDRESS i32 (i32.const 768))
 (global $assembly/multicall/index/KEY_JOB_BOND i32 (i32.const 800))
 (global $assembly/multicall/index/KEY_JOB_MAP i32 (i32.const 832))
 (global $assembly/multicall/index/KEY_JOB_COUNT i32 (i32.const 864))
 (global $assembly/multicall/index/_jobs (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/number/U32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/assemblyscript-json/JSON/_JSON.handler (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/JSON/_JSON.decoder (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/decoder/CHAR_0 i32 (i32.const 48))
 (global $~lib/assemblyscript-json/decoder/CHAR_A i32 (i32.const 65))
 (global $~lib/assemblyscript-json/decoder/CHAR_A_LOWER i32 (i32.const 97))
 (global $~lib/assemblyscript-json/decoder/FALSE_STR i32 (i32.const 2976))
 (global $~lib/assemblyscript-json/decoder/TRUE_STR i32 (i32.const 3088))
 (global $~lib/assemblyscript-json/decoder/CHAR_MINUS i32 (i32.const 45))
 (global $~lib/assemblyscript-json/decoder/CHAR_9 i32 (i32.const 57))
 (global $~lib/assemblyscript-json/decoder/CHAR_PERIOD i32 (i32.const 46))
 (global $~lib/assemblyscript-json/decoder/CHAR_PLUS i32 (i32.const 43))
 (global $~lib/assemblyscript-json/decoder/CHAR_E i32 (i32.const 69))
 (global $~lib/assemblyscript-json/decoder/CHAR_E_LOWER i32 (i32.const 101))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $~lib/assemblyscript-json/decoder/NULL_STR i32 (i32.const 3344))
 (global $~lib/assemblyscript-json/JSON/NULL (mut i32) (i32.const 0))
 (global $~lib/near-sdk-core/base64/PADCHAR i32 (i32.const 8336))
 (global $~lib/near-sdk-core/base64/ALPHAVALUES (mut i32) (i32.const 0))
 (global $~lib/near-sdk-core/base64/ALPHA i32 (i32.const 10864))
 (global $~lib/as-bignum/integer/u128/HEX_CHARS i32 (i32.const 11328))
 (global $~lib/as-bignum/utils/HEX_CHARS i32 (i32.const 11328))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~lib/near-sdk-core/contract/PromiseStatus.Pending i32 (i32.const 0))
 (global $~lib/near-sdk-core/contract/PromiseStatus.Successful i32 (i32.const 1))
 (global $~lib/near-sdk-core/contract/PromiseStatus.Failed i32 (i32.const 2))
 (global $~lib/rt/__rtti_base i32 (i32.const 14448))
 (global $~lib/memory/__heap_base i32 (i32.const 14908))
 (memory $0 1)
 (data (i32.const 12) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\00\00\00\00\00")
 (data (i32.const 76) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00r\00a\00d\00i\00x\00\00\00")
 (data (i32.const 124) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00.\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00b\00i\00g\00n\00u\00m\00/\00u\00t\00i\00l\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 204) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 268) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00s\00t\00u\00b\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 332) "\\\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00K\00\00\00\00\01\02\03\04\05\06\07\08\t$$$$$$$\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#$$$$$$\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\00")
 (data (i32.const 428) ",\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\10\00\00\00`\01\00\00`\01\00\00K\00\00\00K\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 476) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00:\00:\00\00\00\00\00\00\00\00\00")
 (data (i32.const 508) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 540) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00_\00m\00a\00p\00\00\00\00\00")
 (data (i32.const 572) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00:\00l\00e\00n\00\00\00\00\00")
 (data (i32.const 604) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00_\00v\00e\00c\00t\00o\00r\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 652) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 684) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 716) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 748) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 780) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 812) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 844) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 876) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00:\00m\00a\00p\00\00\00\00\00")
 (data (i32.const 908) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00:\00e\00n\00t\00r\00i\00e\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 956) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 1004) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 1068) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 1116) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00n\00u\00l\00l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1180) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00F\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 1276) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1340) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1404) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00p\00u\00t\00 \00e\00n\00d\00\00\00\00\00")
 (data (i32.const 1468) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00{\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1500) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1628) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\"\00\00\00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00u\00p\00c\00a\00s\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1692) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00@\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00J\00S\00O\00N\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1788) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00}\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1820) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1852) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00,\00\'\00\00\00\00\00")
 (data (i32.const 1900) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1932) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00d\00o\00u\00b\00l\00e\00-\00q\00u\00o\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00\00\00")
 (data (i32.const 2012) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\008\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00\00\00\00\00")
 (data (i32.const 2092) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 2140) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\\\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2172) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2204) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2236) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2268) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2300) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2332) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\0d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2364) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2396) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2428) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00u\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2460) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\\\00u\00 \00d\00i\00g\00i\00t\00\00\00\00\00\00\00")
 (data (i32.const 2524) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00s\00c\00a\00p\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 \00")
 (data (i32.const 2604) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2636) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00:\00\'\00\00\00\00\00")
 (data (i32.const 2684) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00o\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2764) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 2812) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00[\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2844) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2876) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00.\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00a\00r\00r\00a\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2956) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00f\00a\00l\00s\00e\00\00\00")
 (data (i32.const 2988) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3036) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3068) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00t\00r\00u\00e\00\00\00\00\00")
 (data (i32.const 3100) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00-\000\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3136) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data (i32.const 3324) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00n\00u\00l\00l\00\00\00\00\00")
 (data (i32.const 3356) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\"\00\00\00C\00a\00n\00n\00o\00t\00 \00p\00a\00r\00s\00e\00 \00J\00S\00O\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3420) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00s\00d\00k\00-\00b\00i\00n\00d\00g\00e\00n\00/\00i\00n\00d\00e\00x\00.\00t\00s\00")
 (data (i32.const 3500) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00c\00a\00l\00l\00s\00\00\00")
 (data (i32.const 3532) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3596) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 3644) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00t\00y\00p\00e\00 \00\00\00")
 (data (i32.const 3676) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00v\00\00\00A\00r\00r\00a\00y\00<\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00/\00A\00r\00r\00a\00y\00<\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00u\00l\00t\00i\00c\00a\00l\00l\00/\00m\00o\00d\00e\00l\00/\00B\00a\00t\00c\00h\00C\00a\00l\00l\00>\00>\00\00\00\00\00\00\00")
 (data (i32.const 3820) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00 \00c\00a\00n\00n\00o\00t\00 \00b\00e\00 \00n\00u\00l\00l\00.\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3884) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00K\00e\00y\00:\00 \00\00\00")
 (data (i32.const 3916) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00 \00w\00i\00t\00h\00 \00t\00y\00p\00e\00 \00\00\00\00\00\00\00")
 (data (i32.const 3964) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00i\00s\00 \00n\00o\00t\00 \00n\00u\00l\00l\00a\00b\00l\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4028) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00V\00a\00l\00u\00e\00 \00w\00i\00t\00h\00 \00K\00e\00y\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4092) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\002\00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00n\00 \00a\00r\00r\00a\00y\00 \00o\00r\00 \00n\00u\00l\00l\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4172) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00R\00\00\00A\00r\00r\00a\00y\00<\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00u\00l\00t\00i\00c\00a\00l\00l\00/\00m\00o\00d\00e\00l\00/\00B\00a\00t\00c\00h\00C\00a\00l\00l\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4284) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00B\00a\00t\00c\00h\00C\00a\00l\00l\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4332) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00n\00 \00o\00b\00j\00e\00c\00t\00 \00o\00r\00 \00n\00u\00l\00l\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 4412) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00a\00d\00d\00r\00e\00s\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4460) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g\00")
 (data (i32.const 4492) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\000\00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00s\00t\00r\00i\00n\00g\00 \00o\00r\00 \00n\00u\00l\00l\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00a\00c\00t\00i\00o\00n\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4620) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00X\00\00\00A\00r\00r\00a\00y\00<\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00u\00l\00t\00i\00c\00a\00l\00l\00/\00m\00o\00d\00e\00l\00/\00F\00u\00n\00c\00t\00i\00o\00n\00C\00a\00l\00l\00>\00\00\00\00\00")
 (data (i32.const 4732) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00F\00u\00n\00c\00t\00i\00o\00n\00C\00a\00l\00l\00\00\00\00\00")
 (data (i32.const 4780) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00f\00u\00n\00c\00\00\00\00\00")
 (data (i32.const 4812) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00a\00r\00g\00s\00\00\00\00\00")
 (data (i32.const 4844) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00g\00a\00s\00\00\00\00\00\00\00")
 (data (i32.const 4876) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00u\006\004\00\00\00\00\00\00\00")
 (data (i32.const 4908) "\9c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00~\00\00\00 \00i\00s\00 \00a\00n\00 \006\004\00-\00b\00i\00t\00 \00i\00n\00t\00e\00g\00e\00r\00 \00a\00n\00d\00 \00i\00s\00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00t\00o\00 \00b\00e\00 \00e\00n\00c\00o\00d\00e\00d\00 \00a\00s\00 \00a\00 \00s\00t\00r\00i\00n\00g\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5068) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00d\00e\00p\00o\00\00\00\00\00")
 (data (i32.const 5100) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00u\001\002\008\00\00\00\00\00")
 (data (i32.const 5132) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00Z\00\00\00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00t\00y\00p\00e\00 \00s\00t\00r\00i\00n\00g\00 \00t\00o\00 \00d\00e\00c\00o\00d\00e\00 \00u\001\002\008\00 \00b\00u\00t\00 \00g\00o\00t\00 \00\00\00")
 (data (i32.const 5244) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 5276) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00B\00o\00o\00l\00e\00a\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5324) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00O\00b\00j\00e\00c\00t\00")
 (data (i32.const 5356) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00A\00r\00r\00a\00y\00\00\00")
 (data (i32.const 5388) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00N\00u\00l\00l\00\00\00\00\00")
 (data (i32.const 5420) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00I\00n\00t\00e\00g\00e\00r\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5468) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00F\00l\00o\00a\00t\00\00\00")
 (data (i32.const 5500) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00U\00N\00K\00N\00O\00W\00N\00 \00T\00Y\00P\00E\00\00\00\00\00")
 (data (i32.const 5548) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00P\00a\00r\00a\00m\00e\00t\00e\00r\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 5596) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\000\00\00\00 \00i\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d\00 \00b\00u\00t\00 \00m\00i\00s\00s\00i\00n\00g\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5676) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00s\00d\00k\00-\00c\00o\00r\00e\00/\00u\00t\00i\00l\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5756) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00F\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00e\00n\00c\00o\00d\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 5852) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\\\00\"\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5884) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\\\00\\\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5916) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\\\00b\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5948) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\\\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5980) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\\\00r\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6012) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\\\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6044) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\00U\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00o\00d\00e\00:\00 \00\00\00\00\00")
 (data (i32.const 6140) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6268) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 6332) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const
 (data (i32.const 6764) "\1c\04\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7820) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 7916) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00a\00d\00m\00i\00n\00 \00t\00o\00 \00c\00a\00l\00l\00 \00t\00h\00i\00s\00 \00f\00u\00n\00c\00t\00i\00o\00n\00\00\00\00\00")
 (data (i32.const 8012) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00\10\02\00\00\00\00\00\00\00\1f\00\00")
 (data (i32.const 8044) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\006\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00u\00l\00t\00i\00c\00a\00l\00l\00/\00i\00n\00d\00e\00x\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 8124) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00b\00i\00g\00n\00u\00m\00/\00i\00n\00t\00e\00g\00e\00r\00/\00u\001\002\008\00.\00t\00s\00")
 (data (i32.const 8204) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00N\00\00\00a\00t\00t\00a\00c\00h\00e\00d\00 \00d\00e\00p\00o\00s\00i\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00m\00o\00r\00e\00 \00t\00h\00a\00n\00 \00z\00e\00r\00o\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8316) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8348) "\9c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00>\00\00\00?456789:;<=\00\00\00\00\00\00\00\00\01\02\03\04\05\06\07\08\t\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\00\00\00\00\00\00\1a\1b\1c\1d\1e\1f !\"#$%&\'()*+,-./0123\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8508) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 8572) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00s\00e\00n\00d\00e\00r\00_\00i\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8620) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00a\00m\00o\00u\00n\00t\00")
 (data (i32.const 8652) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00m\00s\00g\00\00\00\00\00\00\00")
 (data (i32.const 8684) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00.\00\00\00 \00n\00o\00t\00 \00o\00n\00 \00t\00o\00k\00e\00n\00 \00w\00h\00i\00t\00e\00l\00i\00s\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8764) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00\10\02\00\00\00\00\00\00\00\"\00\00")
 (data (i32.const 8796) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00F\00t\00O\00n\00T\00r\00a\00n\00s\00f\00e\00r\00A\00r\00g\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8860) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00f\00u\00n\00c\00t\00i\00o\00n\00_\00i\00d\00\00\00\00\00\00\00")
 (data (i32.const 8908) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00m\00u\00l\00t\00i\00c\00a\00l\00l\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8956) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00M\00u\00l\00t\00i\00c\00a\00l\00l\00A\00r\00g\00s\00\00\00")
 (data (i32.const 9004) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00j\00o\00b\00_\00a\00c\00t\00i\00v\00a\00t\00e\00\00\00\00\00")
 (data (i32.const 9052) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00J\00o\00b\00A\00c\00t\00i\00v\00a\00t\00e\00A\00r\00g\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9116) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00j\00o\00b\00_\00i\00d\00")
 (data (i32.const 9148) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00u\003\002\00\00\00\00\00\00\00")
 (data (i32.const 9180) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00n\00 \00I\00n\00t\00e\00g\00e\00r\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9244) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00*\00\00\00j\00o\00b\00_\00a\00c\00t\00i\00v\00a\00t\00e\00_\00c\00a\00l\00l\00b\00a\00c\00k\00\00\00")
 (data (i32.const 9308) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00K\00e\00y\00 \00\'\00\00\00")
 (data (i32.const 9340) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00>\00\00\00\'\00 \00i\00s\00 \00n\00o\00t\00 \00p\00r\00e\00s\00e\00n\00t\00 \00i\00n\00 \00t\00h\00e\00 \00s\00t\00o\00r\00a\00g\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9436) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00:\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00s\00d\00k\00-\00c\00o\00r\00e\00/\00s\00t\00o\00r\00a\00g\00e\00.\00t\00s\00\00\00")
 (data (i32.const 9516) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00s\00d\00k\00-\00c\00o\00r\00e\00/\00c\00o\00l\00l\00e\00c\00t\00i\00o\00n\00s\00/\00p\00e\00r\00s\00i\00s\00t\00e\00n\00t\00V\00e\00c\00t\00o\00r\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9644) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00`\00\00\00M\00a\00p\00E\00n\00t\00r\00y\00<\00u\003\002\00,\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00u\00l\00t\00i\00c\00a\00l\00l\00/\00m\00o\00d\00e\00l\00/\00J\00o\00b\00S\00c\00h\00e\00m\00a\00>\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9772) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00k\00e\00y\00\00\00\00\00\00\00")
 (data (i32.const 9804) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00v\00a\00l\00u\00e\00\00\00")
 (data (i32.const 9836) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00J\00o\00b\00S\00c\00h\00e\00m\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9884) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00i\00d\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9916) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00c\00r\00o\00n\00c\00a\00t\00_\00h\00a\00s\00h\00\00\00\00\00")
 (data (i32.const 9964) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00c\00r\00e\00a\00t\00o\00r\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10012) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00b\00o\00n\00d\00\00\00\00\00")
 (data (i32.const 10044) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00c\00a\00d\00e\00n\00c\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10092) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00t\00r\00i\00g\00g\00e\00r\00_\00g\00a\00s\00\00\00\00\00\00\00")
 (data (i32.const 10140) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00t\00r\00i\00g\00g\00e\00r\00_\00d\00e\00p\00o\00s\00i\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10204) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00c\00r\00o\00n\00c\00a\00t\00_\00b\00u\00d\00g\00e\00t\00")
 (data (i32.const 10252) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00s\00t\00a\00r\00t\00_\00a\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10300) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00r\00u\00n\00s\00_\00m\00a\00x\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10348) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00r\00u\00n\00s\00_\00c\00u\00r\00r\00e\00n\00t\00\00\00\00\00")
 (data (i32.const 10396) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00i\00s\00_\00a\00c\00t\00i\00v\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10444) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00b\00o\00o\00l\00\00\00\00\00")
 (data (i32.const 10476) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00s\00t\00r\00i\00n\00g\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10540) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00j\00o\00b\00 \00\00\00\00\00")
 (data (i32.const 10572) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00 \00a\00l\00r\00e\00a\00d\00y\00 \00a\00c\00t\00i\00v\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10636) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00@)\00\00\00\00\00\00`)\00\00")
 (data (i32.const 10668) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00 \00a\00l\00r\00e\00a\00d\00y\00 \00h\00a\00s\00 \00c\00r\00o\00n\00c\00a\00t\00 \00t\00a\00s\00k\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 10748) ",\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\14\00\00\00@)\00\00\00\00\00\00\c0)\00\00\00\00\00\00\10\02\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10796) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00j\00o\00b\00_\00t\00r\00i\00g\00g\00e\00r\00\00\00\00\00\00\00")
 (data (i32.const 10844) "\9c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\000\001\002\003\004\005\006\007\008\009\00+\00/\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11004) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00c\00r\00e\00a\00t\00e\00_\00t\00a\00s\00k\00\00\00\00\00\00\00")
 (data (i32.const 11052) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00c\00o\00n\00t\00r\00a\00c\00t\00_\00i\00d\00\00\00\00\00\00\00")
 (data (i32.const 11100) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00r\00e\00c\00u\00r\00r\00i\00n\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11148) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00d\00e\00p\00o\00s\00i\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11196) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00N\00\00\00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \001\000\00 \00o\00r\00 \001\006\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11308) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11372) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00a\00r\00g\00u\00m\00e\00n\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11420) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00a\00c\00c\00o\00u\00n\00t\00_\00i\00d\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11468) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00O\00v\00e\00r\00f\00l\00o\00w\00 \00d\00u\00r\00i\00n\00g\00 \00m\00u\00l\00t\00i\00p\00l\00i\00c\00a\00t\00i\00o\00n\00")
 (data (i32.const 11548) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00F\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00b\00i\00g\00n\00u\00m\00/\00i\00n\00t\00e\00g\00e\00r\00/\00s\00a\00f\00e\00/\00u\001\002\008\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 11644) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00:\00\00\00U\00n\00d\00e\00r\00f\00l\00o\00w\00 \00d\00u\00r\00i\00n\00g\00 \00s\00u\00b\00s\00t\00r\00a\00c\00t\00i\00o\00n\00\00\00")
 (data (i32.const 11724) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00a\00c\00c\00o\00u\00n\00t\00_\00i\00d\00s\00\00\00\00\00\00\00")
 (data (i32.const 11772) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\002\00\00\00A\00r\00r\00a\00y\00<\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00/\00S\00t\00r\00i\00n\00g\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11852) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00B\00\00\00T\00h\00e\00 \00i\00t\00e\00m\00 \00w\00a\00s\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00i\00n\00 \00t\00h\00e\00 \00s\00e\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11948) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00~\00l\00i\00b\00/\00n\00e\00a\00r\00-\00s\00d\00k\00-\00c\00o\00r\00e\00/\00c\00o\00l\00l\00e\00c\00t\00i\00o\00n\00s\00/\00p\00e\00r\00s\00i\00s\00t\00e\00n\00t\00S\00e\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12076) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00V\00e\00c\00t\00o\00r\00 \00i\00s\00 \00e\00m\00p\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12140) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00b\00o\00u\00n\00d\00s\00\00\00\00\00\00\00")
 (data (i32.const 12204) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00s\00t\00a\00r\00t\00\00\00")
 (data (i32.const 12236) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00i\003\002\00\00\00\00\00\00\00")
 (data (i32.const 12268) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00e\00n\00d\00\00\00\00\00\00\00")
 (data (i32.const 12300) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00a\00d\00d\00r\00e\00s\00s\00e\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12348) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00a\00d\00m\00i\00n\00_\00a\00c\00c\00o\00u\00n\00t\00s\00")
 (data (i32.const 12396) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00c\00r\00o\00n\00c\00a\00t\00_\00m\00a\00n\00a\00g\00e\00r\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12460) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00j\00o\00b\00_\00b\00o\00n\00d\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12508) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00A\00l\00r\00e\00a\00d\00y\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d\00\00\00\00\00\00\00")
 (data (i32.const 12572) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00d\00o\00n\00e\00\00\00\00\00")
 (data (i32.const 12604) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00j\00o\00b\00_\00c\00a\00l\00l\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12652) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00j\00o\00b\00_\00c\00a\00d\00e\00n\00c\00e\00\00\00\00\00\00\00")
 (data (i32.const 12700) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00j\00o\00b\00_\00t\00r\00i\00g\00g\00e\00r\00_\00g\00a\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12764) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00j\00o\00b\00_\00t\00r\00i\00g\00g\00e\00r\00_\00d\00e\00p\00o\00s\00i\00t\00\00\00\00\00\00\00")
 (data (i32.const 12828) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00j\00o\00b\00_\00t\00o\00t\00a\00l\00_\00b\00u\00d\00g\00e\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12892) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00j\00o\00b\00_\00r\00u\00n\00s\00_\00m\00a\00x\00\00\00\00\00")
 (data (i32.const 12940) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00j\00o\00b\00_\00s\00t\00a\00r\00t\00_\00a\00t\00\00\00\00\00")
 (data (i32.const 12988) "\9c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\80\00\00\00a\00t\00t\00a\00c\00h\00e\00d\00 \00d\00e\00p\00o\00s\00i\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00g\00r\00e\00a\00t\00e\00r\00 \00o\00r\00 \00e\00q\00u\00a\00l\00 \00t\00h\00a\00n\00 \00t\00h\00e\00 \00r\00e\00q\00u\00i\00r\00e\00d\00 \00b\00o\00n\00d\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13148) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00u\00l\00t\00i\00c\00a\00l\00l\00/\00j\00o\00b\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13228) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\"\00\00\00M\00e\00t\00h\00o\00d\00 \00i\00s\00 \00p\00r\00i\00v\00a\00t\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13292) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00j\00o\00b\00_\00i\00d\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13340) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00A\00r\00r\00a\00y\00<\00u\003\002\00>\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13388) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00 \00a\00l\00r\00e\00a\00d\00y\00 \00n\00o\00t\00 \00a\00c\00t\00i\00v\00e\00\00\00\00\00\00\00")
 (data (i32.const 13452) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00@)\00\00\00\00\00\00`4\00\00")
 (data (i32.const 13484) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13532) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00@)\00\00\00\00\00\00\c04\00\00")
 (data (i32.const 13564) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00@)\00\00\00\00\00\00`)\00\00")
 (data (i32.const 13596) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00@)\00\00\00\00\00\00\c04\00\00")
 (data (i32.const 13628) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00j\00o\00b\00_\00i\00s\00_\00a\00c\00t\00i\00v\00e\00\00\00")
 (data (i32.const 13676) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00r\00e\00f\00i\00l\00l\00_\00b\00a\00l\00a\00n\00c\00e\00")
 (data (i32.const 13724) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00t\00a\00s\00k\00_\00h\00a\00s\00h\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13772) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00r\00e\00m\00o\00v\00e\00_\00t\00a\00s\00k\00\00\00\00\00\00\00")
 (data (i32.const 13820) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\\\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00c\00r\00o\00n\00c\00a\00t\00 \00m\00a\00n\00a\00g\00e\00r\00 \00t\00o\00 \00c\00a\00l\00l\00 \00t\00h\00i\00s\00 \00f\00u\00n\00c\00t\00i\00o\00n\00")
 (data (i32.const 13932) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00\10\02\00\00\00\00\00\00\106\00\00")
 (data (i32.const 13964) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00a\00c\00t\00i\00v\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14028) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00@)\00\00\00\00\00\00\a06\00\00")
 (data (i32.const 14060) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00p\00l\00e\00a\00s\00e\00 \00w\00a\00i\00t\00 \00f\00o\00r\00 \00j\00o\00b\00 \00s\00t\00a\00r\00t\00 \00t\00i\00m\00e\00")
 (data (i32.const 14140) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00r\00e\00t\00i\00r\00i\00n\00g\00 \00j\00o\00b\00 \00\00\00")
 (data (i32.const 14188) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00,\00 \00m\00a\00x\00 \00r\00u\00n\00s\00 \00r\00e\00a\00c\00h\00e\00d\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14252) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\0c\00\00\00P7\00\00\00\00\00\00\807\00\00")
 (data (i32.const 14284) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00 \00r\00u\00n\00s\00 \00m\00a\00x\00:\00 \00\00\00\00\00\00\00")
 (data (i32.const 14332) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00 \00r\00u\00n\00s\00 \00c\00u\00r\00r\00e\00n\00t\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14396) ",\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\1c\00\00\00@)\00\00\00\00\00\00\e07\00\00\00\00\00\00\108\00\00\00\00\00\00\10\02\00\00")
 (data (i32.consta\00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\17\00\00\00 \00\00\00\17\00\00\00 \00\00\00#\00\00\00 \00\00\00\17\00\00\00 \00\00\00\17\00\00\00 \00\00\00\17\00\00\00\00\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00\02\t\00\00\00\00\00\00\04A\00\00\00\00\00\00\02\02\00\00\00\00\00\00 \00\00\00\00\00\00\00d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00A\08\00\00\02\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\02\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (table $0 1 funcref)
 (export "multicall" (func $assembly/multicall/index/__wrapper_multicall))
 (export "ft_on_transfer" (func $assembly/multicall/index/__wrapper_ft_on_transfer))
 (export "near_transfer" (func $assembly/multicall/index/__wrapper_near_transfer))
 (export "admins_add" (func $assembly/multicall/index/__wrapper_admins_add))
 (export "admins_remove" (func $assembly/multicall/index/__wrapper_admins_remove))
 (export "get_admins" (func $assembly/multicall/index/__wrapper_get_admins))
 (export "tokens_add" (func $assembly/multicall/index/__wrapper_tokens_add))
 (export "tokens_remove" (func $assembly/multicall/index/__wrapper_tokens_remove))
 (export "get_tokens" (func $assembly/multicall/index/__wrapper_get_tokens))
 (export "init" (func $assembly/multicall/index/__wrapper_init))
 (export "set_croncat_manager" (func $assembly/multicall/index/__wrapper_set_croncat_manager))
 (export "get_croncat_manager" (func $assembly/multicall/index/__wrapper_get_croncat_manager))
 (export "job_set_bond" (func $assembly/multicall/index/__wrapper_job_set_bond))
 (export "job_get_bond" (func $assembly/multicall/index/__wrapper_job_get_bond))
 (export "get_jobs" (func $assembly/multicall/index/__wrapper_get_jobs))
 (export "job_add" (func $assembly/multicall/index/__wrapper_job_add))
 (export "job_activate" (func $assembly/multicall/index/__wrapper_job_activate))
 (export "job_activate_callback" (func $assembly/multicall/index/__wrapper_job_activate_callback))
 (export "jobs_pause" (func $assembly/multicall/index/__wrapper_jobs_pause))
 (export "jobs_resume" (func $assembly/multicall/index/__wrapper_jobs_resume))
 (export "job_edit" (func $assembly/multicall/index/__wrapper_job_edit))
 (export "job_delete" (func $assembly/multicall/index/__wrapper_job_delete))
 (export "job_trigger" (func $assembly/multicall/index/__wrapper_job_trigger))
 (export "memory" (memory $0))
 (start $~start)
 (func $~lib/string/String#get:length (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
 )
 (func $~lib/rt/stub/maybeGrowMemory (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  memory.size
  local.set $1
  local.get $1
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $2
  local.get $0
  local.get $2
  i32.gt_u
  if
   local.get $0
   local.get $2
   i32.sub
   i32.const 65535
   i32.add
   i32.const 65535
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.shr_u
   local.set $3
   local.get $1
   local.tee $4
   local.get $3
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $4
   local.get $4
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
  end
  local.get $0
  global.set $~lib/rt/stub/offset
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/rt/stub/__alloc (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 224
   i32.const 288
   i32.const 33
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.const 4
  i32.add
  local.set $2
  local.get $0
  local.set $3
  local.get $3
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $4
  local.get $2
  local.get $4
  i32.add
  call $~lib/rt/stub/maybeGrowMemory
  local.get $1
  local.get $4
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $2
 )
 (func $~lib/rt/common/OBJECT#set:gcInfo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/rt/common/OBJECT#set:gcInfo2 (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/rt/common/OBJECT#set:rtId (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/rt/common/OBJECT#set:rtSize (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
 )
 (func $~lib/rt/stub/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 224
   i32.const 288
   i32.const 86
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16
  local.get $0
  i32.add
  call $~lib/rt/stub/__alloc
  local.set $2
  local.get $2
  i32.const 4
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/rt/common/OBJECT#set:gcInfo
  local.get $3
  i32.const 0
  call $~lib/rt/common/OBJECT#set:gcInfo2
  local.get $3
  local.get $1
  call $~lib/rt/common/OBJECT#set:rtId
  local.get $3
  local.get $0
  call $~lib/rt/common/OBJECT#set:rtSize
  local.get $2
  i32.const 16
  i32.add
 )
 (func $~lib/as-bignum/integer/u128/u128#set:lo (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store
 )
 (func $~lib/as-bignum/integer/u128/u128#set:hi (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=8
 )
 (func $~lib/as-bignum/integer/u128/u128#constructor (param $0 i32) (param $1 i64) (param $2 i64) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  call $~lib/as-bignum/integer/u128/u128#set:lo
  local.get $0
  local.get $2
  call $~lib/as-bignum/integer/u128/u128#set:hi
  local.get $0
 )
 (func $~lib/string/String#charCodeAt (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
 )
 (func $~lib/array/Array<u8>#__uget (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u
 )
 (func $~lib/as-bignum/globals/__multi3 (param $0 i64) (param $1 i64) (param $2 i64) (param $3 i64) (result i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  local.get $0
  local.set $4
  local.get $2
  local.set $5
  local.get $4
  i64.const 4294967295
  i64.and
  local.set $8
  local.get $4
  i64.const 32
  i64.shr_u
  local.set $4
  local.get $5
  i64.const 4294967295
  i64.and
  local.set $9
  local.get $5
  i64.const 32
  i64.shr_u
  local.set $5
  local.get $8
  local.get $9
  i64.mul
  local.set $10
  local.get $10
  i64.const 4294967295
  i64.and
  local.set $11
  local.get $4
  local.get $9
  i64.mul
  local.get $10
  i64.const 32
  i64.shr_u
  i64.add
  local.set $10
  local.get $10
  i64.const 4294967295
  i64.and
  local.set $7
  local.get $10
  i64.const 32
  i64.shr_u
  local.set $6
  local.get $8
  local.get $5
  i64.mul
  local.get $7
  i64.add
  local.set $10
  local.get $10
  i64.const 32
  i64.shl
  local.get $11
  i64.or
  local.set $12
  local.get $4
  local.get $5
  i64.mul
  local.get $6
  i64.add
  local.set $13
  local.get $13
  local.get $1
  local.get $2
  i64.mul
  i64.add
  local.set $13
  local.get $13
  local.get $0
  local.get $3
  i64.mul
  i64.add
  local.set $13
  local.get $13
  local.get $10
  i64.const 32
  i64.shr_u
  i64.add
  local.set $13
  local.get $13
  global.set $~lib/as-bignum/globals/__res128_hi
  local.get $12
 )
 (func $~lib/as-bignum/utils/atou128 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  (local $15 i64)
  (local $16 i64)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 96
   i32.const 144
   i32.const 134
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $2
  i32.eqz
  if
   i32.const 0
   i64.const 0
   i64.const 0
   call $~lib/as-bignum/integer/u128/u128#constructor
   return
  end
  local.get $0
  i32.const 0
  call $~lib/string/String#charCodeAt
  local.set $3
  local.get $2
  i32.const 1
  i32.eq
  if (result i32)
   local.get $3
   i32.const 48
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 0
   i64.const 0
   i64.const 0
   call $~lib/as-bignum/integer/u128/u128#constructor
   return
  end
  local.get $3
  i32.const 45
  i32.eq
  local.set $4
  local.get $4
  local.get $3
  i32.const 43
  i32.eq
  i32.or
  i32.const 0
  i32.ne
  local.set $5
  local.get $0
  local.get $5
  call $~lib/string/String#charCodeAt
  i32.const 48
  i32.eq
  if
   local.get $0
   local.get $5
   i32.const 1
   i32.add
   local.tee $5
   call $~lib/string/String#charCodeAt
   local.set $6
   local.get $6
   i32.const 120
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $6
    i32.const 88
    i32.eq
   end
   if
    i32.const 16
    local.set $1
    local.get $5
    i32.const 1
    i32.add
    local.set $5
   else
    local.get $6
    i32.const 111
    i32.eq
    if (result i32)
     i32.const 1
    else
     local.get $6
     i32.const 79
     i32.eq
    end
    if
     i32.const 8
     local.set $1
     local.get $5
     i32.const 1
     i32.add
     local.set $5
    else
     local.get $6
     i32.const 98
     i32.eq
     if (result i32)
      i32.const 1
     else
      local.get $6
      i32.const 66
      i32.eq
     end
     if
      i32.const 2
      local.set $1
      local.get $5
      i32.const 1
      i32.add
      local.set $5
     end
    end
   end
  end
  i32.const 0
  i64.const 0
  i64.const 0
  call $~lib/as-bignum/integer/u128/u128#constructor
  local.set $7
  global.get $~lib/as-bignum/utils/RadixCharsTable
  local.set $8
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  block $break|0
   block $case3|0
    block $case2|0
     block $case1|0
      block $case0|0
       local.get $1
       local.set $6
       local.get $6
       i32.const 2
       i32.eq
       br_if $case0|0
       local.get $6
       i32.const 10
       i32.eq
       br_if $case1|0
       local.get $6
       i32.const 16
       i32.eq
       br_if $case2|0
       br $case3|0
      end
      block $do-break|1
       loop $do-continue|1
        local.get $0
        local.get $5
        call $~lib/string/String#charCodeAt
        i32.const 48
        i32.sub
        local.set $6
        local.get $6
        i32.const 2
        i32.ge_u
        if
         br $do-break|1
        end
        local.get $7
        local.set $10
        i32.const 1
        local.set $9
        local.get $9
        i32.const 127
        i32.and
        local.set $9
        local.get $9
        i64.extend_i32_s
        local.set $11
        local.get $11
        i64.const 127
        i64.add
        local.get $11
        i64.or
        i64.const 64
        i64.and
        i64.const 6
        i64.shr_u
        i64.const 1
        i64.sub
        local.set $12
        local.get $11
        i64.const 6
        i64.shr_u
        i64.const 1
        i64.sub
        local.set $13
        local.get $11
        i64.const 63
        i64.and
        local.set $11
        local.get $10
        i64.load
        local.set $14
        local.get $14
        local.get $11
        i64.shl
        local.set $15
        local.get $15
        local.get $13
        i64.const -1
        i64.xor
        i64.and
        local.set $16
        local.get $16
        local.get $10
        i64.load offset=8
        local.get $11
        i64.shl
        local.get $14
        i64.const 64
        local.get $11
        i64.sub
        i64.shr_u
        local.get $12
        i64.and
        i64.or
        local.get $13
        i64.and
        i64.or
        local.set $16
        i32.const 0
        local.get $15
        local.get $13
        i64.and
        local.get $16
        call $~lib/as-bignum/integer/u128/u128#constructor
        local.set $7
        local.get $7
        local.set $10
        local.get $6
        i64.extend_i32_u
        local.set $11
        i32.const 0
        local.get $11
        i64.const 0
        call $~lib/as-bignum/integer/u128/u128#constructor
        local.set $9
        i32.const 0
        local.get $10
        i64.load
        local.get $9
        i64.load
        i64.or
        local.get $10
        i64.load offset=8
        local.get $9
        i64.load offset=8
        i64.or
        call $~lib/as-bignum/integer/u128/u128#constructor
        local.set $7
        local.get $5
        i32.const 1
        i32.add
        local.tee $5
        local.get $2
        i32.lt_s
        local.set $10
        local.get $10
        br_if $do-continue|1
       end
      end
      br $break|0
     end
     block $do-break|2
      loop $do-continue|2
       local.get $0
       local.get $5
       call $~lib/string/String#charCodeAt
       i32.const 48
       i32.sub
       local.set $10
       local.get $10
       i32.const 10
       i32.ge_u
       if
        br $do-break|2
       end
       local.get $7
       local.set $17
       i32.const 3
       local.set $9
       local.get $9
       i32.const 127
       i32.and
       local.set $9
       local.get $9
       i64.extend_i32_s
       local.set $11
       local.get $11
       i64.const 127
       i64.add
       local.get $11
       i64.or
       i64.const 64
       i64.and
       i64.const 6
       i64.shr_u
       i64.const 1
       i64.sub
       local.set $16
       local.get $11
       i64.const 6
       i64.shr_u
       i64.const 1
       i64.sub
       local.set $15
       local.get $11
       i64.const 63
       i64.and
       local.set $11
       local.get $17
       i64.load
       local.set $14
       local.get $14
       local.get $11
       i64.shl
       local.set $13
       local.get $13
       local.get $15
       i64.const -1
       i64.xor
       i64.and
       local.set $12
       local.get $12
       local.get $17
       i64.load offset=8
       local.get $11
       i64.shl
       local.get $14
       i64.const 64
       local.get $11
       i64.sub
       i64.shr_u
       local.get $16
       i64.and
       i64.or
       local.get $15
       i64.and
       i64.or
       local.set $12
       i32.const 0
       local.get $13
       local.get $15
       i64.and
       local.get $12
       call $~lib/as-bignum/integer/u128/u128#constructor
       local.set $18
       local.get $7
       local.set $17
       i32.const 1
       local.set $9
       local.get $9
       i32.const 127
       i32.and
       local.set $9
       local.get $9
       i64.extend_i32_s
       local.set $12
       local.get $12
       i64.const 127
       i64.add
       local.get $12
       i64.or
       i64.const 64
       i64.and
       i64.const 6
       i64.shr_u
       i64.const 1
       i64.sub
       local.set $13
       local.get $12
       i64.const 6
       i64.shr_u
       i64.const 1
       i64.sub
       local.set $14
       local.get $12
       i64.const 63
       i64.and
       local.set $12
       local.get $17
       i64.load
       local.set $15
       local.get $15
       local.get $12
       i64.shl
       local.set $16
       local.get $16
       local.get $14
       i64.const -1
       i64.xor
       i64.and
       local.set $11
       local.get $11
       local.get $17
       i64.load offset=8
       local.get $12
       i64.shl
       local.get $15
       i64.const 64
       local.get $12
       i64.sub
       i64.shr_u
       local.get $13
       i64.and
       i64.or
       local.get $14
       i64.and
       i64.or
       local.set $11
       i32.const 0
       local.get $16
       local.get $14
       i64.and
       local.get $11
       call $~lib/as-bignum/integer/u128/u128#constructor
       local.set $9
       local.get $18
       i64.load
       local.set $11
       local.get $11
       local.get $9
       i64.load
       i64.add
       local.set $16
       local.get $18
       i64.load offset=8
       local.get $9
       i64.load offset=8
       i64.add
       local.get $16
       local.get $11
       i64.lt_u
       i64.extend_i32_u
       i64.add
       local.set $15
       i32.const 0
       local.get $16
       local.get $15
       call $~lib/as-bignum/integer/u128/u128#constructor
       local.set $7
       local.get $7
       local.set $9
       local.get $10
       i64.extend_i32_u
       local.set $12
       i32.const 0
       local.get $12
       i64.const 0
       call $~lib/as-bignum/integer/u128/u128#constructor
       local.set $17
       local.get $9
       i64.load
       local.set $12
       local.get $12
       local.get $17
       i64.load
       i64.add
       local.set $15
       local.get $9
       i64.load offset=8
       local.get $17
       i64.load offset=8
       i64.add
       local.get $15
       local.get $12
       i64.lt_u
       i64.extend_i32_u
       i64.add
       local.set $16
       i32.const 0
       local.get $15
       local.get $16
       call $~lib/as-bignum/integer/u128/u128#constructor
       local.set $7
       local.get $5
       i32.const 1
       i32.add
       local.tee $5
       local.get $2
       i32.lt_s
       local.set $9
       local.get $9
       br_if $do-continue|2
      end
     end
     br $break|0
    end
    block $do-break|3
     loop $do-continue|3
      local.get $0
      local.get $5
      call $~lib/string/String#charCodeAt
      i32.const 48
      i32.sub
      local.set $9
      local.get $9
      i32.const 122
      i32.const 48
      i32.sub
      i32.gt_u
      if
       br $do-break|3
      end
      local.get $8
      local.get $9
      call $~lib/array/Array<u8>#__uget
      local.set $17
      local.get $17
      i32.const 16
      i32.ge_u
      if
       br $do-break|3
      end
      local.get $7
      local.set $19
      i32.const 4
      local.set $18
      local.get $18
      i32.const 127
      i32.and
      local.set $18
      local.get $18
      i64.extend_i32_s
      local.set $16
      local.get $16
      i64.const 127
      i64.add
      local.get $16
      i64.or
      i64.const 64
      i64.and
      i64.const 6
      i64.shr_u
      i64.const 1
      i64.sub
      local.set $15
      local.get $16
      i64.const 6
      i64.shr_u
      i64.const 1
      i64.sub
      local.set $12
      local.get $16
      i64.const 63
      i64.and
      local.set $16
      local.get $19
      i64.load
      local.set $11
      local.get $11
      local.get $16
      i64.shl
      local.set $14
      local.get $14
      local.get $12
      i64.const -1
      i64.xor
      i64.and
      local.set $13
      local.get $13
      local.get $19
      i64.load offset=8
      local.get $16
      i64.shl
      local.get $11
      i64.const 64
      local.get $16
      i64.sub
      i64.shr_u
      local.get $15
      i64.and
      i64.or
      local.get $12
      i64.and
      i64.or
      local.set $13
      i32.const 0
      local.get $14
      local.get $12
      i64.and
      local.get $13
      call $~lib/as-bignum/integer/u128/u128#constructor
      local.set $7
      local.get $7
      local.set $19
      local.get $17
      i64.extend_i32_u
      local.set $16
      i32.const 0
      local.get $16
      i64.const 0
      call $~lib/as-bignum/integer/u128/u128#constructor
      local.set $18
      i32.const 0
      local.get $19
      i64.load
      local.get $18
      i64.load
      i64.or
      local.get $19
      i64.load offset=8
      local.get $18
      i64.load offset=8
      i64.or
      call $~lib/as-bignum/integer/u128/u128#constructor
      local.set $7
      local.get $5
      i32.const 1
      i32.add
      local.tee $5
      local.get $2
      i32.lt_s
      local.set $19
      local.get $19
      br_if $do-continue|3
     end
    end
    br $break|0
   end
   local.get $1
   i64.extend_i32_s
   local.set $15
   i32.const 0
   local.get $15
   i64.const 0
   call $~lib/as-bignum/integer/u128/u128#constructor
   local.set $19
   block $do-break|4
    loop $do-continue|4
     local.get $0
     local.get $5
     call $~lib/string/String#charCodeAt
     i32.const 48
     i32.sub
     local.set $18
     local.get $18
     i32.const 122
     i32.const 48
     i32.sub
     i32.gt_u
     if
      br $do-break|4
     end
     local.get $8
     local.get $18
     call $~lib/array/Array<u8>#__uget
     local.set $20
     local.get $20
     local.get $1
     i32.const 255
     i32.and
     i32.ge_u
     if
      br $do-break|4
     end
     local.get $7
     local.set $22
     local.get $19
     local.set $21
     i32.const 0
     local.get $22
     i64.load
     local.get $22
     i64.load offset=8
     local.get $21
     i64.load
     local.get $21
     i64.load offset=8
     call $~lib/as-bignum/globals/__multi3
     global.get $~lib/as-bignum/globals/__res128_hi
     call $~lib/as-bignum/integer/u128/u128#constructor
     local.set $7
     local.get $7
     local.set $22
     local.get $20
     i64.extend_i32_u
     local.set $12
     i32.const 0
     local.get $12
     i64.const 0
     call $~lib/as-bignum/integer/u128/u128#constructor
     local.set $21
     local.get $22
     i64.load
     local.set $12
     local.get $12
     local.get $21
     i64.load
     i64.add
     local.set $15
     local.get $22
     i64.load offset=8
     local.get $21
     i64.load offset=8
     i64.add
     local.get $15
     local.get $12
     i64.lt_u
     i64.extend_i32_u
     i64.add
     local.set $16
     i32.const 0
     local.get $15
     local.get $16
     call $~lib/as-bignum/integer/u128/u128#constructor
     local.set $7
     local.get $5
     i32.const 1
     i32.add
     local.tee $5
     local.get $2
     i32.lt_s
     local.set $22
     local.get $22
     br_if $do-continue|4
    end
   end
   br $break|0
  end
  local.get $4
  if (result i32)
   local.get $7
   local.set $21
   local.get $21
   i64.load
   i64.const -1
   i64.xor
   local.set $16
   local.get $21
   i64.load offset=8
   i64.const -1
   i64.xor
   local.set $15
   local.get $16
   i64.const 1
   i64.add
   local.set $12
   i32.const 0
   local.get $12
   local.get $15
   local.get $12
   local.get $16
   i64.lt_u
   i64.extend_i32_u
   i64.add
   call $~lib/as-bignum/integer/u128/u128#constructor
  else
   local.get $7
  end
 )
 (func $start:assembly/multicall/utils
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__heap_base
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  global.set $~lib/rt/stub/startOffset
  global.get $~lib/rt/stub/startOffset
  global.set $~lib/rt/stub/offset
  i32.const 32
  local.set $0
  i32.const 10
  local.set $1
  local.get $0
  local.get $1
  call $~lib/as-bignum/utils/atou128
  global.set $assembly/multicall/utils/StorageCostUtils.STORAGE_PRICE_PER_BYTE
 )
 (func $start:assembly/multicall/jobs
  call $start:assembly/multicall/utils
 )
 (func $~lib/util/memory/memcpy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  loop $while-continue|0
   local.get $2
   if (result i32)
    local.get $1
    i32.const 3
    i32.and
   else
    i32.const 0
   end
   local.set $5
   local.get $5
   if
    local.get $0
    local.tee $6
    i32.const 1
    i32.add
    local.set $0
    local.get $6
    local.get $1
    local.tee $6
    i32.const 1
    i32.add
    local.set $1
    local.get $6
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.const 3
  i32.and
  i32.const 0
  i32.eq
  if
   loop $while-continue|1
    local.get $2
    i32.const 16
    i32.ge_u
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $1
     i32.load
     i32.store
     local.get $0
     i32.const 4
     i32.add
     local.get $1
     i32.const 4
     i32.add
     i32.load
     i32.store
     local.get $0
     i32.const 8
     i32.add
     local.get $1
     i32.const 8
     i32.add
     i32.load
     i32.store
     local.get $0
     i32.const 12
     i32.add
     local.get $1
     i32.const 12
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 16
     i32.add
     local.set $1
     local.get $0
     i32.const 16
     i32.add
     local.set $0
     local.get $2
     i32.const 16
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
   local.get $2
   i32.const 8
   i32.and
   if
    local.get $0
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.get $1
    i32.const 4
    i32.add
    i32.load
    i32.store
    local.get $0
    i32.const 8
    i32.add
    local.set $0
    local.get $1
    i32.const 8
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 4
   i32.and
   if
    local.get $0
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    local.get $1
    i32.const 4
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 2
   i32.and
   if
    local.get $0
    local.get $1
    i32.load16_u
    i32.store16
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 1
   i32.and
   if
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
   end
   return
  end
  local.get $2
  i32.const 32
  i32.ge_u
  if
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       local.get $0
       i32.const 3
       i32.and
       local.set $5
       local.get $5
       i32.const 1
       i32.eq
       br_if $case0|2
       local.get $5
       i32.const 2
       i32.eq
       br_if $case1|2
       local.get $5
       i32.const 3
       i32.eq
       br_if $case2|2
       br $break|2
      end
      local.get $1
      i32.load
      local.set $3
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $2
      i32.const 3
      i32.sub
      local.set $2
      loop $while-continue|3
       local.get $2
       i32.const 17
       i32.ge_u
       local.set $5
       local.get $5
       if
        local.get $1
        i32.const 1
        i32.add
        i32.load
        local.set $4
        local.get $0
        local.get $3
        i32.const 24
        i32.shr_u
        local.get $4
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 5
        i32.add
        i32.load
        local.set $3
        local.get $0
        i32.const 4
        i32.add
        local.get $4
        i32.const 24
        i32.shr_u
        local.get $3
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 9
        i32.add
        i32.load
        local.set $4
        local.get $0
        i32.const 8
        i32.add
        local.get $3
        i32.const 24
        i32.shr_u
        local.get $4
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 13
        i32.add
        i32.load
        local.set $3
        local.get $0
        i32.const 12
        i32.add
        local.get $4
        i32.const 24
        i32.shr_u
        local.get $3
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 16
        i32.add
        local.set $1
        local.get $0
        i32.const 16
        i32.add
        local.set $0
        local.get $2
        i32.const 16
        i32.sub
        local.set $2
        br $while-continue|3
       end
      end
      br $break|2
     end
     local.get $1
     i32.load
     local.set $3
     local.get $0
     local.tee $5
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     local.get $1
     local.tee $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $0
     local.tee $5
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     local.get $1
     local.tee $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
     loop $while-continue|4
      local.get $2
      i32.const 18
      i32.ge_u
      local.set $5
      local.get $5
      if
       local.get $1
       i32.const 2
       i32.add
       i32.load
       local.set $4
       local.get $0
       local.get $3
       i32.const 16
       i32.shr_u
       local.get $4
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 6
       i32.add
       i32.load
       local.set $3
       local.get $0
       i32.const 4
       i32.add
       local.get $4
       i32.const 16
       i32.shr_u
       local.get $3
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 10
       i32.add
       i32.load
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.get $3
       i32.const 16
       i32.shr_u
       local.get $4
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 14
       i32.add
       i32.load
       local.set $3
       local.get $0
       i32.const 12
       i32.add
       local.get $4
       i32.const 16
       i32.shr_u
       local.get $3
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 16
       i32.add
       local.set $1
       local.get $0
       i32.const 16
       i32.add
       local.set $0
       local.get $2
       i32.const 16
       i32.sub
       local.set $2
       br $while-continue|4
      end
     end
     br $break|2
    end
    local.get $1
    i32.load
    local.set $3
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    loop $while-continue|5
     local.get $2
     i32.const 19
     i32.ge_u
     local.set $5
     local.get $5
     if
      local.get $1
      i32.const 3
      i32.add
      i32.load
      local.set $4
      local.get $0
      local.get $3
      i32.const 8
      i32.shr_u
      local.get $4
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 7
      i32.add
      i32.load
      local.set $3
      local.get $0
      i32.const 4
      i32.add
      local.get $4
      i32.const 8
      i32.shr_u
      local.get $3
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 11
      i32.add
      i32.load
      local.set $4
      local.get $0
      i32.const 8
      i32.add
      local.get $3
      i32.const 8
      i32.shr_u
      local.get $4
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 15
      i32.add
      i32.load
      local.set $3
      local.get $0
      i32.const 12
      i32.add
      local.get $4
      i32.const 8
      i32.shr_u
      local.get $3
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      local.get $0
      i32.const 16
      i32.add
      local.set $0
      local.get $2
      i32.const 16
      i32.sub
      local.set $2
      br $while-continue|5
     end
    end
    br $break|2
   end
  end
  local.get $2
  i32.const 16
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 8
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 4
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 2
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
 )
 (func $~lib/memory/memory.copy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.set $5
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   local.get $5
   local.get $4
   i32.eq
   if
    br $~lib/util/memory/memmove|inlined.0
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $4
   local.get $5
   i32.sub
   local.get $3
   i32.sub
   i32.const 0
   local.get $3
   i32.const 1
   i32.shl
   i32.sub
   i32.le_u
   if
    local.get $5
    local.get $4
    local.get $3
    call $~lib/util/memory/memcpy
    br $~lib/util/memory/memmove|inlined.0
   end
   local.get $5
   local.get $4
   i32.lt_u
   if
    i32.const 0
    i32.const 2
    i32.lt_s
    drop
    local.get $4
    i32.const 7
    i32.and
    local.get $5
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|0
      local.get $5
      i32.const 7
      i32.and
      local.set $6
      local.get $6
      if
       local.get $3
       i32.eqz
       if
        br $~lib/util/memory/memmove|inlined.0
       end
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       local.get $5
       local.tee $7
       i32.const 1
       i32.add
       local.set $5
       local.get $7
       local.get $4
       local.tee $7
       i32.const 1
       i32.add
       local.set $4
       local.get $7
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $3
      i32.const 8
      i32.ge_u
      local.set $6
      local.get $6
      if
       local.get $5
       local.get $4
       i64.load
       i64.store
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $5
       i32.const 8
       i32.add
       local.set $5
       local.get $4
       i32.const 8
       i32.add
       local.set $4
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $3
     local.set $6
     local.get $6
     if
      local.get $5
      local.tee $7
      i32.const 1
      i32.add
      local.set $5
      local.get $7
      local.get $4
      local.tee $7
      i32.const 1
      i32.add
      local.set $4
      local.get $7
      i32.load8_u
      i32.store8
      local.get $3
      i32.const 1
      i32.sub
      local.set $3
      br $while-continue|2
     end
    end
   else
    i32.const 0
    i32.const 2
    i32.lt_s
    drop
    local.get $4
    i32.const 7
    i32.and
    local.get $5
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|3
      local.get $5
      local.get $3
      i32.add
      i32.const 7
      i32.and
      local.set $6
      local.get $6
      if
       local.get $3
       i32.eqz
       if
        br $~lib/util/memory/memmove|inlined.0
       end
       local.get $5
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.add
       local.get $4
       local.get $3
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $3
      i32.const 8
      i32.ge_u
      local.set $6
      local.get $6
      if
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $5
       local.get $3
       i32.add
       local.get $4
       local.get $3
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $3
     local.set $6
     local.get $6
     if
      local.get $5
      local.get $3
      i32.const 1
      i32.sub
      local.tee $3
      i32.add
      local.get $4
      local.get $3
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $2
  local.get $1
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $3
  local.get $2
  local.get $3
  i32.add
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  if
   i32.const 528
   return
  end
  local.get $4
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  local.get $0
  local.get $2
  call $~lib/memory/memory.copy
  local.get $5
  local.get $2
  i32.add
  local.get $1
  local.get $3
  call $~lib/memory/memory.copy
  local.get $5
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/string/String#concat
 )
 (func $~lib/rt/stub/__link (param $0 i32) (param $1 i32) (param $2 i32)
  nop
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#set:_elementPrefix (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 8
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#set:_elementPrefix
  local.get $0
  local.get $1
  global.get $~lib/near-sdk-core/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#set:_elementPrefix
  local.get $0
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#set:_map (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_lengthKey (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_elementPrefix (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_length (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<i32> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
  return
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 9
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_elementPrefix
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_lengthKey
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<i32>
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_length
  local.get $0
  local.get $1
  global.get $~lib/near-sdk-core/collections/index/collections._KEY_LENGTH_SUFFIX
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_lengthKey
  local.get $0
  local.get $1
  global.get $~lib/near-sdk-core/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_elementPrefix
  local.get $0
  i32.const -1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_length
  local.get $0
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#set:_vector (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 6
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>>
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#set:_map
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>>
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#set:_vector
  local.get $0
  i32.const 0
  i32.const 560
  local.get $1
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#constructor
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#set:_map
  local.get $0
  i32.const 0
  i32.const 624
  local.get $1
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#constructor
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#set:_vector
  local.get $0
 )
 (func $assembly/multicall/utils/Croncat#set:KEY_CRONCAT_MANAGER_ADDRESS (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/utils/Croncat#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 11
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/utils/Croncat#set:KEY_CRONCAT_MANAGER_ADDRESS
  local.get $0
  local.get $1
  call $assembly/multicall/utils/Croncat#set:KEY_CRONCAT_MANAGER_ADDRESS
  local.get $0
 )
 (func $assembly/multicall/jobs/Jobs#set:croncat (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/jobs/Jobs#set:KEY_BOND (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#set:_elementPrefix (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 19
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#set:_elementPrefix
  local.get $0
  local.get $1
  global.get $~lib/near-sdk-core/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#set:_elementPrefix
  local.get $0
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set:_map (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_lengthKey (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_elementPrefix (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_length (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 21
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_elementPrefix
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_lengthKey
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<i32>
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_length
  local.get $0
  local.get $1
  global.get $~lib/near-sdk-core/collections/index/collections._KEY_LENGTH_SUFFIX
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_lengthKey
  local.get $0
  local.get $1
  global.get $~lib/near-sdk-core/collections/index/collections._KEY_ELEMENT_SUFFIX
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_elementPrefix
  local.get $0
  i32.const -1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_length
  local.get $0
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set:_entries (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 18
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set:_map
  local.get $0
  i32.const 0
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set:_entries
  local.get $0
  i32.const 0
  local.get $1
  i32.const 896
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#constructor
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set:_map
  local.get $0
  i32.const 0
  local.get $1
  i32.const 928
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#constructor
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set:_entries
  local.get $0
 )
 (func $assembly/multicall/jobs/Jobs#set:jobMap (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/jobs/Jobs#set:KEY_JOB_COUNT (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<assembly/multicall/utils/Croncat> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $assembly/multicall/jobs/Jobs#set:GAS_ACTIVATE (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=16
 )
 (func $assembly/multicall/jobs/Jobs#set:GAS_EDIT (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=24
 )
 (func $assembly/multicall/jobs/Jobs#set:GAS_DELETE (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=32
 )
 (func $assembly/multicall/jobs/Jobs#set:GAS_CREATE_TASK_CALLBACK (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=40
 )
 (func $assembly/multicall/jobs/Jobs#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 48
   i32.const 10
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/jobs/Jobs#set:KEY_BOND
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/jobs/Jobs#set:KEY_JOB_COUNT
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<assembly/multicall/utils/Croncat>
  call $assembly/multicall/jobs/Jobs#set:croncat
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>>
  call $assembly/multicall/jobs/Jobs#set:jobMap
  local.get $0
  i64.const 40000000000000
  call $assembly/multicall/jobs/Jobs#set:GAS_ACTIVATE
  local.get $0
  i64.const 20000000000000
  call $assembly/multicall/jobs/Jobs#set:GAS_EDIT
  local.get $0
  i64.const 15000000000000
  call $assembly/multicall/jobs/Jobs#set:GAS_DELETE
  local.get $0
  i64.const 15000000000000
  call $assembly/multicall/jobs/Jobs#set:GAS_CREATE_TASK_CALLBACK
  local.get $0
  i32.const 0
  local.get $1
  call $assembly/multicall/utils/Croncat#constructor
  call $assembly/multicall/jobs/Jobs#set:croncat
  local.get $0
  local.get $2
  call $assembly/multicall/jobs/Jobs#set:KEY_BOND
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#constructor
  call $assembly/multicall/jobs/Jobs#set:jobMap
  local.get $0
  local.get $4
  call $assembly/multicall/jobs/Jobs#set:KEY_JOB_COUNT
  local.get $0
 )
 (func $start:assembly/multicall/index
  call $start:assembly/multicall/jobs
  i32.const 0
  i32.const 672
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#constructor
  global.set $assembly/multicall/index/admins
  i32.const 0
  i32.const 704
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#constructor
  global.set $assembly/multicall/index/tokens
  i32.const 0
  global.get $assembly/multicall/index/KEY_CRONCAT_MANAGER_ADDRESS
  global.get $assembly/multicall/index/KEY_JOB_BOND
  global.get $assembly/multicall/index/KEY_JOB_MAP
  global.get $assembly/multicall/index/KEY_JOB_COUNT
  call $assembly/multicall/jobs/Jobs#constructor
  global.set $assembly/multicall/index/_jobs
 )
 (func $~lib/near-sdk-bindgen/index/input (param $0 i64)
  local.get $0
  call $~lib/near-sdk-core/env/env/env.input
 )
 (func $~lib/near-sdk-bindgen/index/register_len (param $0 i64) (result i64)
  local.get $0
  call $~lib/near-sdk-core/env/env/env.register_len
 )
 (func $~lib/near-sdk-bindgen/index/panic
  call $~lib/near-sdk-core/env/env/env.panic
 )
 (func $~lib/memory/memory.fill (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  block $~lib/util/memory/memset|inlined.0
   local.get $0
   local.set $5
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   i32.const 0
   i32.const 1
   i32.gt_s
   drop
   local.get $3
   i32.eqz
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $3
   i32.add
   local.set $6
   local.get $5
   local.get $4
   i32.store8
   local.get $6
   i32.const 1
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 2
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $4
   i32.store8 offset=1
   local.get $5
   local.get $4
   i32.store8 offset=2
   local.get $6
   i32.const 2
   i32.sub
   local.get $4
   i32.store8
   local.get $6
   i32.const 3
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 6
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $4
   i32.store8 offset=3
   local.get $6
   i32.const 4
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 8
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   i32.const 0
   local.get $5
   i32.sub
   i32.const 3
   i32.and
   local.set $7
   local.get $5
   local.get $7
   i32.add
   local.set $5
   local.get $3
   local.get $7
   i32.sub
   local.set $3
   local.get $3
   i32.const -4
   i32.and
   local.set $3
   i32.const -1
   i32.const 255
   i32.div_u
   local.get $4
   i32.const 255
   i32.and
   i32.mul
   local.set $8
   local.get $5
   local.get $3
   i32.add
   local.set $6
   local.get $5
   local.get $8
   i32.store
   local.get $6
   i32.const 4
   i32.sub
   local.get $8
   i32.store
   local.get $3
   i32.const 8
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $8
   i32.store offset=4
   local.get $5
   local.get $8
   i32.store offset=8
   local.get $6
   i32.const 12
   i32.sub
   local.get $8
   i32.store
   local.get $6
   i32.const 8
   i32.sub
   local.get $8
   i32.store
   local.get $3
   i32.const 24
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $8
   i32.store offset=12
   local.get $5
   local.get $8
   i32.store offset=16
   local.get $5
   local.get $8
   i32.store offset=20
   local.get $5
   local.get $8
   i32.store offset=24
   local.get $6
   i32.const 28
   i32.sub
   local.get $8
   i32.store
   local.get $6
   i32.const 24
   i32.sub
   local.get $8
   i32.store
   local.get $6
   i32.const 20
   i32.sub
   local.get $8
   i32.store
   local.get $6
   i32.const 16
   i32.sub
   local.get $8
   i32.store
   i32.const 24
   local.get $5
   i32.const 4
   i32.and
   i32.add
   local.set $7
   local.get $5
   local.get $7
   i32.add
   local.set $5
   local.get $3
   local.get $7
   i32.sub
   local.set $3
   local.get $8
   i64.extend_i32_u
   local.get $8
   i64.extend_i32_u
   i64.const 32
   i64.shl
   i64.or
   local.set $9
   loop $while-continue|0
    local.get $3
    i32.const 32
    i32.ge_u
    local.set $10
    local.get $10
    if
     local.get $5
     local.get $9
     i64.store
     local.get $5
     local.get $9
     i64.store offset=8
     local.get $5
     local.get $9
     i64.store offset=16
     local.get $5
     local.get $9
     i64.store offset=24
     local.get $3
     i32.const 32
     i32.sub
     local.set $3
     local.get $5
     i32.const 32
     i32.add
     local.set $5
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 2
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $1
  i32.const 1073741820
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1024
   i32.const 18
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $3
  local.get $3
  i32.const 0
  local.get $1
  call $~lib/memory/memory.fill
  local.get $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 7
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/read_register (param $0 i64) (param $1 i64)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/env/env/env.read_register
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:handler (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:_state (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 28
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:handler
  local.get $0
  i32.const 0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:_state
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:handler
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONHandler#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 26
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 27
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:length_
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Handler#set:stack (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/JSON/Handler#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 25
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONHandler#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#constructor
  call $~lib/assemblyscript-json/JSON/Handler#set:stack
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:state (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:_state
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#set:lastKey (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#set:readIndex (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 29
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 528
  call $~lib/assemblyscript-json/decoder/DecoderState#set:lastKey
  local.get $0
  i32.const 0
  call $~lib/assemblyscript-json/decoder/DecoderState#set:readIndex
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/decoder/DecoderState#set:buffer
  local.get $0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  local.tee $1
  if (result i32)
   local.get $1
  else
   i32.const 1136
   i32.const 1200
   i32.const 127
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/typedarray/Uint8Array#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
 )
 (func $~lib/typedarray/Uint8Array#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 1296
   i32.const 1360
   i32.const 159
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_u
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=4
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=8
  call $~lib/typedarray/Uint8Array#get:length
  i32.ge_s
  if
   i32.const -1
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=8
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=4
  call $~lib/typedarray/Uint8Array#__get
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#isWhitespace (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 9
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 10
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 13
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 32
   i32.eq
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=4
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=8
  call $~lib/typedarray/Uint8Array#get:length
  i32.lt_s
  i32.eqz
  if
   i32.const 1424
   i32.const 1200
   i32.const 156
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=8
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=4
  local.tee $1
  i32.const 1
  i32.add
  call $~lib/assemblyscript-json/decoder/DecoderState#set:readIndex
  local.get $1
  call $~lib/typedarray/Uint8Array#__get
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#skipWhitespace (param $0 i32)
  (local $1 i32)
  loop $while-continue|0
   local.get $0
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#isWhitespace
   local.set $1
   local.get $1
   if
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
    drop
    br $while-continue|0
   end
  end
 )
 (func $~lib/assemblyscript-json/JSON/Value#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 23
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 976
   i32.const 1024
   i32.const 49
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $2
  local.get $2
  i32.const 0
  local.get $1
  call $~lib/memory/memory.fill
  local.get $2
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:buckets (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:bucketsMask (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entries (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesCapacity (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesOffset (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesCount (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 24
   i32.const 24
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:buckets
  local.get $0
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:bucketsMask
  local.get $0
  i32.const 0
  i32.const 4
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entries
  local.get $0
  i32.const 4
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesCapacity
  local.get $0
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesOffset
  local.get $0
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesCount
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Obj#set:_obj (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/JSON/Obj#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 22
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/assemblyscript-json/JSON/Obj#set:_obj
  local.get $0
  call $~lib/assemblyscript-json/JSON/Value#constructor
  local.set $0
  local.get $0
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#constructor
  call $~lib/assemblyscript-json/JSON/Obj#set:_obj
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Value.Object (result i32)
  i32.const 0
  call $~lib/assemblyscript-json/JSON/Obj#constructor
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/rt/stub/__realloc (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 288
   i32.const 45
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 4
  i32.sub
  local.set $2
  local.get $2
  i32.load
  local.set $3
  local.get $0
  local.get $3
  i32.add
  global.get $~lib/rt/stub/offset
  i32.eq
  local.set $4
  local.get $1
  local.set $5
  local.get $5
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $6
  local.get $1
  local.get $3
  i32.gt_u
  if
   local.get $4
   if
    local.get $1
    i32.const 1073741820
    i32.gt_u
    if
     i32.const 224
     i32.const 288
     i32.const 52
     i32.const 33
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $6
    i32.add
    call $~lib/rt/stub/maybeGrowMemory
    local.get $2
    local.get $6
    call $~lib/rt/common/BLOCK#set:mmInfo
   else
    local.get $6
    local.tee $5
    local.get $3
    i32.const 1
    i32.shl
    local.tee $7
    local.get $5
    local.get $7
    i32.gt_u
    select
    call $~lib/rt/stub/__alloc
    local.set $5
    local.get $5
    local.get $0
    local.get $3
    call $~lib/memory/memory.copy
    local.get $5
    local.tee $0
    i32.const 4
    i32.sub
    local.set $2
   end
  else
   local.get $4
   if
    local.get $0
    local.get $6
    i32.add
    global.set $~lib/rt/stub/offset
    local.get $2
    local.get $6
    call $~lib/rt/common/BLOCK#set:mmInfo
   end
  end
  local.get $0
 )
 (func $~lib/rt/stub/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 224
   i32.const 288
   i32.const 99
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16
  i32.sub
  i32.const 16
  local.get $1
  i32.add
  call $~lib/rt/stub/__realloc
  local.set $2
  local.get $2
  i32.const 4
  i32.sub
  local.get $1
  call $~lib/rt/common/OBJECT#set:rtSize
  local.get $2
  i32.const 16
  i32.add
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  i32.load offset=8
  local.set $4
  local.get $1
  local.get $4
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 976
    i32.const 1088
    i32.const 17
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   local.set $5
   local.get $1
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $2
   i32.shl
   local.set $6
   local.get $3
   if
    local.get $4
    i32.const 1
    i32.shl
    local.tee $7
    i32.const 1073741820
    local.tee $8
    local.get $7
    local.get $8
    i32.lt_u
    select
    local.tee $8
    local.get $6
    local.tee $7
    local.get $8
    local.get $7
    i32.gt_u
    select
    local.set $6
   end
   local.get $5
   local.get $6
   call $~lib/rt/stub/__renew
   local.set $8
   local.get $8
   local.get $4
   i32.add
   i32.const 0
   local.get $6
   local.get $4
   i32.sub
   call $~lib/memory/memory.fill
   local.get $8
   local.get $5
   i32.ne
   if
    local.get $0
    local.get $8
    i32.store
    local.get $0
    local.get $8
    i32.store offset=4
    local.get $0
    local.get $8
    i32.const 0
    call $~lib/rt/stub/__link
   end
   local.get $0
   local.get $6
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 1
  call $~lib/rt/stub/__link
  local.get $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:length_
  local.get $3
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 1520
   i32.const 1088
   i32.const 103
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/assemblyscript-json/JSON/Handler#get:peek (param $0 i32) (result i32)
  local.get $0
  i32.load
  local.get $0
  i32.load
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#__get
 )
 (func $~lib/rt/__instanceof (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=12
  local.set $2
  global.get $~lib/rt/__rtti_base
  local.set $3
  local.get $2
  local.get $3
  i32.load
  i32.le_u
  if
   loop $do-continue|0
    local.get $2
    local.get $1
    i32.eq
    if
     i32.const 1
     return
    end
    local.get $3
    i32.const 4
    i32.add
    local.get $2
    i32.const 8
    i32.mul
    i32.add
    i32.load offset=4
    local.tee $2
    local.set $4
    local.get $4
    br_if $do-continue|0
   end
  end
  i32.const 0
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  i32.const 1
  drop
  block $~lib/util/hash/hashStr|inlined.0 (result i32)
   local.get $0
   local.set $1
   local.get $1
   i32.const 0
   i32.eq
   if
    i32.const 0
    br $~lib/util/hash/hashStr|inlined.0
   end
   local.get $1
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   local.set $2
   local.get $2
   local.set $3
   local.get $1
   local.set $4
   local.get $3
   i32.const 16
   i32.ge_u
   if
    i32.const 0
    i32.const -1640531535
    i32.add
    i32.const -2048144777
    i32.add
    local.set $5
    i32.const 0
    i32.const -2048144777
    i32.add
    local.set $6
    i32.const 0
    local.set $7
    i32.const 0
    i32.const -1640531535
    i32.sub
    local.set $8
    local.get $3
    local.get $4
    i32.add
    i32.const 16
    i32.sub
    local.set $9
    loop $while-continue|0
     local.get $4
     local.get $9
     i32.le_u
     local.set $10
     local.get $10
     if
      local.get $5
      local.set $12
      local.get $4
      i32.load
      local.set $11
      local.get $12
      local.get $11
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $5
      local.get $6
      local.set $12
      local.get $4
      i32.load offset=4
      local.set $11
      local.get $12
      local.get $11
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $6
      local.get $7
      local.set $12
      local.get $4
      i32.load offset=8
      local.set $11
      local.get $12
      local.get $11
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $7
      local.get $8
      local.set $12
      local.get $4
      i32.load offset=12
      local.set $11
      local.get $12
      local.get $11
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $8
      local.get $4
      i32.const 16
      i32.add
      local.set $4
      br $while-continue|0
     end
    end
    local.get $2
    local.get $5
    i32.const 1
    i32.rotl
    local.get $6
    i32.const 7
    i32.rotl
    i32.add
    local.get $7
    i32.const 12
    i32.rotl
    i32.add
    local.get $8
    i32.const 18
    i32.rotl
    i32.add
    i32.add
    local.set $2
   else
    local.get $2
    i32.const 0
    i32.const 374761393
    i32.add
    i32.add
    local.set $2
   end
   local.get $1
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.set $9
   loop $while-continue|1
    local.get $4
    local.get $9
    i32.le_u
    local.set $8
    local.get $8
    if
     local.get $2
     local.get $4
     i32.load
     i32.const -1028477379
     i32.mul
     i32.add
     local.set $2
     local.get $2
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $2
     local.get $4
     i32.const 4
     i32.add
     local.set $4
     br $while-continue|1
    end
   end
   local.get $1
   local.get $3
   i32.add
   local.set $9
   loop $while-continue|2
    local.get $4
    local.get $9
    i32.lt_u
    local.set $8
    local.get $8
    if
     local.get $2
     local.get $4
     i32.load8_u
     i32.const 374761393
     i32.mul
     i32.add
     local.set $2
     local.get $2
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $2
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
   local.get $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   local.set $2
   local.get $2
   i32.const -2048144777
   i32.mul
   local.set $2
   local.get $2
   local.get $2
   i32.const 13
   i32.shr_u
   i32.xor
   local.set $2
   local.get $2
   i32.const -1028477379
   i32.mul
   local.set $2
   local.get $2
   local.get $2
   i32.const 16
   i32.shr_u
   i32.xor
   local.set $2
   local.get $2
  end
  return
 )
 (func $~lib/util/string/compareImpl (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $5
  local.get $2
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.set $6
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $4
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $5
   i32.const 7
   i32.and
   local.get $6
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-continue|0
     local.get $5
     i64.load
     local.get $6
     i64.load
     i64.ne
     if
      br $do-break|0
     end
     local.get $5
     i32.const 8
     i32.add
     local.set $5
     local.get $6
     i32.const 8
     i32.add
     local.set $6
     local.get $4
     i32.const 4
     i32.sub
     local.set $4
     local.get $4
     i32.const 4
     i32.ge_u
     local.set $7
     local.get $7
     br_if $do-continue|0
    end
   end
  end
  loop $while-continue|1
   local.get $4
   local.tee $7
   i32.const 1
   i32.sub
   local.set $4
   local.get $7
   local.set $7
   local.get $7
   if
    local.get $5
    i32.load16_u
    local.set $8
    local.get $6
    i32.load16_u
    local.set $9
    local.get $8
    local.get $9
    i32.ne
    if
     local.get $8
     local.get $9
     i32.sub
     return
    end
    local.get $5
    i32.const 2
    i32.add
    local.set $5
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $0
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $2
  local.get $1
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  local.get $2
  call $~lib/util/string/compareImpl
  i32.eqz
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.load
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load
  local.set $3
  loop $while-continue|0
   local.get $3
   local.set $4
   local.get $4
   if
    local.get $3
    i32.load offset=8
    local.set $5
    local.get $5
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $3
     i32.load
     local.get $1
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $3
     return
    end
    local.get $5
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $3
    br $while-continue|0
   end
  end
  i32.const 0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:value (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:key (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:taggedNext (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  local.get $1
  i32.const 1
  i32.add
  local.set $2
  i32.const 0
  local.get $2
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $3
  local.get $2
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $4
  i32.const 0
  local.get $4
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $5
  local.get $0
  i32.load offset=8
  local.set $6
  local.get $6
  local.get $0
  i32.load offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $7
  local.get $5
  local.set $8
  loop $while-continue|0
   local.get $6
   local.get $7
   i32.ne
   local.set $9
   local.get $9
   if
    local.get $6
    local.set $10
    local.get $10
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $8
     local.set $11
     local.get $10
     i32.load
     local.set $12
     local.get $11
     local.get $12
     call $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:key
     local.get $11
     local.get $10
     i32.load offset=4
     call $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:value
     local.get $12
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $1
     i32.and
     local.set $13
     local.get $3
     local.get $13
     i32.const 4
     i32.mul
     i32.add
     local.set $14
     local.get $11
     local.get $14
     i32.load
     call $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:taggedNext
     local.get $14
     local.get $8
     i32.store
     local.get $8
     i32.const 12
     i32.add
     local.set $8
    end
    local.get $6
    i32.const 12
    i32.add
    local.set $6
    br $while-continue|0
   end
  end
  local.get $0
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:buckets
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:bucketsMask
  local.get $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entries
  local.get $0
  local.get $4
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesCapacity
  local.get $0
  local.get $0
  i32.load offset=20
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesOffset
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#find
  local.set $4
  local.get $4
  if
   local.get $4
   local.get $2
   call $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:value
   i32.const 1
   drop
   local.get $0
   local.get $2
   i32.const 1
   call $~lib/rt/stub/__link
  else
   local.get $0
   i32.load offset=16
   local.get $0
   i32.load offset=12
   i32.eq
   if
    local.get $0
    local.get $0
    i32.load offset=20
    local.get $0
    i32.load offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load offset=4
    else
     local.get $0
     i32.load offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#rehash
   end
   local.get $0
   i32.load offset=8
   local.set $5
   local.get $5
   local.get $0
   local.get $0
   i32.load offset=16
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesOffset
   local.get $6
   i32.const 12
   i32.mul
   i32.add
   local.set $4
   local.get $4
   local.get $1
   call $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:key
   i32.const 1
   drop
   local.get $0
   local.get $1
   i32.const 1
   call $~lib/rt/stub/__link
   local.get $4
   local.get $2
   call $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:value
   i32.const 1
   drop
   local.get $0
   local.get $2
   i32.const 1
   call $~lib/rt/stub/__link
   local.get $0
   local.get $0
   i32.load offset=20
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:entriesCount
   local.get $0
   i32.load
   local.get $3
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $6
   local.get $4
   local.get $6
   i32.load
   call $~lib/map/MapEntry<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set:taggedNext
   local.get $6
   local.get $4
   i32.store
  end
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Obj#set<~lib/assemblyscript-json/JSON/Value> (param $0 i32) (param $1 i32) (param $2 i32)
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $0
  i32.load
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#set
  drop
  return
 )
 (func $~lib/assemblyscript-json/JSON/Arr#push (param $0 i32) (param $1 i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#push
  drop
 )
 (func $~lib/assemblyscript-json/JSON/Handler#addValue (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/string/String#get:length
  i32.const 0
  i32.eq
  if (result i32)
   local.get $0
   i32.load
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
   i32.const 0
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $0
   i32.load
   local.get $2
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#push
   drop
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/JSON/Handler#get:peek
  local.tee $3
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $3
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if
   local.get $0
   call $~lib/assemblyscript-json/JSON/Handler#get:peek
   local.tee $3
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $3
   else
    i32.const 1648
    i32.const 1712
    i32.const 78
    i32.const 8
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   local.get $2
   call $~lib/assemblyscript-json/JSON/Obj#set<~lib/assemblyscript-json/JSON/Value>
  else
   local.get $0
   call $~lib/assemblyscript-json/JSON/Handler#get:peek
   local.tee $3
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $3
    i32.const 30
    call $~lib/rt/__instanceof
   end
   if
    local.get $0
    call $~lib/assemblyscript-json/JSON/Handler#get:peek
    local.tee $3
    i32.const 30
    call $~lib/rt/__instanceof
    if (result i32)
     local.get $3
    else
     i32.const 1648
     i32.const 1712
     i32.const 80
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    call $~lib/assemblyscript-json/JSON/Arr#push
   end
  end
 )
 (func $~lib/assemblyscript-json/JSON/Handler#pushObject (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  call $~lib/assemblyscript-json/JSON/Value.Object
  local.set $2
  local.get $0
  local.get $1
  local.get $2
  call $~lib/assemblyscript-json/JSON/Handler#addValue
  local.get $0
  i32.load
  local.get $2
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#push
  drop
  i32.const 1
 )
 (func $~lib/array/Array<~lib/string/String>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<~lib/string/String>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<~lib/string/String>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<~lib/string/String>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 31
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $0
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteOffset (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load
  i32.sub
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.getDataPtr (param $0 i32) (result i32)
  local.get $0
  i32.load
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.add
 )
 (func $~lib/string/String.UTF8.decodeUnsafe (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $0
  local.set $3
  local.get $0
  local.get $1
  i32.add
  local.set $4
  local.get $4
  local.get $3
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 2112
   i32.const 749
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  local.set $6
  block $while-break|0
   loop $while-continue|0
    local.get $3
    local.get $4
    i32.lt_u
    local.set $7
    local.get $7
    if
     local.get $3
     i32.load8_u
     local.set $8
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     local.get $8
     i32.const 128
     i32.and
     i32.eqz
     if
      local.get $2
      local.get $8
      i32.eqz
      i32.and
      if
       br $while-break|0
      end
      local.get $6
      local.get $8
      i32.store16
     else
      local.get $4
      local.get $3
      i32.eq
      if
       br $while-break|0
      end
      local.get $3
      i32.load8_u
      i32.const 63
      i32.and
      local.set $9
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      local.get $8
      i32.const 224
      i32.and
      i32.const 192
      i32.eq
      if
       local.get $6
       local.get $8
       i32.const 31
       i32.and
       i32.const 6
       i32.shl
       local.get $9
       i32.or
       i32.store16
      else
       local.get $4
       local.get $3
       i32.eq
       if
        br $while-break|0
       end
       local.get $3
       i32.load8_u
       i32.const 63
       i32.and
       local.set $10
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       local.get $8
       i32.const 240
       i32.and
       i32.const 224
       i32.eq
       if
        local.get $8
        i32.const 15
        i32.and
        i32.const 12
        i32.shl
        local.get $9
        i32.const 6
        i32.shl
        i32.or
        local.get $10
        i32.or
        local.set $8
       else
        local.get $4
        local.get $3
        i32.eq
        if
         br $while-break|0
        end
        local.get $8
        i32.const 7
        i32.and
        i32.const 18
        i32.shl
        local.get $9
        i32.const 12
        i32.shl
        i32.or
        local.get $10
        i32.const 6
        i32.shl
        i32.or
        local.get $3
        i32.load8_u
        i32.const 63
        i32.and
        i32.or
        local.set $8
        local.get $3
        i32.const 1
        i32.add
        local.set $3
       end
       local.get $8
       i32.const 65536
       i32.lt_u
       if
        local.get $6
        local.get $8
        i32.store16
       else
        local.get $8
        i32.const 65536
        i32.sub
        local.set $8
        local.get $8
        i32.const 10
        i32.shr_u
        i32.const 55296
        i32.or
        local.set $11
        local.get $8
        i32.const 1023
        i32.and
        i32.const 56320
        i32.or
        local.set $12
        local.get $6
        local.get $11
        local.get $12
        i32.const 16
        i32.shl
        i32.or
        i32.store
        local.get $6
        i32.const 2
        i32.add
        local.set $6
       end
      end
     end
     local.get $6
     i32.const 2
     i32.add
     local.set $6
     br $while-continue|0
    end
   end
  end
  local.get $5
  local.get $6
  local.get $5
  i32.sub
  call $~lib/rt/stub/__renew
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.readString (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/util/index/Buffer.getDataPtr
  local.get $1
  i32.add
  local.get $2
  local.get $1
  i32.sub
  i32.const 0
  call $~lib/string/String.UTF8.decodeUnsafe
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#readString (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.load offset=8
  local.get $1
  local.get $2
  i32.const 1
  i32.sub
  call $~lib/assemblyscript-json/util/index/Buffer.readString
 )
 (func $~lib/assemblyscript-json/decoder/DecoderState#readString@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/assemblyscript-json/decoder/DecoderState#readString
 )
 (func $~lib/array/Array<~lib/string/String>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<~lib/string/String>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 1
  call $~lib/rt/stub/__link
  local.get $0
  local.get $3
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $3
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 528
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load
   local.tee $4
   if (result i32)
    local.get $4
   else
    i32.const 528
   end
   return
  end
  i32.const 0
  local.set $5
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $1
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $6
    local.get $6
    i32.const 0
    i32.ne
    if
     local.get $5
     local.get $6
     call $~lib/string/String#get:length
     i32.add
     local.set $5
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $8
  local.get $2
  call $~lib/string/String#get:length
  local.set $9
  local.get $5
  local.get $9
  local.get $3
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $10
  i32.const 0
  local.set $4
  loop $for-loop|1
   local.get $4
   local.get $3
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $6
    local.get $6
    i32.const 0
    i32.ne
    if
     local.get $6
     call $~lib/string/String#get:length
     local.set $11
     local.get $10
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $6
     local.get $11
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $8
     local.get $11
     i32.add
     local.set $8
    end
    local.get $9
    if
     local.get $10
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $9
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $8
     local.get $9
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $6
  local.get $6
  i32.const 0
  i32.ne
  if
   local.get $10
   local.get $8
   i32.const 1
   i32.shl
   i32.add
   local.get $6
   local.get $6
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   call $~lib/memory/memory.copy
  end
  local.get $10
 )
 (func $~lib/array/Array<~lib/string/String>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinStringArray
  return
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readHexDigit (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
  local.set $1
  local.get $1
  global.get $~lib/assemblyscript-json/decoder/CHAR_0
  i32.sub
  local.set $2
  local.get $2
  i32.const 9
  i32.gt_s
  if
   local.get $1
   global.get $~lib/assemblyscript-json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   local.set $2
   local.get $2
   i32.const 10
   i32.lt_s
   if (result i32)
    i32.const 1
   else
    local.get $2
    i32.const 15
    i32.gt_s
   end
   if
    local.get $1
    global.get $~lib/assemblyscript-json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    local.set $2
   end
  end
  local.get $2
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $2
   i32.const 16
   i32.lt_s
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 2480
   i32.const 1200
   i32.const 319
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/string/String.fromCodePoint (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.const 65535
  i32.gt_u
  local.set $1
  i32.const 2
  local.get $1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $2
  local.get $1
  i32.eqz
  if
   local.get $2
   local.get $0
   i32.store16
  else
   local.get $0
   i32.const 1114111
   i32.le_u
   i32.eqz
   if
    i32.const 0
    i32.const 2112
    i32.const 39
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 65536
   i32.sub
   local.set $0
   local.get $0
   i32.const 1023
   i32.and
   i32.const 56320
   i32.or
   local.set $3
   local.get $0
   i32.const 10
   i32.shr_u
   i32.const 55296
   i32.or
   local.set $4
   local.get $2
   local.get $4
   local.get $3
   i32.const 16
   i32.shl
   i32.or
   i32.store
  end
  local.get $2
 )
 (func $~lib/string/String.fromCharCode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 0
  i32.gt_s
  local.set $2
  i32.const 2
  local.get $2
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $3
  local.get $3
  local.get $0
  i32.store16
  local.get $2
  if
   local.get $3
   local.get $1
   i32.store16 offset=2
  end
  local.get $3
 )
 (func $~lib/string/String.fromCharCode@varargs (param $0 i32) (param $1 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  local.get $0
  local.get $1
  call $~lib/string/String.fromCharCode
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readEscapedChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
  local.set $1
  local.get $1
  i32.const 1920
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1920
   return
  end
  local.get $1
  i32.const 2160
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2160
   return
  end
  local.get $1
  i32.const 2192
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2192
   return
  end
  local.get $1
  i32.const 704
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2224
   return
  end
  local.get $1
  i32.const 2256
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2288
   return
  end
  local.get $1
  i32.const 2320
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2352
   return
  end
  local.get $1
  i32.const 2384
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 2416
   return
  end
  local.get $1
  i32.const 2448
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readHexDigit
   local.set $2
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readHexDigit
   local.set $3
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readHexDigit
   local.set $4
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readHexDigit
   local.set $5
   local.get $2
   i32.const 4096
   i32.mul
   local.get $3
   i32.const 256
   i32.mul
   i32.add
   local.get $4
   i32.const 16
   i32.mul
   i32.add
   local.get $5
   i32.add
   local.set $6
   local.get $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 2544
   local.get $1
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/string/String.fromCharCode@varargs
   call $~lib/string/String.__concat
   i32.const 1200
   i32.const 306
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 528
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
  i32.const 1920
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1952
   i32.const 1200
   i32.const 245
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load offset=4
  local.set $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $2
  loop $for-loop|0
   i32.const 1
   local.set $3
   local.get $3
   if
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
    local.set $4
    local.get $4
    i32.const 32
    i32.ge_s
    i32.eqz
    if
     i32.const 2032
     i32.const 1200
     i32.const 254
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $4
    i32.const 1920
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.eq
    if
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
     local.get $1
     i32.const 1
     global.set $~argumentsLength
     i32.const 0
     call $~lib/assemblyscript-json/decoder/DecoderState#readString@varargs
     local.set $5
     local.get $2
     call $~lib/array/Array<~lib/string/String>#get:length
     i32.const 0
     i32.eq
     if
      local.get $5
      return
     end
     local.get $2
     local.get $5
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $2
     i32.const 528
     call $~lib/array/Array<~lib/string/String>#join
     return
    else
     local.get $4
     i32.const 2160
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
      i32.load offset=4
      local.get $1
      i32.const 1
      i32.add
      i32.gt_s
      if
       local.get $2
       local.get $0
       call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
       local.get $1
       i32.const 1
       global.set $~argumentsLength
       i32.const 0
       call $~lib/assemblyscript-json/decoder/DecoderState#readString@varargs
       call $~lib/array/Array<~lib/string/String>#push
       drop
      end
      local.get $2
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readEscapedChar
      call $~lib/array/Array<~lib/string/String>#push
      drop
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
      i32.load offset=4
      local.set $1
     end
    end
    br $for-loop|0
   end
  end
  i32.const 528
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseKey (param $0 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readString
  call $~lib/assemblyscript-json/decoder/DecoderState#set:lastKey
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
  i32.const 2624
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 2656
   i32.const 1200
   i32.const 207
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.lt_s
  if
   i32.const 2784
   i32.const 1088
   i32.const 276
   i32.const 21
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#set:length_
  local.get $2
 )
 (func $~lib/assemblyscript-json/JSON/Handler#popObject (param $0 i32)
  local.get $0
  i32.load
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
  i32.const 1
  i32.gt_s
  if
   local.get $0
   i32.load
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#pop
   drop
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseObject (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
  i32.const 1488
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load
  local.set $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.const 528
  call $~lib/assemblyscript-json/decoder/DecoderState#set:lastKey
  local.get $0
  i32.load
  local.get $1
  call $~lib/assemblyscript-json/JSON/Handler#pushObject
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
   drop
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#skipWhitespace
   i32.const 1
   local.set $2
   loop $while-continue|0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
    i32.const 1808
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.ne
    local.set $3
    local.get $3
    if
     local.get $2
     i32.eqz
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
      i32.const 1840
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 1872
       i32.const 1200
       i32.const 190
       i32.const 11
       call $~lib/builtins/abort
       unreachable
      end
     else
      i32.const 0
      local.set $2
     end
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseKey
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseValue
     drop
     br $while-continue|0
    end
   end
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
   i32.const 1808
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 2704
    i32.const 1200
    i32.const 197
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  i32.load
  call $~lib/assemblyscript-json/JSON/Handler#popObject
  i32.const 1
 )
 (func $~lib/assemblyscript-json/JSON/Arr#set:_arr (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/JSON/Arr#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 30
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/assemblyscript-json/JSON/Arr#set:_arr
  local.get $0
  call $~lib/assemblyscript-json/JSON/Value#constructor
  local.set $0
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#constructor
  call $~lib/assemblyscript-json/JSON/Arr#set:_arr
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Value.Array (result i32)
  i32.const 0
  call $~lib/assemblyscript-json/JSON/Arr#constructor
 )
 (func $~lib/assemblyscript-json/JSON/Handler#pushArray (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  call $~lib/assemblyscript-json/JSON/Value.Array
  local.set $2
  local.get $0
  i32.load
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
  i32.const 0
  i32.eq
  if
   local.get $0
   i32.load
   local.get $2
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#push
   drop
  else
   local.get $0
   local.get $1
   local.get $2
   call $~lib/assemblyscript-json/JSON/Handler#addValue
   local.get $0
   i32.load
   local.get $2
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#push
   drop
  end
  i32.const 1
 )
 (func $~lib/assemblyscript-json/JSON/Handler#popArray (param $0 i32)
  local.get $0
  i32.load
  call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
  i32.const 1
  i32.gt_s
  if
   local.get $0
   i32.load
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#pop
   drop
  end
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
  i32.const 2832
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load
  local.set $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.const 528
  call $~lib/assemblyscript-json/decoder/DecoderState#set:lastKey
  local.get $0
  i32.load
  local.get $1
  call $~lib/assemblyscript-json/JSON/Handler#pushArray
  if
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
   drop
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#skipWhitespace
   i32.const 1
   local.set $2
   loop $while-continue|0
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
    i32.const 2864
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.ne
    local.set $3
    local.get $3
    if
     local.get $2
     i32.eqz
     if
      local.get $0
      call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
      i32.const 1840
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 1872
       i32.const 1200
       i32.const 224
       i32.const 11
       call $~lib/builtins/abort
       unreachable
      end
     else
      i32.const 0
      local.set $2
     end
     local.get $0
     call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseValue
     drop
     br $while-continue|0
    end
   end
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
   i32.const 2864
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 2896
    i32.const 1200
    i32.const 230
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
  i32.load
  call $~lib/assemblyscript-json/JSON/Handler#popArray
  i32.const 1
 )
 (func $~lib/assemblyscript-json/JSON/Str#set:_str (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/JSON/Str#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 32
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/JSON/Str#set:_str
  local.get $0
  call $~lib/assemblyscript-json/JSON/Value#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Value.String (param $0 i32) (result i32)
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/JSON/Str#constructor
 )
 (func $~lib/assemblyscript-json/JSON/Handler#setString (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $2
  call $~lib/assemblyscript-json/JSON/Value.String
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $~lib/assemblyscript-json/JSON/Handler#addValue
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseString (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
  i32.const 1920
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
  i32.load
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readString
  call $~lib/assemblyscript-json/JSON/Handler#setString
  i32.const 1
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readAndAssert (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $1
   call $~lib/string/String#get:length
   i32.lt_s
   local.set $3
   local.get $3
   if
    local.get $1
    local.get $2
    call $~lib/string/String#charCodeAt
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 3008
     local.get $1
     call $~lib/string/String.__concat
     i32.const 3056
     call $~lib/string/String.__concat
     i32.const 1200
     i32.const 396
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
 )
 (func $~lib/assemblyscript-json/JSON/Bool#set:_bool (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8
 )
 (func $~lib/assemblyscript-json/JSON/Bool#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 1
   i32.const 33
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/JSON/Bool#set:_bool
  local.get $0
  call $~lib/assemblyscript-json/JSON/Value#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Value.Bool (param $0 i32) (result i32)
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/JSON/Bool#constructor
 )
 (func $~lib/assemblyscript-json/JSON/Handler#setBoolean (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $2
  call $~lib/assemblyscript-json/JSON/Value.Bool
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $~lib/assemblyscript-json/JSON/Handler#addValue
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseBoolean (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
  global.get $~lib/assemblyscript-json/decoder/FALSE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/FALSE_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
   i32.load
   i32.const 0
   call $~lib/assemblyscript-json/JSON/Handler#setBoolean
   i32.const 1
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
  global.get $~lib/assemblyscript-json/decoder/TRUE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/TRUE_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
   i32.load
   i32.const 1
   call $~lib/assemblyscript-json/JSON/Handler#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/util/string/isSpace (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 5760
  i32.lt_u
  if
   local.get $0
   i32.const 128
   i32.or
   i32.const 160
   i32.eq
   local.get $0
   i32.const 9
   i32.sub
   i32.const 13
   i32.const 9
   i32.sub
   i32.le_u
   i32.or
   return
  end
  local.get $0
  i32.const 8192
  i32.sub
  i32.const 8202
  i32.const 8192
  i32.sub
  i32.le_u
  if
   i32.const 1
   return
  end
  block $break|0
   block $case6|0
    block $case5|0
     block $case4|0
      block $case3|0
       block $case2|0
        block $case1|0
         block $case0|0
          local.get $0
          local.set $1
          local.get $1
          i32.const 5760
          i32.eq
          br_if $case0|0
          local.get $1
          i32.const 8232
          i32.eq
          br_if $case1|0
          local.get $1
          i32.const 8233
          i32.eq
          br_if $case2|0
          local.get $1
          i32.const 8239
          i32.eq
          br_if $case3|0
          local.get $1
          i32.const 8287
          i32.eq
          br_if $case4|0
          local.get $1
          i32.const 12288
          i32.eq
          br_if $case5|0
          local.get $1
          i32.const 65279
          i32.eq
          br_if $case6|0
          br $break|0
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/math/ipow32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 1
  local.set $2
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $0
  i32.const 2
  i32.eq
  if
   i32.const 1
   local.get $1
   i32.shl
   i32.const 0
   local.get $1
   i32.const 32
   i32.lt_u
   select
   return
  end
  local.get $1
  i32.const 0
  i32.le_s
  if
   local.get $0
   i32.const -1
   i32.eq
   if
    i32.const -1
    i32.const 1
    local.get $1
    i32.const 1
    i32.and
    select
    return
   end
   local.get $1
   i32.const 0
   i32.eq
   local.get $0
   i32.const 1
   i32.eq
   i32.or
   return
  else
   local.get $1
   i32.const 1
   i32.eq
   if
    local.get $0
    return
   else
    local.get $1
    i32.const 2
    i32.eq
    if
     local.get $0
     local.get $0
     i32.mul
     return
    else
     local.get $1
     i32.const 32
     i32.lt_s
     if
      i32.const 32
      local.get $1
      i32.clz
      i32.sub
      local.set $3
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            local.get $3
            local.set $4
            local.get $4
            i32.const 5
            i32.eq
            br_if $case0|0
            local.get $4
            i32.const 4
            i32.eq
            br_if $case1|0
            local.get $4
            i32.const 3
            i32.eq
            br_if $case2|0
            local.get $4
            i32.const 2
            i32.eq
            br_if $case3|0
            local.get $4
            i32.const 1
            i32.eq
            br_if $case4|0
            br $break|0
           end
           local.get $1
           i32.const 1
           i32.and
           if
            local.get $2
            local.get $0
            i32.mul
            local.set $2
           end
           local.get $1
           i32.const 1
           i32.shr_u
           local.set $1
           local.get $0
           local.get $0
           i32.mul
           local.set $0
          end
          local.get $1
          i32.const 1
          i32.and
          if
           local.get $2
           local.get $0
           i32.mul
           local.set $2
          end
          local.get $1
          i32.const 1
          i32.shr_u
          local.set $1
          local.get $0
          local.get $0
          i32.mul
          local.set $0
         end
         local.get $1
         i32.const 1
         i32.and
         if
          local.get $2
          local.get $0
          i32.mul
          local.set $2
         end
         local.get $1
         i32.const 1
         i32.shr_u
         local.set $1
         local.get $0
         local.get $0
         i32.mul
         local.set $0
        end
        local.get $1
        i32.const 1
        i32.and
        if
         local.get $2
         local.get $0
         i32.mul
         local.set $2
        end
        local.get $1
        i32.const 1
        i32.shr_u
        local.set $1
        local.get $0
        local.get $0
        i32.mul
        local.set $0
       end
       local.get $1
       i32.const 1
       i32.and
       if
        local.get $2
        local.get $0
        i32.mul
        local.set $2
       end
      end
      local.get $2
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $1
   local.set $3
   local.get $3
   if
    local.get $1
    i32.const 1
    i32.and
    if
     local.get $2
     local.get $0
     i32.mul
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.shr_u
    local.set $1
    local.get $0
    local.get $0
    i32.mul
    local.set $0
    br $while-continue|1
   end
  end
  local.get $2
 )
 (func $~lib/math/NativeMath.scalbn (param $0 f64) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.set $2
  local.get $1
  i32.const 1023
  i32.gt_s
  if
   local.get $2
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $2
   local.get $1
   i32.const 1023
   i32.sub
   local.set $1
   local.get $1
   i32.const 1023
   i32.gt_s
   if
    local.get $2
    f64.const 8988465674311579538646525e283
    f64.mul
    local.set $2
    local.get $1
    i32.const 1023
    i32.sub
    local.tee $3
    i32.const 1023
    local.tee $4
    local.get $3
    local.get $4
    i32.lt_s
    select
    local.set $1
   end
  else
   local.get $1
   i32.const -1022
   i32.lt_s
   if
    local.get $2
    f64.const 2.2250738585072014e-308
    f64.const 9007199254740992
    f64.mul
    f64.mul
    local.set $2
    local.get $1
    i32.const 1022
    i32.const 53
    i32.sub
    i32.add
    local.set $1
    local.get $1
    i32.const -1022
    i32.lt_s
    if
     local.get $2
     f64.const 2.2250738585072014e-308
     f64.const 9007199254740992
     f64.mul
     f64.mul
     local.set $2
     local.get $1
     i32.const 1022
     i32.add
     i32.const 53
     i32.sub
     local.tee $4
     i32.const -1022
     local.tee $3
     local.get $4
     local.get $3
     i32.gt_s
     select
     local.set $1
    end
   end
  end
  local.get $2
  i64.const 1023
  local.get $1
  i64.extend_i32_s
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
 )
 (func $~lib/util/string/strtod (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i64)
  (local $18 f64)
  (local $19 i64)
  (local $20 i64)
  (local $21 i64)
  (local $22 i64)
  (local $23 i64)
  (local $24 i64)
  local.get $0
  call $~lib/string/String#get:length
  local.set $1
  local.get $1
  i32.eqz
  if
   f64.const nan:0x8000000000000
   return
  end
  local.get $0
  local.set $2
  local.get $2
  i32.load16_u
  local.set $3
  f64.const 1
  local.set $4
  loop $while-continue|0
   local.get $1
   if (result i32)
    local.get $3
    call $~lib/util/string/isSpace
   else
    i32.const 0
   end
   local.set $5
   local.get $5
   if
    local.get $2
    i32.const 2
    i32.add
    local.tee $2
    i32.load16_u
    local.set $3
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $while-continue|0
   end
  end
  local.get $1
  i32.eqz
  if
   f64.const nan:0x8000000000000
   return
  end
  local.get $3
  i32.const 45
  i32.eq
  if
   local.get $1
   i32.const 1
   i32.sub
   local.tee $1
   i32.eqz
   if
    f64.const nan:0x8000000000000
    return
   end
   local.get $2
   i32.const 2
   i32.add
   local.tee $2
   i32.load16_u
   local.set $3
   f64.const -1
   local.set $4
  else
   local.get $3
   i32.const 43
   i32.eq
   if
    local.get $1
    i32.const 1
    i32.sub
    local.tee $1
    i32.eqz
    if
     f64.const nan:0x8000000000000
     return
    end
    local.get $2
    i32.const 2
    i32.add
    local.tee $2
    i32.load16_u
    local.set $3
   end
  end
  local.get $1
  i32.const 8
  i32.ge_s
  if (result i32)
   local.get $3
   i32.const 73
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $2
   i64.load
   i64.const 29555310648492105
   i64.eq
   if (result i32)
    local.get $2
    i64.load offset=8
    i64.const 34058970405077102
    i64.eq
   else
    i32.const 0
   end
   if
    f64.const inf
    local.get $4
    f64.mul
    return
   end
   f64.const nan:0x8000000000000
   return
  end
  local.get $3
  i32.const 46
  i32.ne
  if (result i32)
   local.get $3
   i32.const 48
   i32.sub
   i32.const 10
   i32.ge_u
  else
   i32.const 0
  end
  if
   f64.const nan:0x8000000000000
   return
  end
  local.get $2
  local.set $6
  loop $while-continue|1
   local.get $3
   i32.const 48
   i32.eq
   local.set $5
   local.get $5
   if
    local.get $2
    i32.const 2
    i32.add
    local.tee $2
    i32.load16_u
    local.set $3
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $while-continue|1
   end
  end
  local.get $1
  i32.const 0
  i32.le_s
  if
   f64.const 0
   return
  end
  i32.const 0
  local.set $7
  i32.const 0
  local.set $8
  i32.const 0
  local.set $9
  i64.const 0
  local.set $10
  local.get $3
  i32.const 46
  i32.eq
  if
   local.get $6
   local.get $2
   i32.sub
   i32.eqz
   local.set $5
   local.get $2
   i32.const 2
   i32.add
   local.set $2
   local.get $1
   i32.const 1
   i32.sub
   local.set $1
   local.get $1
   i32.eqz
   if (result i32)
    local.get $5
   else
    i32.const 0
   end
   if
    f64.const nan:0x8000000000000
    return
   end
   i32.const 1
   local.set $7
   loop $for-loop|2
    local.get $2
    i32.load16_u
    local.tee $3
    i32.const 48
    i32.eq
    local.set $11
    local.get $11
    if
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     local.get $9
     i32.const 1
     i32.sub
     local.set $9
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $for-loop|2
    end
   end
   local.get $1
   i32.const 0
   i32.le_s
   if
    f64.const 0
    return
   end
   local.get $9
   i32.eqz
   if (result i32)
    local.get $5
   else
    i32.const 0
   end
   if (result i32)
    local.get $3
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
   else
    i32.const 0
   end
   if
    f64.const nan:0x8000000000000
    return
   end
  end
  local.get $3
  i32.const 48
  i32.sub
  local.set $5
  block $for-break3
   loop $for-loop|3
    local.get $5
    i32.const 10
    i32.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $3
     i32.const 46
     i32.eq
     if (result i32)
      local.get $7
      i32.eqz
     else
      i32.const 0
     end
    end
    local.set $11
    local.get $11
    if
     local.get $5
     i32.const 10
     i32.lt_u
     if
      local.get $8
      i32.const 19
      i32.lt_s
      if (result i64)
       i64.const 10
       local.get $10
       i64.mul
       local.get $5
       i64.extend_i32_u
       i64.add
      else
       local.get $10
       local.get $5
       i32.eqz
       i32.eqz
       i64.extend_i32_u
       i64.or
      end
      local.set $10
      local.get $8
      i32.const 1
      i32.add
      local.set $8
     else
      local.get $8
      local.set $9
      i32.const 1
      local.set $7
     end
     local.get $1
     i32.const 1
     i32.sub
     local.tee $1
     i32.eqz
     if
      br $for-break3
     end
     local.get $2
     i32.const 2
     i32.add
     local.tee $2
     i32.load16_u
     local.set $3
     local.get $3
     i32.const 48
     i32.sub
     local.set $5
     br $for-loop|3
    end
   end
  end
  local.get $7
  i32.eqz
  if
   local.get $8
   local.set $9
  end
  block $~lib/util/string/scientific|inlined.0 (result f64)
   local.get $10
   local.set $17
   local.get $9
   i32.const 19
   local.tee $11
   local.get $8
   local.tee $5
   local.get $11
   local.get $5
   i32.lt_s
   select
   i32.sub
   block $~lib/util/string/parseExp|inlined.0 (result i32)
    local.get $2
    local.set $11
    local.get $1
    local.set $5
    i32.const 1
    local.set $12
    i32.const 0
    local.set $13
    local.get $11
    i32.load16_u
    local.set $14
    local.get $14
    i32.const 32
    i32.or
    i32.const 101
    i32.ne
    if
     i32.const 0
     br $~lib/util/string/parseExp|inlined.0
    end
    local.get $5
    i32.const 1
    i32.sub
    local.tee $5
    i32.eqz
    if
     i32.const 0
     br $~lib/util/string/parseExp|inlined.0
    end
    local.get $11
    i32.const 2
    i32.add
    local.tee $11
    i32.load16_u
    local.set $14
    local.get $14
    i32.const 45
    i32.eq
    if
     local.get $5
     i32.const 1
     i32.sub
     local.tee $5
     i32.eqz
     if
      i32.const 0
      br $~lib/util/string/parseExp|inlined.0
     end
     local.get $11
     i32.const 2
     i32.add
     local.tee $11
     i32.load16_u
     local.set $14
     i32.const -1
     local.set $12
    else
     local.get $14
     i32.const 43
     i32.eq
     if
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.eqz
      if
       i32.const 0
       br $~lib/util/string/parseExp|inlined.0
      end
      local.get $11
      i32.const 2
      i32.add
      local.tee $11
      i32.load16_u
      local.set $14
     end
    end
    loop $while-continue|4
     local.get $14
     i32.const 48
     i32.eq
     local.set $15
     local.get $15
     if
      local.get $5
      i32.const 1
      i32.sub
      local.tee $5
      i32.eqz
      if
       i32.const 0
       br $~lib/util/string/parseExp|inlined.0
      end
      local.get $11
      i32.const 2
      i32.add
      local.tee $11
      i32.load16_u
      local.set $14
      br $while-continue|4
     end
    end
    local.get $14
    i32.const 48
    i32.sub
    local.set $15
    loop $for-loop|5
     local.get $5
     if (result i32)
      local.get $15
      i32.const 10
      i32.lt_u
     else
      i32.const 0
     end
     local.set $16
     local.get $16
     if
      local.get $13
      i32.const 3200
      i32.ge_s
      if
       local.get $12
       i32.const 3200
       i32.mul
       br $~lib/util/string/parseExp|inlined.0
      end
      i32.const 10
      local.get $13
      i32.mul
      local.get $15
      i32.add
      local.set $13
      local.get $11
      i32.const 2
      i32.add
      local.tee $11
      i32.load16_u
      local.set $14
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      local.get $14
      i32.const 48
      i32.sub
      local.set $15
      br $for-loop|5
     end
    end
    local.get $12
    local.get $13
    i32.mul
   end
   i32.add
   local.set $16
   local.get $17
   i64.const 0
   i64.ne
   i32.eqz
   if (result i32)
    i32.const 1
   else
    local.get $16
    i32.const -342
    i32.lt_s
   end
   if
    f64.const 0
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $16
   i32.const 308
   i32.gt_s
   if
    f64.const inf
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $17
   f64.convert_i64_u
   local.set $18
   local.get $16
   i32.eqz
   if
    local.get $18
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $16
   i32.const 22
   i32.gt_s
   if (result i32)
    local.get $16
    i32.const 22
    i32.const 15
    i32.add
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $18
    local.get $16
    i32.const 22
    i32.sub
    local.set $15
    i32.const 3136
    local.get $15
    i32.const 3
    i32.shl
    i32.add
    f64.load
    f64.mul
    local.set $18
    i32.const 22
    local.set $16
   end
   local.get $17
   i64.const 9007199254740991
   i64.le_u
   if (result i32)
    local.get $16
    local.tee $15
    i32.const 31
    i32.shr_s
    local.tee $14
    local.get $15
    i32.add
    local.get $14
    i32.xor
    i32.const 22
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $16
    i32.const 0
    i32.gt_s
    if
     local.get $18
     local.get $16
     local.set $5
     i32.const 3136
     local.get $5
     i32.const 3
     i32.shl
     i32.add
     f64.load
     f64.mul
     br $~lib/util/string/scientific|inlined.0
    end
    local.get $18
    i32.const 0
    local.get $16
    i32.sub
    local.set $11
    i32.const 3136
    local.get $11
    i32.const 3
    i32.shl
    i32.add
    f64.load
    f64.div
    br $~lib/util/string/scientific|inlined.0
   else
    local.get $16
    i32.const 0
    i32.lt_s
    if
     local.get $17
     local.set $19
     local.get $16
     local.set $12
     local.get $19
     i64.clz
     local.set $20
     local.get $19
     local.get $20
     i64.shl
     local.set $19
     local.get $12
     i64.extend_i32_s
     local.get $20
     i64.sub
     local.set $20
     loop $for-loop|6
      local.get $12
      i32.const -14
      i32.le_s
      local.set $11
      local.get $11
      if
       local.get $19
       i64.const 6103515625
       i64.div_u
       local.set $21
       local.get $19
       i64.const 6103515625
       i64.rem_u
       local.set $22
       local.get $21
       i64.clz
       local.set $23
       local.get $21
       local.get $23
       i64.shl
       f64.const 0.00004294967296
       local.get $22
       local.get $23
       i64.const 18
       i64.sub
       i64.shl
       f64.convert_i64_u
       f64.mul
       f64.nearest
       i64.trunc_f64_u
       i64.add
       local.set $19
       local.get $20
       local.get $23
       i64.sub
       local.set $20
       local.get $12
       i32.const 14
       i32.add
       local.set $12
       br $for-loop|6
      end
     end
     i32.const 5
     i32.const 0
     local.get $12
     i32.sub
     call $~lib/math/ipow32
     i64.extend_i32_s
     local.set $23
     local.get $19
     local.get $23
     i64.div_u
     local.set $22
     local.get $19
     local.get $23
     i64.rem_u
     local.set $21
     local.get $22
     i64.clz
     local.set $24
     local.get $22
     local.get $24
     i64.shl
     local.get $21
     f64.convert_i64_u
     i64.reinterpret_f64
     local.get $24
     i64.const 52
     i64.shl
     i64.add
     f64.reinterpret_i64
     local.get $23
     f64.convert_i64_u
     f64.div
     i64.trunc_f64_u
     i64.add
     local.set $19
     local.get $20
     local.get $24
     i64.sub
     local.set $20
     local.get $19
     f64.convert_i64_u
     local.get $20
     i32.wrap_i64
     call $~lib/math/NativeMath.scalbn
     br $~lib/util/string/scientific|inlined.0
    else
     local.get $17
     local.set $19
     local.get $16
     local.set $13
     local.get $19
     i64.ctz
     local.set $24
     local.get $19
     local.get $24
     i64.shr_u
     local.set $19
     local.get $24
     local.get $13
     i64.extend_i32_s
     i64.add
     local.set $24
     local.get $24
     global.set $~lib/util/string/__fixmulShift
     loop $for-loop|7
      local.get $13
      i32.const 13
      i32.ge_s
      local.set $12
      local.get $12
      if
       local.get $19
       local.set $20
       i32.const 1220703125
       local.set $14
       local.get $20
       i64.const 4294967295
       i64.and
       local.get $14
       i64.extend_i32_u
       i64.mul
       local.set $21
       local.get $20
       i64.const 32
       i64.shr_u
       local.get $14
       i64.extend_i32_u
       i64.mul
       local.get $21
       i64.const 32
       i64.shr_u
       i64.add
       local.set $22
       local.get $22
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       local.set $11
       local.get $11
       i32.clz
       local.set $5
       i64.const 32
       local.get $5
       i64.extend_i32_u
       i64.sub
       local.set $23
       global.get $~lib/util/string/__fixmulShift
       local.get $23
       i64.add
       global.set $~lib/util/string/__fixmulShift
       local.get $22
       local.get $5
       i64.extend_i32_u
       i64.shl
       local.get $21
       i64.const 4294967295
       i64.and
       local.get $23
       i64.shr_u
       i64.or
       local.get $21
       local.get $5
       i64.extend_i32_u
       i64.shl
       i64.const 31
       i64.shr_u
       i64.const 1
       i64.and
       i64.add
       local.set $19
       local.get $13
       i32.const 13
       i32.sub
       local.set $13
       br $for-loop|7
      end
     end
     local.get $19
     local.set $20
     i32.const 5
     local.get $13
     call $~lib/math/ipow32
     local.set $15
     local.get $20
     i64.const 4294967295
     i64.and
     local.get $15
     i64.extend_i32_u
     i64.mul
     local.set $23
     local.get $20
     i64.const 32
     i64.shr_u
     local.get $15
     i64.extend_i32_u
     i64.mul
     local.get $23
     i64.const 32
     i64.shr_u
     i64.add
     local.set $22
     local.get $22
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $12
     local.get $12
     i32.clz
     local.set $5
     i64.const 32
     local.get $5
     i64.extend_i32_u
     i64.sub
     local.set $21
     global.get $~lib/util/string/__fixmulShift
     local.get $21
     i64.add
     global.set $~lib/util/string/__fixmulShift
     local.get $22
     local.get $5
     i64.extend_i32_u
     i64.shl
     local.get $23
     i64.const 4294967295
     i64.and
     local.get $21
     i64.shr_u
     i64.or
     local.get $23
     local.get $5
     i64.extend_i32_u
     i64.shl
     i64.const 31
     i64.shr_u
     i64.const 1
     i64.and
     i64.add
     local.set $19
     global.get $~lib/util/string/__fixmulShift
     local.set $24
     local.get $19
     f64.convert_i64_u
     local.get $24
     i32.wrap_i64
     call $~lib/math/NativeMath.scalbn
     br $~lib/util/string/scientific|inlined.0
    end
    unreachable
   end
   unreachable
  end
  local.get $4
  f64.copysign
 )
 (func $~lib/string/parseFloat (param $0 i32) (result f64)
  local.get $0
  call $~lib/util/string/strtod
 )
 (func $~lib/assemblyscript-json/JSON/Num#set:_num (param $0 i32) (param $1 f64)
  local.get $0
  local.get $1
  f64.store
 )
 (func $~lib/assemblyscript-json/JSON/Num#constructor (param $0 i32) (param $1 f64) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 35
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/JSON/Num#set:_num
  local.get $0
  call $~lib/assemblyscript-json/JSON/Value#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Float#constructor (param $0 i32) (param $1 f64) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 34
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/JSON/Num#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Value.Float (param $0 f64) (result i32)
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/JSON/Float#constructor
 )
 (func $~lib/assemblyscript-json/JSON/Handler#setFloat (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  local.get $2
  call $~lib/assemblyscript-json/JSON/Value.Float
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $~lib/assemblyscript-json/JSON/Handler#addValue
 )
 (func $~lib/assemblyscript-json/JSON/Integer#set:_num (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store
 )
 (func $~lib/assemblyscript-json/JSON/Integer#constructor (param $0 i32) (param $1 i64) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 36
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/JSON/Integer#set:_num
  local.get $0
  call $~lib/assemblyscript-json/JSON/Value#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Value.Integer (param $0 i64) (result i32)
  i32.const 0
  local.get $0
  call $~lib/assemblyscript-json/JSON/Integer#constructor
 )
 (func $~lib/assemblyscript-json/JSON/Handler#setInteger (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  local.get $2
  call $~lib/assemblyscript-json/JSON/Value.Integer
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $~lib/assemblyscript-json/JSON/Handler#addValue
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseNumber (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  f64.const 0
  local.set $1
  f64.const 1
  local.set $2
  i32.const 0
  local.set $3
  i32.const 528
  local.set $4
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
  global.get $~lib/assemblyscript-json/decoder/CHAR_MINUS
  i32.eq
  if
   f64.const -1
   local.set $2
   local.get $4
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/string/String.fromCharCode@varargs
   call $~lib/string/String.__concat
   local.set $4
  end
  i32.const 0
  local.set $5
  loop $while-continue|0
   global.get $~lib/assemblyscript-json/decoder/CHAR_0
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
   i32.le_s
   if (result i32)
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
    global.get $~lib/assemblyscript-json/decoder/CHAR_9
    i32.le_s
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/assemblyscript-json/decoder/CHAR_PERIOD
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
    i32.eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/assemblyscript-json/decoder/CHAR_MINUS
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
    i32.eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/assemblyscript-json/decoder/CHAR_PLUS
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
    i32.eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/assemblyscript-json/decoder/CHAR_E
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
    i32.eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/assemblyscript-json/decoder/CHAR_E_LOWER
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
    i32.eq
   end
   local.set $6
   local.get $6
   if
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readChar
    local.set $7
    local.get $4
    local.get $7
    i32.const 1
    global.set $~argumentsLength
    i32.const 0
    call $~lib/string/String.fromCharCode@varargs
    call $~lib/string/String.__concat
    local.set $4
    local.get $7
    global.get $~lib/assemblyscript-json/decoder/CHAR_E
    i32.eq
    if (result i32)
     i32.const 1
    else
     local.get $7
     global.get $~lib/assemblyscript-json/decoder/CHAR_E_LOWER
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $7
     global.get $~lib/assemblyscript-json/decoder/CHAR_PERIOD
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $7
     global.get $~lib/assemblyscript-json/decoder/CHAR_PLUS
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $7
     global.get $~lib/assemblyscript-json/decoder/CHAR_MINUS
     i32.eq
    end
    if
     i32.const 1
     local.set $3
    else
     local.get $3
     i32.eqz
     if
      local.get $7
      global.get $~lib/assemblyscript-json/decoder/CHAR_0
      i32.sub
      f64.convert_i32_s
      local.set $8
      local.get $1
      f64.const 10
      f64.mul
      local.set $1
      local.get $1
      local.get $8
      f64.add
      local.set $1
     end
     local.get $5
     i32.const 1
     i32.add
     local.set $5
    end
    br $while-continue|0
   end
  end
  local.get $5
  i32.const 0
  i32.gt_s
  if
   local.get $3
   if (result i32)
    i32.const 1
   else
    local.get $4
    i32.const 3120
    call $~lib/string/String.__eq
   end
   if
    local.get $0
    i32.load
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
    i32.load
    local.get $4
    call $~lib/string/parseFloat
    call $~lib/assemblyscript-json/JSON/Handler#setFloat
   else
    local.get $0
    i32.load
    local.get $0
    call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
    i32.load
    local.get $1
    local.get $2
    f64.mul
    i64.trunc_f64_s
    call $~lib/assemblyscript-json/JSON/Handler#setInteger
   end
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/JSON/Null#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 37
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/assemblyscript-json/JSON/Value#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/assemblyscript-json/JSON/Value.Null (result i32)
  global.get $~lib/assemblyscript-json/JSON/NULL
 )
 (func $~lib/assemblyscript-json/JSON/Handler#setNull (param $0 i32) (param $1 i32)
  (local $2 i32)
  call $~lib/assemblyscript-json/JSON/Value.Null
  local.set $2
  local.get $0
  local.get $1
  local.get $2
  call $~lib/assemblyscript-json/JSON/Handler#addValue
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseNull (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#peekChar
  global.get $~lib/assemblyscript-json/decoder/NULL_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $0
   global.get $~lib/assemblyscript-json/decoder/NULL_STR
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#readAndAssert
   local.get $0
   i32.load
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#get:state
   i32.load
   call $~lib/assemblyscript-json/JSON/Handler#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseValue (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#skipWhitespace
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseObject
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseArray
  end
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseString
  end
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseBoolean
  end
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseNumber
  end
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $0
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseNull
  end
  local.set $1
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#skipWhitespace
  local.get $1
 )
 (func $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#deserialize (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $2
  i32.const 0
  i32.ne
  if
   local.get $0
   local.get $2
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:state
  else
   local.get $0
   i32.const 0
   local.get $1
   call $~lib/assemblyscript-json/decoder/DecoderState#constructor
   call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#set:state
  end
  local.get $0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 3376
   i32.const 1200
   i32.const 144
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/assemblyscript-json/JSON/Handler#reset (param $0 i32)
  (local $1 i32)
  loop $while-continue|0
   local.get $0
   i32.load
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
   i32.const 0
   i32.gt_s
   local.set $1
   local.get $1
   if
    local.get $0
    i32.load
    call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#pop
    drop
    br $while-continue|0
   end
  end
 )
 (func $~lib/assemblyscript-json/JSON/_JSON.parse<~lib/typedarray/Uint8Array> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 0
  drop
  local.get $0
  local.set $1
  global.get $~lib/assemblyscript-json/JSON/_JSON.decoder
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#deserialize
  global.get $~lib/assemblyscript-json/JSON/_JSON.decoder
  i32.load
  call $~lib/assemblyscript-json/JSON/Handler#get:peek
  local.set $2
  global.get $~lib/assemblyscript-json/JSON/_JSON.decoder
  i32.load
  call $~lib/assemblyscript-json/JSON/Handler#reset
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/getInput (result i32)
  (local $0 i64)
  (local $1 i32)
  (local $2 i32)
  i64.const 0
  call $~lib/near-sdk-bindgen/index/input
  i64.const 0
  call $~lib/near-sdk-bindgen/index/register_len
  local.set $0
  local.get $0
  global.get $~lib/number/U32.MAX_VALUE
  i64.extend_i32_u
  i64.eq
  if
   call $~lib/near-sdk-bindgen/index/panic
  end
  i32.const 0
  local.get $0
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  i64.const 0
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-bindgen/index/read_register
  local.get $1
  local.set $2
  local.get $2
  call $~lib/assemblyscript-json/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.tee $2
  i32.const 22
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $2
  else
   i32.const 1648
   i32.const 3440
   i32.const 96
   i32.const 20
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#has (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#find
  i32.const 0
  i32.ne
 )
 (func $~lib/assemblyscript-json/JSON/Obj#has (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#has
 )
 (func $~lib/string/String.__ne (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#find
  local.set $2
  local.get $2
  i32.eqz
  if
   i32.const 3552
   i32.const 3616
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.load offset=4
 )
 (func $~lib/assemblyscript-json/JSON/Obj#get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#has
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/JSON/Value>#get
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 17
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:length_
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<assembly/multicall/model/BatchCall>> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<assembly/multicall/model/BatchCall>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array<assembly/multicall/model/BatchCall>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<assembly/multicall/model/BatchCall>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<assembly/multicall/model/BatchCall>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<assembly/multicall/model/BatchCall>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<assembly/multicall/model/BatchCall>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 16
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:length_
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/BatchCall> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/BatchCall> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/number/Bool#toString (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  if (result i32)
   i32.const 3088
  else
   i32.const 2976
  end
 )
 (func $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/BatchCall> (result i32)
  i32.const 8
  i32.const 13
  call $~lib/rt/stub/__new
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/string/String> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<~lib/string/String> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/string/String>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/string/String>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 4480
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/string/String>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 4480
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 1
  drop
  local.get $3
  local.set $5
  local.get $1
  local.set $4
  local.get $5
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 32
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $4
   call $~lib/string/String.__concat
   i32.const 4512
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 218
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  local.tee $7
  i32.const 32
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $7
  else
   i32.const 1648
   i32.const 3440
   i32.const 222
   i32.const 21
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  return
 )
 (func $assembly/multicall/model/BatchCall#set:address (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<assembly/multicall/model/FunctionCall>> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<assembly/multicall/model/FunctionCall>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<assembly/multicall/model/FunctionCall>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 15
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:length_
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/FunctionCall> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/FunctionCall> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/FunctionCall> (result i32)
  i32.const 20
  i32.const 14
  call $~lib/rt/stub/__new
 )
 (func $assembly/multicall/model/FunctionCall#set:func (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/FunctionCall#set:args (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<u64> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<u64> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
 )
 (func $~lib/util/string/strtol<i64> (param $0 i32) (param $1 i32) (result i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $2
  i32.eqz
  if
   i32.const 0
   drop
   i64.const 0
   return
  end
  local.get $0
  local.set $3
  local.get $3
  i32.load16_u
  local.set $4
  loop $while-continue|0
   local.get $4
   call $~lib/util/string/isSpace
   local.set $5
   local.get $5
   if
    local.get $3
    i32.const 2
    i32.add
    local.tee $3
    i32.load16_u
    local.set $4
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  i64.const 1
  local.set $6
  local.get $4
  i32.const 45
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $4
   i32.const 43
   i32.eq
  end
  if
   local.get $2
   i32.const 1
   i32.sub
   local.tee $2
   i32.eqz
   if
    i32.const 0
    drop
    i64.const 0
    return
   end
   local.get $4
   i32.const 45
   i32.eq
   if
    i64.const -1
    local.set $6
   end
   local.get $3
   i32.const 2
   i32.add
   local.tee $3
   i32.load16_u
   local.set $4
  end
  local.get $1
  if
   local.get $1
   i32.const 2
   i32.lt_s
   if (result i32)
    i32.const 1
   else
    local.get $1
    i32.const 36
    i32.gt_s
   end
   if
    i32.const 0
    drop
    i64.const 0
    return
   end
   local.get $1
   i32.const 16
   i32.eq
   if
    local.get $2
    i32.const 2
    i32.gt_s
    if (result i32)
     local.get $4
     i32.const 48
     i32.eq
    else
     i32.const 0
    end
    if (result i32)
     local.get $3
     i32.load16_u offset=2
     i32.const 32
     i32.or
     i32.const 120
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $3
     i32.const 4
     i32.add
     local.set $3
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
    end
   end
  else
   local.get $4
   i32.const 48
   i32.eq
   if (result i32)
    local.get $2
    i32.const 2
    i32.gt_s
   else
    i32.const 0
   end
   if
    block $break|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $3
        i32.load16_u offset=2
        i32.const 32
        i32.or
        local.set $5
        local.get $5
        i32.const 98
        i32.eq
        br_if $case0|1
        local.get $5
        i32.const 111
        i32.eq
        br_if $case1|1
        local.get $5
        i32.const 120
        i32.eq
        br_if $case2|1
        br $break|1
       end
       local.get $3
       i32.const 4
       i32.add
       local.set $3
       local.get $2
       i32.const 2
       i32.sub
       local.set $2
       i32.const 2
       local.set $1
       br $break|1
      end
      local.get $3
      i32.const 4
      i32.add
      local.set $3
      local.get $2
      i32.const 2
      i32.sub
      local.set $2
      i32.const 8
      local.set $1
      br $break|1
     end
     local.get $3
     i32.const 4
     i32.add
     local.set $3
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
     i32.const 16
     local.set $1
     br $break|1
    end
   end
   local.get $1
   i32.eqz
   if
    i32.const 10
    local.set $1
   end
  end
  i64.const 0
  local.set $7
  block $while-break|2
   loop $while-continue|2
    local.get $2
    local.tee $5
    i32.const 1
    i32.sub
    local.set $2
    local.get $5
    local.set $5
    local.get $5
    if
     local.get $3
     i32.load16_u
     local.set $4
     local.get $4
     i32.const 48
     i32.sub
     i32.const 10
     i32.lt_u
     if
      local.get $4
      i32.const 48
      i32.sub
      local.set $4
     else
      local.get $4
      i32.const 65
      i32.sub
      i32.const 90
      i32.const 65
      i32.sub
      i32.le_u
      if
       local.get $4
       i32.const 65
       i32.const 10
       i32.sub
       i32.sub
       local.set $4
      else
       local.get $4
       i32.const 97
       i32.sub
       i32.const 122
       i32.const 97
       i32.sub
       i32.le_u
       if
        local.get $4
        i32.const 97
        i32.const 10
        i32.sub
        i32.sub
        local.set $4
       end
      end
     end
     local.get $4
     local.get $1
     i32.ge_u
     if
      local.get $7
      i64.const 0
      i64.ne
      i32.eqz
      if
       i32.const 0
       drop
       i64.const 0
       return
      end
      br $while-break|2
     end
     local.get $7
     local.get $1
     i64.extend_i32_s
     i64.mul
     local.get $4
     i64.extend_i32_u
     i64.add
     local.set $7
     local.get $3
     i32.const 2
     i32.add
     local.set $3
     br $while-continue|2
    end
   end
  end
  local.get $6
  local.get $7
  i64.mul
 )
 (func $~lib/number/U64.parseInt (param $0 i32) (param $1 i32) (result i64)
  local.get $0
  local.get $1
  call $~lib/util/string/strtol<i64>
 )
 (func $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<u64>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<u64>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 1
     drop
     i32.const 3664
     i32.const 4896
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 317
     i32.const 11
     call $~lib/builtins/abort
     unreachable
    else
     i32.const 3664
     i32.const 4896
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 32
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 4896
   call $~lib/string/String.__concat
   i32.const 4928
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 346
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.tee $5
  i32.const 32
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 354
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  local.set $5
  local.get $5
  i32.const 0
  call $~lib/number/U64.parseInt
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<u64> (result i64)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i64.const 0
  return
 )
 (func $assembly/multicall/model/FunctionCall#set:gas (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=8
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/as-bignum/integer/safe/u128/u128> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<~lib/as-bignum/integer/safe/u128/u128> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/JSONTypeToString<~lib/assemblyscript-json/JSON/Value> (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  local.tee $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   i32.const 32
   call $~lib/rt/__instanceof
  end
  if
   i32.const 5264
   return
  end
  local.get $0
  local.tee $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   i32.const 33
   call $~lib/rt/__instanceof
  end
  if
   i32.const 5296
   return
  end
  local.get $0
  local.tee $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if
   i32.const 5344
   return
  end
  local.get $0
  local.tee $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   i32.const 30
   call $~lib/rt/__instanceof
  end
  if
   i32.const 5376
   return
  end
  local.get $0
  local.tee $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   i32.const 5408
   return
  end
  local.get $0
  local.tee $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   i32.const 36
   call $~lib/rt/__instanceof
  end
  if
   i32.const 5440
   return
  end
  local.get $0
  local.tee $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   i32.const 34
   call $~lib/rt/__instanceof
  end
  if
   i32.const 5488
   return
  end
  i32.const 5520
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/as-bignum/integer/safe/u128/u128>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/as-bignum/integer/safe/u128/u128>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 5120
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/as-bignum/integer/safe/u128/u128>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 5120
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 32
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 5152
   call $~lib/string/String.__concat
   local.get $3
   call $~lib/near-sdk-bindgen/index/JSONTypeToString<~lib/assemblyscript-json/JSON/Value>
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 468
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.set $5
  local.get $1
  local.set $4
  local.get $5
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 32
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $4
   call $~lib/string/String.__concat
   i32.const 4512
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 218
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  local.tee $7
  i32.const 32
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $7
  else
   i32.const 1648
   i32.const 3440
   i32.const 222
   i32.const 21
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  local.set $7
  i32.const 10
  local.set $5
  local.get $7
  local.get $5
  call $~lib/as-bignum/utils/atou128
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $assembly/multicall/model/FunctionCall#set:depo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/FunctionCall#_decode (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.const 4800
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 4800
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  end
  call $assembly/multicall/model/FunctionCall#set:func
  local.get $0
  local.get $1
  i32.const 4832
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 4832
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  end
  call $assembly/multicall/model/FunctionCall#set:args
  local.get $0
  local.get $1
  i32.const 4864
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $1
   i32.const 4864
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  end
  call $assembly/multicall/model/FunctionCall#set:gas
  local.get $0
  local.get $1
  i32.const 5088
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 5088
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
  end
  call $assembly/multicall/model/FunctionCall#set:depo
  local.get $0
 )
 (func $assembly/multicall/model/FunctionCall#decode<~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $1
  local.set $2
  local.get $0
  local.get $2
  call $assembly/multicall/model/FunctionCall#_decode
 )
 (func $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/FunctionCall,~lib/assemblyscript-json/JSON/Value> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/FunctionCall>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/FunctionCall>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 4752
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/FunctionCall>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 4752
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 4752
   call $~lib/string/String.__concat
   i32.const 4352
   call $~lib/string/String.__concat
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
   i32.const 0
   call $~lib/number/Bool#toString
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/FunctionCall>
  local.set $6
  i32.const 0
  drop
  local.get $6
  local.get $3
  local.tee $5
  i32.const 22
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 418
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  call $assembly/multicall/model/FunctionCall#decode<~lib/assemblyscript-json/JSON/Obj>
  return
 )
 (func $~lib/array/Array<assembly/multicall/model/FunctionCall>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 1
  call $~lib/rt/stub/__link
  local.get $0
  local.get $3
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#set:length_
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/decodeArray<assembly/multicall/model/FunctionCall> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.tee $2
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $2
   i32.const 30
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 4112
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 226
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/FunctionCall>#constructor
  local.set $2
  local.get $0
  local.tee $3
  i32.const 30
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $3
  else
   i32.const 1648
   i32.const 3440
   i32.const 231
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $3
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#__get
    i32.const 528
    call $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/FunctionCall,~lib/assemblyscript-json/JSON/Value>
    local.set $6
    local.get $2
    local.get $6
    call $~lib/array/Array<assembly/multicall/model/FunctionCall>#push
    drop
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<assembly/multicall/model/FunctionCall>,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<assembly/multicall/model/FunctionCall>>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<assembly/multicall/model/FunctionCall>>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 4640
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<assembly/multicall/model/FunctionCall>>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 4640
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $3
  local.get $1
  call $~lib/near-sdk-bindgen/index/decodeArray<assembly/multicall/model/FunctionCall>
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<assembly/multicall/model/FunctionCall>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $assembly/multicall/model/BatchCall#set:actions (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/BatchCall#_decode (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.const 4432
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 4432
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  end
  call $assembly/multicall/model/BatchCall#set:address
  local.get $0
  local.get $1
  i32.const 4592
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 4592
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<assembly/multicall/model/FunctionCall>,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<assembly/multicall/model/FunctionCall>>
  end
  call $assembly/multicall/model/BatchCall#set:actions
  local.get $0
 )
 (func $assembly/multicall/model/BatchCall#decode<~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $1
  local.set $2
  local.get $0
  local.get $2
  call $assembly/multicall/model/BatchCall#_decode
 )
 (func $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/BatchCall,~lib/assemblyscript-json/JSON/Value> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/BatchCall>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/BatchCall>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 4304
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/BatchCall>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 4304
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 4304
   call $~lib/string/String.__concat
   i32.const 4352
   call $~lib/string/String.__concat
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
   i32.const 0
   call $~lib/number/Bool#toString
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/BatchCall>
  local.set $6
  i32.const 0
  drop
  local.get $6
  local.get $3
  local.tee $5
  i32.const 22
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 418
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  call $assembly/multicall/model/BatchCall#decode<~lib/assemblyscript-json/JSON/Obj>
  return
 )
 (func $~lib/array/Array<assembly/multicall/model/BatchCall>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 1
  call $~lib/rt/stub/__link
  local.get $0
  local.get $3
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#set:length_
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/decodeArray<assembly/multicall/model/BatchCall> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.tee $2
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $2
   i32.const 30
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 4112
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 226
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/BatchCall>#constructor
  local.set $2
  local.get $0
  local.tee $3
  i32.const 30
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $3
  else
   i32.const 1648
   i32.const 3440
   i32.const 231
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $3
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#__get
    i32.const 528
    call $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/BatchCall,~lib/assemblyscript-json/JSON/Value>
    local.set $6
    local.get $2
    local.get $6
    call $~lib/array/Array<assembly/multicall/model/BatchCall>#push
    drop
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<assembly/multicall/model/BatchCall>,~lib/assemblyscript-json/JSON/Value> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<assembly/multicall/model/BatchCall>>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<assembly/multicall/model/BatchCall>>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 4192
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<assembly/multicall/model/BatchCall>>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 4192
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $3
  local.get $1
  call $~lib/near-sdk-bindgen/index/decodeArray<assembly/multicall/model/BatchCall>
  return
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 1
  call $~lib/rt/stub/__link
  local.get $0
  local.get $3
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#set:length_
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/decodeArray<~lib/array/Array<assembly/multicall/model/BatchCall>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.tee $2
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $2
   i32.const 30
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 4112
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 226
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#constructor
  local.set $2
  local.get $0
  local.tee $3
  i32.const 30
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $3
  else
   i32.const 1648
   i32.const 3440
   i32.const 231
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $3
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#__get
    i32.const 528
    call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<assembly/multicall/model/BatchCall>,~lib/assemblyscript-json/JSON/Value>
    local.set $6
    local.get $2
    local.get $6
    call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#push
    drop
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 3696
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 3696
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $3
  local.get $1
  call $~lib/near-sdk-bindgen/index/decodeArray<~lib/array/Array<assembly/multicall/model/BatchCall>>
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>> (param $0 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 3696
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
 )
 (func $~lib/near-sdk-core/util/util.read_register (param $0 i64) (result i32)
  (local $1 i64)
  (local $2 i32)
  local.get $0
  call $~lib/near-sdk-core/env/env/env.register_len
  local.set $1
  i32.const 0
  local.get $1
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $2
  i64.const 0
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.read_register
  local.get $2
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
 )
 (func $~lib/arraybuffer/ArrayBuffer#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $1
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $2
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $2
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $6
  local.get $6
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $7
  local.get $7
  local.get $0
  local.get $1
  i32.add
  local.get $6
  call $~lib/memory/memory.copy
  local.get $7
 )
 (func $~lib/near-sdk-core/util/util.uint8ArrayToBuffer (param $0 i32) (result i32)
  local.get $0
  i32.load
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $0
  i32.load offset=8
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
 )
 (func $~lib/string/String.UTF8.decode (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.get $1
  call $~lib/string/String.UTF8.decodeUnsafe
 )
 (func $~lib/near-sdk-core/util/util.bytesToString (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/near-sdk-core/util/util.uint8ArrayToBuffer
  i32.const 1
  call $~lib/string/String.UTF8.decode
 )
 (func $~lib/near-sdk-core/util/util.read_register_string (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/near-sdk-core/util/util.read_register
  call $~lib/near-sdk-core/util/util.bytesToString
  local.set $1
  local.get $1
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $1
   local.tee $2
   if (result i32)
    local.get $2
   else
    i32.const 1136
    i32.const 5696
    i32.const 93
    i32.const 34
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 528
  end
 )
 (func $~lib/near-sdk-core/contract/Context.get:predecessor (result i32)
  i64.const 0
  call $~lib/near-sdk-core/env/env/env.predecessor_account_id
  i64.const 0
  call $~lib/near-sdk-core/util/util.read_register_string
 )
 (func $~lib/near-sdk-bindgen/index/isNull<~lib/string/String> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/array/Array<i32>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#get:isFirstKey (param $0 i32) (result i32)
  local.get $0
  i32.load
  local.get $0
  i32.load
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<i32>#__get
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#write (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/array/Array<~lib/string/String>#push
  drop
 )
 (func $~lib/array/Array<i32>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<i32>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 0
  drop
 )
 (func $~lib/array/Array<i32>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1296
    i32.const 1088
    i32.const 115
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/array/Array<i32>#set:length_
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#__uset
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $1
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $5
  local.get $3
  local.tee $4
  local.get $5
  local.get $4
  i32.lt_s
  select
  local.set $6
  local.get $2
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $5
  local.get $3
  local.tee $4
  local.get $5
  local.get $4
  i32.lt_s
  select
  local.set $7
  local.get $6
  local.tee $4
  local.get $7
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $8
  local.get $6
  local.tee $5
  local.get $7
  local.tee $4
  local.get $5
  local.get $4
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $9
  local.get $9
  local.get $8
  i32.sub
  local.set $10
  local.get $10
  i32.eqz
  if
   i32.const 528
   return
  end
  local.get $8
  i32.eqz
  if (result i32)
   local.get $9
   local.get $3
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $0
   return
  end
  local.get $10
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $11
  local.get $11
  local.get $0
  local.get $8
  i32.add
  local.get $10
  call $~lib/memory/memory.copy
  local.get $11
 )
 (func $~lib/util/number/decimalCount32 (param $0 i32) (result i32)
  local.get $0
  i32.const 100000
  i32.lt_u
  if
   local.get $0
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $0
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $0
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $0
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $0
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $0
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $0
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (local $11 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   local.set $3
   local.get $3
   if
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $4
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 100
    i32.div_u
    local.set $6
    local.get $5
    i32.const 100
    i32.rem_u
    local.set $7
    i32.const 6364
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $8
    i32.const 6364
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $9
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $8
    local.get $9
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $1
   i32.const 100
   i32.div_u
   local.set $3
   local.get $1
   i32.const 100
   i32.rem_u
   local.set $10
   local.get $3
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   i32.const 6364
   local.get $10
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   i32.const 6364
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store
  else
   local.get $2
   i32.const 1
   i32.sub
   local.set $2
   i32.const 48
   local.get $1
   i32.add
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store16
  end
 )
 (func $~lib/util/number/utoa_hex_lut (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $2
   i32.const 2
   i32.ge_u
   local.set $3
   local.get $3
   if
    local.get $2
    i32.const 2
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 6784
    local.get $1
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $1
    i64.const 8
    i64.shr_u
    local.set $1
    br $while-continue|0
   end
  end
  local.get $2
  i32.const 1
  i32.and
  if
   local.get $0
   i32.const 6784
   local.get $1
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u
   i32.store16
  end
 )
 (func $~lib/util/number/ulog_base (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  local.get $1
  local.set $2
  local.get $2
  i32.popcnt
  i32.const 1
  i32.eq
  if
   i32.const 63
   local.get $0
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $1
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i64.extend_i32_s
  local.set $3
  local.get $3
  local.set $4
  i32.const 1
  local.set $5
  loop $while-continue|0
   local.get $0
   local.get $4
   i64.ge_u
   local.set $2
   local.get $2
   if
    local.get $0
    local.get $4
    i64.div_u
    local.set $0
    local.get $4
    local.get $4
    i64.mul
    local.set $4
    local.get $5
    i32.const 1
    i32.shl
    local.set $5
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $0
   i64.const 1
   i64.ge_u
   local.set $2
   local.get $2
   if
    local.get $0
    local.get $3
    i64.div_u
    local.set $0
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $while-continue|1
   end
  end
  local.get $5
  i32.const 1
  i32.sub
 )
 (func $~lib/util/number/utoa64_any_core (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  local.get $3
  i64.extend_i32_s
  local.set $4
  local.get $3
  local.get $3
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $3
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $5
   local.get $4
   i64.const 1
   i64.sub
   local.set $6
   loop $do-continue|0
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 7840
    local.get $1
    local.get $6
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    i32.store16
    local.get $1
    local.get $5
    i64.shr_u
    local.set $1
    local.get $1
    i64.const 0
    i64.ne
    local.set $7
    local.get $7
    br_if $do-continue|0
   end
  else
   loop $do-continue|1
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    local.get $1
    local.get $4
    i64.div_u
    local.set $6
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 7840
    local.get $1
    local.get $6
    local.get $4
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    i32.store16
    local.get $6
    local.set $1
    local.get $1
    i64.const 0
    i64.ne
    local.set $7
    local.get $7
    br_if $do-continue|1
   end
  end
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 6160
   i32.const 6288
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   i32.const 6352
   return
  end
  local.get $0
  i32.const 31
  i32.shr_u
  local.set $2
  local.get $2
  if
   i32.const 0
   local.get $0
   i32.sub
   local.set $0
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   call $~lib/util/number/decimalCount32
   local.get $2
   i32.add
   local.set $4
   local.get $4
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/stub/__new
   local.set $3
   local.get $3
   local.set $7
   local.get $0
   local.set $6
   local.get $4
   local.set $5
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $7
   local.get $6
   local.get $5
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.get $2
    i32.add
    local.set $4
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $3
    local.get $3
    local.set $7
    local.get $0
    local.set $6
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $7
    local.get $6
    i64.extend_i32_u
    local.get $5
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.set $4
    local.get $4
    i64.extend_i32_u
    local.get $1
    call $~lib/util/number/ulog_base
    local.get $2
    i32.add
    local.set $7
    local.get $7
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $3
    local.get $3
    local.get $4
    i64.extend_i32_u
    local.get $7
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  local.get $3
 )
 (func $~lib/number/I32#toString (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/util/number/itoa32
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeString (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 1920
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  i32.const 0
  local.set $2
  i32.const 0
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $1
   call $~lib/string/String#get:length
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $1
    local.get $3
    call $~lib/string/String#charCodeAt
    local.set $5
    local.get $5
    i32.const 32
    i32.lt_s
    local.tee $6
    if (result i32)
     local.get $6
    else
     local.get $5
     i32.const 1920
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
    end
    local.tee $6
    if (result i32)
     local.get $6
    else
     local.get $5
     i32.const 2160
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
    end
    local.set $6
    local.get $6
    if
     local.get $0
     local.get $1
     local.get $2
     local.get $3
     call $~lib/string/String#substring
     call $~lib/assemblyscript-json/encoder/JSONEncoder#write
     local.get $3
     i32.const 1
     i32.add
     local.set $2
     local.get $5
     i32.const 1920
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      local.get $0
      i32.const 5872
      call $~lib/assemblyscript-json/encoder/JSONEncoder#write
     else
      local.get $5
      i32.const 2160
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      if
       local.get $0
       i32.const 5904
       call $~lib/assemblyscript-json/encoder/JSONEncoder#write
      else
       local.get $5
       i32.const 2224
       i32.const 0
       call $~lib/string/String#charCodeAt
       i32.eq
       if
        local.get $0
        i32.const 5936
        call $~lib/assemblyscript-json/encoder/JSONEncoder#write
       else
        local.get $5
        i32.const 2288
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        if
         local.get $0
         i32.const 5968
         call $~lib/assemblyscript-json/encoder/JSONEncoder#write
        else
         local.get $5
         i32.const 2352
         i32.const 0
         call $~lib/string/String#charCodeAt
         i32.eq
         if
          local.get $0
          i32.const 6000
          call $~lib/assemblyscript-json/encoder/JSONEncoder#write
         else
          local.get $5
          i32.const 2416
          i32.const 0
          call $~lib/string/String#charCodeAt
          i32.eq
          if
           local.get $0
           i32.const 6032
           call $~lib/assemblyscript-json/encoder/JSONEncoder#write
          else
           i32.const 0
           i32.eqz
           if
            i32.const 6064
            local.get $5
            i32.const 10
            call $~lib/number/I32#toString
            call $~lib/string/String.__concat
            i32.const 5776
            i32.const 112
            i32.const 11
            call $~lib/builtins/abort
            unreachable
           end
          end
         end
        end
       end
      end
     end
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $1
  call $~lib/string/String#get:length
  call $~lib/string/String#substring
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.const 1920
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#get:isFirstKey
  i32.eqz
  if
   local.get $0
   i32.const 1840
   call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  else
   local.get $0
   i32.load
   local.get $0
   i32.load
   call $~lib/array/Array<i32>#get:length
   i32.const 1
   i32.sub
   i32.const 0
   call $~lib/array/Array<i32>#__set
  end
  local.get $1
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $1
   local.tee $2
   if (result i32)
    local.get $2
   else
    i32.const 1136
    i32.const 5776
    i32.const 81
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   call $~lib/string/String#get:length
   i32.const 0
   i32.gt_s
  else
   i32.const 0
  end
  if
   local.get $0
   local.get $1
   local.tee $2
   if (result i32)
    local.get $2
   else
    i32.const 1136
    i32.const 5776
    i32.const 82
    i32.const 24
    call $~lib/builtins/abort
    unreachable
   end
   call $~lib/assemblyscript-json/encoder/JSONEncoder#writeString
   local.get $0
   i32.const 2624
   call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  end
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setNull (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 3344
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setString (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeString
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#toString (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.const 528
  call $~lib/array/Array<~lib/string/String>#join
 )
 (func $~lib/string/String.UTF8.byteLength (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.add
  local.set $3
  local.get $1
  i32.const 0
  i32.ne
  local.set $4
  block $while-break|0
   loop $while-continue|0
    local.get $2
    local.get $3
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $2
     i32.load16_u
     local.set $6
     local.get $6
     i32.const 128
     i32.lt_u
     if
      local.get $1
      local.get $6
      i32.eqz
      i32.and
      if
       br $while-break|0
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
     else
      local.get $6
      i32.const 2048
      i32.lt_u
      if
       local.get $4
       i32.const 2
       i32.add
       local.set $4
      else
       local.get $6
       i32.const 64512
       i32.and
       i32.const 55296
       i32.eq
       if (result i32)
        local.get $2
        i32.const 2
        i32.add
        local.get $3
        i32.lt_u
       else
        i32.const 0
       end
       if
        local.get $2
        i32.load16_u offset=2
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $4
         i32.const 4
         i32.add
         local.set $4
         local.get $2
         i32.const 4
         i32.add
         local.set $2
         br $while-continue|0
        end
       end
       local.get $4
       i32.const 3
       i32.add
       local.set $4
      end
     end
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
  end
  local.get $4
 )
 (func $~lib/string/String.UTF8.encodeUnsafe (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $4
  local.get $2
  local.set $5
  loop $while-continue|0
   local.get $0
   local.get $4
   i32.lt_u
   local.set $6
   local.get $6
   if
    local.get $0
    i32.load16_u
    local.set $7
    local.get $7
    i32.const 128
    i32.lt_u
    if
     local.get $5
     local.get $7
     i32.store8
     local.get $5
     i32.const 1
     i32.add
     local.set $5
    else
     local.get $7
     i32.const 2048
     i32.lt_u
     if
      local.get $7
      i32.const 6
      i32.shr_u
      i32.const 192
      i32.or
      local.set $8
      local.get $7
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $9
      local.get $5
      local.get $9
      i32.const 8
      i32.shl
      local.get $8
      i32.or
      i32.store16
      local.get $5
      i32.const 2
      i32.add
      local.set $5
     else
      local.get $7
      i32.const 64512
      i32.and
      i32.const 55296
      i32.eq
      if (result i32)
       local.get $0
       i32.const 2
       i32.add
       local.get $4
       i32.lt_u
      else
       i32.const 0
      end
      if
       local.get $0
       i32.load16_u offset=2
       local.set $9
       local.get $9
       i32.const 64512
       i32.and
       i32.const 56320
       i32.eq
       if
        i32.const 65536
        local.get $7
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.add
        local.get $9
        i32.const 1023
        i32.and
        i32.or
        local.set $7
        local.get $7
        i32.const 18
        i32.shr_u
        i32.const 240
        i32.or
        local.set $8
        local.get $7
        i32.const 12
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        local.set $10
        local.get $7
        i32.const 6
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        local.set $11
        local.get $7
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        local.set $12
        local.get $5
        local.get $12
        i32.const 24
        i32.shl
        local.get $11
        i32.const 16
        i32.shl
        i32.or
        local.get $10
        i32.const 8
        i32.shl
        i32.or
        local.get $8
        i32.or
        i32.store
        local.get $5
        i32.const 4
        i32.add
        local.set $5
        local.get $0
        i32.const 4
        i32.add
        local.set $0
        br $while-continue|0
       end
      end
      local.get $7
      i32.const 12
      i32.shr_u
      i32.const 224
      i32.or
      local.set $9
      local.get $7
      i32.const 6
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $12
      local.get $7
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $11
      local.get $5
      local.get $12
      i32.const 8
      i32.shl
      local.get $9
      i32.or
      i32.store16
      local.get $5
      local.get $11
      i32.store8 offset=2
      local.get $5
      i32.const 3
      i32.add
      local.set $5
     end
    end
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    br $while-continue|0
   end
  end
  local.get $3
  if
   local.get $5
   local.tee $6
   i32.const 1
   i32.add
   local.set $5
   local.get $6
   i32.const 0
   i32.store8
  end
  local.get $5
  local.get $2
  i32.sub
 )
 (func $~lib/string/String.UTF8.encode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/string/String.UTF8.byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $2
  local.get $0
  local.get $0
  call $~lib/string/String#get:length
  local.get $2
  local.get $1
  call $~lib/string/String.UTF8.encodeUnsafe
  drop
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array.wrap (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  local.set $5
  local.get $1
  local.set $4
  local.get $2
  local.set $3
  local.get $5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $7
  local.get $4
  local.get $7
  i32.gt_u
  local.get $4
  i32.const 0
  i32.and
  i32.or
  if
   i32.const 1296
   i32.const 1360
   i32.const 1826
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 0
  i32.lt_s
  if
   local.get $3
   i32.const -1
   i32.eq
   if
    local.get $7
    i32.const 0
    i32.and
    if
     i32.const 976
     i32.const 1360
     i32.const 1831
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $7
    local.get $4
    i32.sub
    local.set $6
   else
    i32.const 976
    i32.const 1360
    i32.const 1835
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $3
   i32.const 0
   i32.shl
   local.set $6
   local.get $4
   local.get $6
   i32.add
   local.get $7
   i32.gt_s
   if
    i32.const 976
    i32.const 1360
    i32.const 1840
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 12
  i32.const 7
  call $~lib/rt/stub/__new
  local.set $8
  local.get $8
  local.get $5
  i32.store
  local.get $8
  local.get $5
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $8
  local.get $6
  i32.store offset=8
  local.get $8
  local.get $5
  local.get $4
  i32.add
  i32.store offset=4
  local.get $8
 )
 (func $~lib/typedarray/Uint8Array.wrap@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   i32.const -1
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/typedarray/Uint8Array.wrap
 )
 (func $~lib/assemblyscript-json/util/index/Buffer.fromString (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 0
  call $~lib/string/String.UTF8.encode
  local.set $1
  local.get $1
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 0
  i32.eq
  if
   i32.const 0
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   return
  end
  local.get $1
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#serialize (param $0 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#toString
  call $~lib/assemblyscript-json/util/index/Buffer.fromString
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/string/String>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   local.get $2
   local.get $1
   local.get $0
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/array/Array<i32>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<i32>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<i32>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<i32>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 40
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<i32>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<i32>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<i32>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#set:length_
  local.get $0
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#set:_isFirstKey (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#set:result (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<i32>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $3
  call $~lib/array/Array<i32>#set:length_
  local.get $3
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 39
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#set:_isFirstKey
  local.get $0
  i32.const 0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#set:result
  local.get $0
  i32.const 0
  i32.const 10
  call $~lib/array/Array<i32>#constructor
  call $~lib/assemblyscript-json/encoder/JSONEncoder#set:_isFirstKey
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  call $~lib/assemblyscript-json/encoder/JSONEncoder#set:result
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/JSONEncoder#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 38
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/math/math.keccak256 (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load offset=8
  i64.extend_i32_s
  local.get $0
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-sdk-core/env/env/env.keccak256
  i32.const 0
  i64.const 0
  call $~lib/near-sdk-core/env/env/env.register_len
  i32.wrap_i64
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  i64.const 0
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.read_register
  local.get $1
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#_hashedItem (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/typedarray/Uint8Array>@varargs
  local.set $2
  local.get $2
  call $~lib/near-sdk-core/math/math.keccak256
  local.set $3
  local.get $3
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 6160
   i32.const 6288
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   i32.const 6352
   return
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   call $~lib/util/number/decimalCount32
   local.set $3
   local.get $3
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/stub/__new
   local.set $2
   local.get $2
   local.set $6
   local.get $0
   local.set $5
   local.get $3
   local.set $4
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $6
   local.get $5
   local.get $4
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $3
    local.get $3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $2
    local.get $2
    local.set $6
    local.get $0
    local.set $5
    local.get $3
    local.set $4
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $6
    local.get $5
    i64.extend_i32_u
    local.get $4
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    i64.extend_i32_u
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $3
    local.get $3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $2
    local.get $2
    local.get $0
    i64.extend_i32_u
    local.get $3
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
 )
 (func $~lib/util/number/itoa_buffered<u8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $2
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $1
  i32.const 255
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 255
   i32.and
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   return
  end
  local.get $2
  local.set $3
  i32.const 1
  i32.const 4
  i32.le_u
  drop
  local.get $3
  local.get $1
  i32.const 255
  i32.and
  call $~lib/util/number/decimalCount32
  i32.add
  local.set $3
  local.get $0
  local.set $6
  local.get $1
  i32.const 255
  i32.and
  local.set $5
  local.get $3
  local.set $4
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $6
  local.get $5
  local.get $4
  call $~lib/util/number/utoa32_dec_lut
  local.get $3
 )
 (func $~lib/util/string/joinIntegerArray<u8> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 528
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load8_u
   local.set $4
   i32.const 0
   drop
   i32.const 1
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/utoa32
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 10
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 10
  i32.add
  local.set $6
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $7
  i32.const 0
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $4
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<u8>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<u8>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   return
  end
  local.get $7
 )
 (func $~lib/typedarray/Uint8Array#join (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  local.get $1
  call $~lib/util/string/joinIntegerArray<u8>
 )
 (func $~lib/typedarray/Uint8Array#toString (param $0 i32) (result i32)
  local.get $0
  i32.const 1840
  call $~lib/typedarray/Uint8Array#join
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#_key (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/typedarray/Uint8Array#toString
  call $~lib/string/String.__concat
 )
 (func $~lib/near-sdk-core/util/util.toUTF8 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/string/String.UTF8.encode
 )
 (func $~lib/near-sdk-core/util/util.stringToBytes (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 1
  call $~lib/string/String.UTF8.byteLength
  i32.const 1
  i32.sub
  local.set $1
  i32.const 0
  local.get $1
  call $~lib/typedarray/Uint8Array#constructor
  local.set $2
  local.get $2
  i32.load offset=4
  local.get $0
  i32.const 0
  call $~lib/near-sdk-core/util/util.toUTF8
  local.get $1
  call $~lib/memory/memory.copy
  local.get $2
 )
 (func $~lib/near-sdk-core/storage/Storage.contains (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $1
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.storage_has_key
  i64.const 0
  i64.ne
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#contains (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#_key
  call $~lib/near-sdk-core/storage/Storage.contains
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#has (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#_hashedItem
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#contains
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $0 i32) (param $1 i32) (result i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $0
  local.get $0
  call $~lib/staticarray/StaticArray<~lib/string/String>#get:length
  local.get $1
  call $~lib/util/string/joinStringArray
  return
 )
 (func $assembly/multicall/index/_is_admin (param $0 i32)
  global.get $assembly/multicall/index/admins
  local.get $0
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#has
  i32.eqz
  if
   i32.const 8032
   i32.const 1
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 8032
   i32.const 528
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 8064
   i32.const 152
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/polyfills/bswap<u64> (param $0 i64) (result i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  i32.const 1
  drop
  i32.const 8
  i32.const 2
  i32.eq
  drop
  i32.const 8
  i32.const 4
  i32.eq
  drop
  i32.const 8
  i32.const 8
  i32.eq
  drop
  local.get $0
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.set $1
  local.get $0
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  local.set $2
  local.get $1
  local.get $2
  i64.or
  local.set $3
  local.get $3
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.set $1
  local.get $3
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  local.set $2
  local.get $1
  local.get $2
  i64.or
  i64.const 32
  i64.rotr
  return
 )
 (func $~lib/near-sdk-core/contract/Context.get:attachedDeposit (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $0
  local.get $0
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.attached_deposit
  local.get $0
  local.set $1
  i32.const 0
  local.set $2
  block $~lib/as-bignum/integer/u128/u128.fromBytes<~lib/typedarray/Uint8Array>|inlined.0 (result i32)
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   i32.const 0
   drop
   i32.const 1
   drop
   local.get $3
   if (result i32)
    local.get $4
    local.set $5
    local.get $5
    call $~lib/typedarray/Uint8Array#get:length
    if (result i32)
     local.get $5
     call $~lib/typedarray/Uint8Array#get:length
     i32.const 15
     i32.and
     i32.const 0
     i32.eq
    else
     i32.const 0
    end
    i32.eqz
    if
     i32.const 0
     i32.const 8144
     i32.const 143
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $5
    i32.load offset=4
    local.set $6
    i32.const 0
    local.get $6
    i64.load offset=8
    call $~lib/polyfills/bswap<u64>
    local.get $6
    i64.load
    call $~lib/polyfills/bswap<u64>
    call $~lib/as-bignum/integer/u128/u128#constructor
   else
    local.get $4
    local.set $5
    local.get $5
    call $~lib/typedarray/Uint8Array#get:length
    if (result i32)
     local.get $5
     call $~lib/typedarray/Uint8Array#get:length
     i32.const 15
     i32.and
     i32.const 0
     i32.eq
    else
     i32.const 0
    end
    i32.eqz
    if
     i32.const 0
     i32.const 8144
     i32.const 132
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $5
    i32.load offset=4
    local.set $6
    i32.const 0
    local.get $6
    i64.load
    local.get $6
    i64.load offset=8
    call $~lib/as-bignum/integer/u128/u128#constructor
   end
   br $~lib/as-bignum/integer/u128/u128.fromBytes<~lib/typedarray/Uint8Array>|inlined.0
  end
 )
 (func $~lib/as-bignum/integer/safe/u128/u128#constructor (param $0 i32) (param $1 i64) (param $2 i64) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 3
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/as-bignum/integer/u128/u128#constructor
  local.set $0
  local.get $0
 )
 (func $assembly/multicall/index/_assert_deposit
  (local $0 i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i64)
  call $~lib/near-sdk-core/contract/Context.get:attachedDeposit
  local.set $1
  i32.const 0
  i64.const 0
  i64.const 0
  call $~lib/as-bignum/integer/safe/u128/u128#constructor
  local.set $0
  local.get $1
  i64.load offset=8
  local.set $2
  local.get $0
  i64.load offset=8
  local.set $3
  local.get $2
  local.get $3
  i64.eq
  if (result i32)
   local.get $1
   i64.load
   local.get $0
   i64.load
   i64.gt_u
  else
   local.get $2
   local.get $3
   i64.gt_u
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 8224
   i32.const 8064
   i32.const 155
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/array/Array<u64>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<u64>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<u64>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<u64>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<u64>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 42
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<u64>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<u64>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<u64>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<u64>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 3
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 3
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<u64>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<u64>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<u64>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<u64>#set:length_
  local.get $0
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 1520
   i32.const 1088
   i32.const 103
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/array/Array<assembly/multicall/model/BatchCall>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<assembly/multicall/model/BatchCall>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 1520
   i32.const 1088
   i32.const 103
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/near-sdk-core/promise/ContractPromiseBatch#set:id (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store
 )
 (func $~lib/near-sdk-core/promise/ContractPromiseBatch#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 43
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i64.const 0
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#set:id
  local.get $0
 )
 (func $~lib/near-sdk-core/promise/ContractPromiseBatch.create (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $1
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.promise_batch_create
  local.set $2
  i32.const 0
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#constructor
  local.set $3
  local.get $3
  local.get $2
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#set:id
  local.get $3
 )
 (func $~lib/near-sdk-core/promise/ContractPromiseBatch#then (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  local.get $1
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $2
  local.get $0
  i64.load
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.promise_batch_then
  local.set $3
  i32.const 0
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#constructor
  local.set $4
  local.get $4
  local.get $3
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#set:id
  local.get $4
 )
 (func $~lib/array/Array<assembly/multicall/model/FunctionCall>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<assembly/multicall/model/FunctionCall>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 1520
   i32.const 1088
   i32.const 103
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/string/String#charAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const 528
   return
  end
  i32.const 2
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $2
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  i32.store16
  local.get $2
 )
 (func $~lib/rt/__newBuffer (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  local.get $1
  call $~lib/rt/stub/__new
  local.set $3
  local.get $2
  if
   local.get $3
   local.get $2
   local.get $0
   call $~lib/memory/memory.copy
  end
  local.get $3
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.get $1
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  local.get $3
  call $~lib/rt/__newBuffer
  local.set $5
  i32.const 16
  local.get $2
  call $~lib/rt/stub/__new
  local.set $6
  local.get $6
  local.get $5
  i32.store
  local.get $6
  local.get $5
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $6
  local.get $5
  i32.store offset=4
  local.get $6
  local.get $4
  i32.store offset=8
  local.get $6
  local.get $0
  i32.store offset=12
  local.get $6
 )
 (func $~lib/array/Array<u8>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/staticarray/StaticArray.fromArray<u8> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/array/Array<u8>#get:length
  local.set $1
  local.get $1
  i32.const 0
  i32.shl
  local.set $2
  local.get $2
  i32.const 44
  call $~lib/rt/stub/__new
  local.set $3
  i32.const 0
  drop
  local.get $3
  local.get $0
  i32.load offset=4
  local.get $2
  call $~lib/memory/memory.copy
  local.get $3
 )
 (func $~lib/staticarray/StaticArray<u8>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 0
  i32.shr_u
 )
 (func $~lib/staticarray/StaticArray<u8>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  call $~lib/staticarray/StaticArray<u8>#get:length
  i32.ge_u
  if
   i32.const 1296
   i32.const 8528
   i32.const 113
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 1296
   i32.const 1360
   i32.const 170
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  local.get $2
  i32.store8
 )
 (func $~lib/near-sdk-core/base64/base64.decode (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  i32.const 0
  local.set $3
  local.get $0
  call $~lib/string/String#get:length
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  if
   i32.const 0
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   return
  end
  local.get $0
  local.get $4
  i32.const 1
  i32.sub
  call $~lib/string/String#charAt
  global.get $~lib/near-sdk-core/base64/PADCHAR
  call $~lib/string/String.__eq
  if
   i32.const 1
   local.set $3
   local.get $0
   local.get $4
   i32.const 2
   i32.sub
   call $~lib/string/String#charAt
   global.get $~lib/near-sdk-core/base64/PADCHAR
   call $~lib/string/String.__eq
   if
    i32.const 2
    local.set $3
   end
   local.get $4
   i32.const 4
   i32.sub
   local.set $4
  end
  local.get $4
  i32.const 4
  i32.rem_u
  i32.const 0
  i32.eq
  if (result i32)
   local.get $4
   i32.const 4
   i32.div_u
   i32.const 3
   i32.mul
  else
   local.get $4
   i32.const 4
   i32.div_u
   i32.const 1
   i32.add
   i32.const 3
   i32.mul
  end
  local.set $5
  local.get $3
  i32.const 0
  i32.gt_s
  if (result i32)
   i32.const 3
   local.get $3
   i32.sub
  else
   i32.const 0
  end
  local.set $6
  local.get $5
  local.get $6
  i32.add
  local.set $7
  i32.const 0
  local.get $7
  call $~lib/typedarray/Uint8Array#constructor
  local.set $8
  i32.const 0
  local.set $9
  i32.const 0
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.lt_u
   local.set $10
   local.get $10
   if
    local.get $0
    local.set $12
    local.get $1
    local.set $11
    global.get $~lib/near-sdk-core/base64/ALPHAVALUES
    local.get $12
    local.get $11
    call $~lib/string/String#charCodeAt
    call $~lib/staticarray/StaticArray<u8>#__get
    i32.const 18
    i32.shl
    local.get $0
    local.set $12
    local.get $1
    i32.const 1
    i32.add
    local.set $11
    global.get $~lib/near-sdk-core/base64/ALPHAVALUES
    local.get $12
    local.get $11
    call $~lib/string/String#charCodeAt
    call $~lib/staticarray/StaticArray<u8>#__get
    i32.const 12
    i32.shl
    i32.or
    local.get $0
    local.set $12
    local.get $1
    i32.const 2
    i32.add
    local.set $11
    global.get $~lib/near-sdk-core/base64/ALPHAVALUES
    local.get $12
    local.get $11
    call $~lib/string/String#charCodeAt
    call $~lib/staticarray/StaticArray<u8>#__get
    i32.const 6
    i32.shl
    i32.or
    local.get $0
    local.set $12
    local.get $1
    i32.const 3
    i32.add
    local.set $11
    global.get $~lib/near-sdk-core/base64/ALPHAVALUES
    local.get $12
    local.get $11
    call $~lib/string/String#charCodeAt
    call $~lib/staticarray/StaticArray<u8>#__get
    i32.or
    local.set $2
    local.get $8
    local.get $9
    local.tee $12
    i32.const 1
    i32.add
    local.set $9
    local.get $12
    local.get $2
    i32.const 16
    i32.shr_u
    call $~lib/typedarray/Uint8Array#__set
    local.get $8
    local.get $9
    local.tee $12
    i32.const 1
    i32.add
    local.set $9
    local.get $12
    local.get $2
    i32.const 8
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $8
    local.get $9
    local.tee $12
    i32.const 1
    i32.add
    local.set $9
    local.get $12
    local.get $2
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  block $break|1
   block $case1|1
    block $case0|1
     local.get $3
     local.set $10
     local.get $10
     i32.const 1
     i32.eq
     br_if $case0|1
     local.get $10
     i32.const 2
     i32.eq
     br_if $case1|1
     br $break|1
    end
    local.get $0
    local.set $12
    local.get $1
    local.set $11
    global.get $~lib/near-sdk-core/base64/ALPHAVALUES
    local.get $12
    local.get $11
    call $~lib/string/String#charCodeAt
    call $~lib/staticarray/StaticArray<u8>#__get
    i32.const 18
    i32.shl
    local.get $0
    local.set $11
    local.get $1
    i32.const 1
    i32.add
    local.set $10
    global.get $~lib/near-sdk-core/base64/ALPHAVALUES
    local.get $11
    local.get $10
    call $~lib/string/String#charCodeAt
    call $~lib/staticarray/StaticArray<u8>#__get
    i32.const 12
    i32.shl
    i32.or
    local.get $0
    local.set $10
    local.get $1
    i32.const 2
    i32.add
    local.set $12
    global.get $~lib/near-sdk-core/base64/ALPHAVALUES
    local.get $10
    local.get $12
    call $~lib/string/String#charCodeAt
    call $~lib/staticarray/StaticArray<u8>#__get
    i32.const 6
    i32.shl
    i32.or
    local.set $2
    local.get $8
    local.get $9
    local.tee $10
    i32.const 1
    i32.add
    local.set $9
    local.get $10
    local.get $2
    i32.const 16
    i32.shr_u
    call $~lib/typedarray/Uint8Array#__set
    local.get $8
    local.get $9
    local.tee $10
    i32.const 1
    i32.add
    local.set $9
    local.get $10
    local.get $2
    i32.const 8
    i32.shr_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    br $break|1
   end
   local.get $0
   local.set $12
   local.get $1
   local.set $11
   global.get $~lib/near-sdk-core/base64/ALPHAVALUES
   local.get $12
   local.get $11
   call $~lib/string/String#charCodeAt
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 18
   i32.shl
   local.get $0
   local.set $11
   local.get $1
   i32.const 1
   i32.add
   local.set $10
   global.get $~lib/near-sdk-core/base64/ALPHAVALUES
   local.get $11
   local.get $10
   call $~lib/string/String#charCodeAt
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 12
   i32.shl
   i32.or
   local.set $2
   local.get $8
   local.get $9
   local.tee $11
   i32.const 1
   i32.add
   local.set $9
   local.get $11
   local.get $2
   i32.const 16
   i32.shr_u
   call $~lib/typedarray/Uint8Array#__set
   br $break|1
  end
  local.get $8
 )
 (func $~lib/near-sdk-core/promise/encodeArgs<~lib/typedarray/Uint8Array> (param $0 i32) (result i32)
  i32.const 1
  drop
  local.get $0
  return
 )
 (func $~lib/near-sdk-core/promise/ContractPromiseBatch#function_call<~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $1
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $5
  local.get $3
  local.set $6
  i32.const 0
  local.set $7
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $8
  local.get $6
  local.set $11
  local.get $8
  i32.load offset=4
  local.set $10
  local.get $7
  local.set $9
  local.get $9
  if
   local.get $11
   local.set $13
   local.get $10
   local.set $12
   local.get $12
   local.get $13
   i64.load offset=8
   call $~lib/polyfills/bswap<u64>
   i64.store
   local.get $12
   local.get $13
   i64.load
   call $~lib/polyfills/bswap<u64>
   i64.store offset=8
  else
   local.get $11
   local.set $13
   local.get $10
   local.set $12
   local.get $12
   local.get $13
   i64.load
   i64.store
   local.get $12
   local.get $13
   i64.load offset=8
   i64.store offset=8
  end
  local.get $8
  local.set $8
  local.get $2
  call $~lib/near-sdk-core/promise/encodeArgs<~lib/typedarray/Uint8Array>
  local.set $7
  local.get $0
  i64.load
  local.get $5
  i32.load offset=8
  i64.extend_i32_s
  local.get $5
  i32.load offset=4
  i64.extend_i32_u
  local.get $7
  i32.load offset=8
  i64.extend_i32_s
  local.get $7
  i32.load offset=4
  i64.extend_i32_u
  local.get $8
  i32.load offset=4
  i64.extend_i32_u
  local.get $4
  call $~lib/near-sdk-core/env/env/env.promise_batch_action_function_call
  local.get $0
 )
 (func $assembly/multicall/internal/make_batch (param $0 i32) (param $1 i32) (param $2 i64) (result i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  if
   local.get $0
   i32.load
   call $~lib/near-sdk-core/promise/ContractPromiseBatch.create
   local.set $3
  else
   i32.const 0
   call $~lib/near-sdk-core/promise/ContractPromiseBatch#constructor
   local.set $4
   local.get $4
   local.get $2
   call $~lib/near-sdk-core/promise/ContractPromiseBatch#set:id
   local.get $4
   local.set $5
   local.get $5
   local.get $0
   i32.load
   call $~lib/near-sdk-core/promise/ContractPromiseBatch#then
   local.set $3
  end
  local.get $0
  i32.load offset=4
  local.set $5
  i32.const 0
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $5
   call $~lib/array/Array<assembly/multicall/model/FunctionCall>#get:length
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $3
    local.get $5
    local.get $6
    call $~lib/array/Array<assembly/multicall/model/FunctionCall>#__get
    i32.load
    local.get $5
    local.get $6
    call $~lib/array/Array<assembly/multicall/model/FunctionCall>#__get
    i32.load offset=4
    call $~lib/near-sdk-core/base64/base64.decode
    local.get $5
    local.get $6
    call $~lib/array/Array<assembly/multicall/model/FunctionCall>#__get
    i32.load offset=16
    local.get $5
    local.get $6
    call $~lib/array/Array<assembly/multicall/model/FunctionCall>#__get
    i64.load offset=8
    call $~lib/near-sdk-core/promise/ContractPromiseBatch#function_call<~lib/typedarray/Uint8Array>
    local.set $3
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  local.get $3
  i64.load
 )
 (func $~lib/array/Array<u64>#__uset (param $0 i32) (param $1 i32) (param $2 i64)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  i64.store
  i32.const 0
  drop
 )
 (func $~lib/array/Array<u64>#__set (param $0 i32) (param $1 i32) (param $2 i64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1296
    i32.const 1088
    i32.const 115
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 3
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/array/Array<u64>#set:length_
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<u64>#__uset
 )
 (func $~lib/array/Array<u64>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/near-sdk-core/contract/Context.get:contractName (result i32)
  i64.const 0
  call $~lib/near-sdk-core/env/env/env.current_account_id
  i64.const 0
  call $~lib/near-sdk-core/util/util.read_register_string
 )
 (func $~lib/near-sdk-core/promise/ContractPromiseBatch#transfer (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  local.set $2
  i32.const 0
  local.set $3
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $4
  local.get $2
  local.set $7
  local.get $4
  i32.load offset=4
  local.set $6
  local.get $3
  local.set $5
  local.get $5
  if
   local.get $7
   local.set $9
   local.get $6
   local.set $8
   local.get $8
   local.get $9
   i64.load offset=8
   call $~lib/polyfills/bswap<u64>
   i64.store
   local.get $8
   local.get $9
   i64.load
   call $~lib/polyfills/bswap<u64>
   i64.store offset=8
  else
   local.get $7
   local.set $9
   local.get $6
   local.set $8
   local.get $8
   local.get $9
   i64.load
   i64.store
   local.get $8
   local.get $9
   i64.load offset=8
   i64.store offset=8
  end
  local.get $4
  local.set $4
  local.get $0
  i64.load
  local.get $4
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.promise_batch_action_transfer
  local.get $0
 )
 (func $assembly/multicall/internal/_internal_multicall (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  i32.const 0
  local.get $0
  call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#get:length
  call $~lib/array/Array<u64>#constructor
  local.set $1
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $0
   call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#get:length
   i32.lt_s
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#__get
    local.set $4
    i32.const 0
    local.set $6
    loop $for-loop|1
     local.get $6
     local.get $4
     call $~lib/array/Array<assembly/multicall/model/BatchCall>#get:length
     i32.lt_s
     local.set $7
     local.get $7
     if
      local.get $6
      i32.const 0
      i32.gt_s
      if
       local.get $4
       local.get $6
       call $~lib/array/Array<assembly/multicall/model/BatchCall>#__get
       i32.const 0
       local.get $5
       call $assembly/multicall/internal/make_batch
       local.set $5
      else
       local.get $4
       local.get $6
       call $~lib/array/Array<assembly/multicall/model/BatchCall>#__get
       i32.const 1
       i64.const 0
       call $assembly/multicall/internal/make_batch
       local.set $5
      end
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|1
     end
    end
    local.get $1
    local.get $2
    local.get $5
    call $~lib/array/Array<u64>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 0
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#constructor
  local.set $2
  local.get $2
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  local.get $1
  call $~lib/array/Array<u64>#get:length
  i64.extend_i32_s
  call $~lib/near-sdk-core/env/env/env.promise_and
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#set:id
  local.get $2
  local.set $3
  local.get $3
  call $~lib/near-sdk-core/contract/Context.get:contractName
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#then
  i32.const 0
  i64.const 0
  i64.const 0
  call $~lib/as-bignum/integer/safe/u128/u128#constructor
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#transfer
  local.set $4
  local.get $4
  i64.load
  call $~lib/near-sdk-core/env/env/env.promise_return
 )
 (func $assembly/multicall/index/multicall (param $0 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  local.get $0
  call $assembly/multicall/internal/_internal_multicall
 )
 (func $assembly/multicall/index/__wrapper_multicall
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 3520
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 3520
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 3520
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
  end
  call $assembly/multicall/index/multicall
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<~lib/string/String> (param $0 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 4480
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<~lib/as-bignum/integer/safe/u128/u128> (param $0 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 5120
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/FtOnTransferArgs> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/FtOnTransferArgs> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/FtOnTransferArgs> (result i32)
  i32.const 8
  i32.const 45
  call $~lib/rt/stub/__new
 )
 (func $assembly/multicall/model/FtOnTransferArgs#set:function_id (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/FtOnTransferArgs#set:args (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/FtOnTransferArgs#_decode (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.const 8880
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 8880
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  end
  call $assembly/multicall/model/FtOnTransferArgs#set:function_id
  local.get $0
  local.get $1
  i32.const 4832
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 4832
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  end
  call $assembly/multicall/model/FtOnTransferArgs#set:args
  local.get $0
 )
 (func $assembly/multicall/model/FtOnTransferArgs#decode<~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $1
  local.set $2
  local.get $0
  local.get $2
  call $assembly/multicall/model/FtOnTransferArgs#_decode
 )
 (func $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/FtOnTransferArgs,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  call $~lib/assemblyscript-json/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/FtOnTransferArgs>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/FtOnTransferArgs>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 8816
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/FtOnTransferArgs>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 8816
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 8816
   call $~lib/string/String.__concat
   i32.const 4352
   call $~lib/string/String.__concat
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
   i32.const 0
   call $~lib/number/Bool#toString
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/FtOnTransferArgs>
  local.set $6
  i32.const 0
  drop
  local.get $6
  local.get $3
  local.tee $5
  i32.const 22
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 418
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  call $assembly/multicall/model/FtOnTransferArgs#decode<~lib/assemblyscript-json/JSON/Obj>
  return
 )
 (func $~lib/near-sdk-core/util/util.parseFromString<assembly/multicall/model/FtOnTransferArgs> (param $0 i32) (result i32)
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  i32.const 528
  call $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/FtOnTransferArgs,~lib/typedarray/Uint8Array>
  return
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/MulticallArgs> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/MulticallArgs> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/MulticallArgs> (result i32)
  i32.const 4
  i32.const 46
  call $~lib/rt/stub/__new
 )
 (func $assembly/multicall/model/MulticallArgs#set:calls (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/MulticallArgs#_decode (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.const 3520
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 3520
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
  end
  call $assembly/multicall/model/MulticallArgs#set:calls
  local.get $0
 )
 (func $assembly/multicall/model/MulticallArgs#decode<~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $1
  local.set $2
  local.get $0
  local.get $2
  call $assembly/multicall/model/MulticallArgs#_decode
 )
 (func $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/MulticallArgs,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  call $~lib/assemblyscript-json/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/MulticallArgs>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/MulticallArgs>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 8976
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/MulticallArgs>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 8976
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 8976
   call $~lib/string/String.__concat
   i32.const 4352
   call $~lib/string/String.__concat
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
   i32.const 0
   call $~lib/number/Bool#toString
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/MulticallArgs>
  local.set $6
  i32.const 0
  drop
  local.get $6
  local.get $3
  local.tee $5
  i32.const 22
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 418
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  call $assembly/multicall/model/MulticallArgs#decode<~lib/assemblyscript-json/JSON/Obj>
  return
 )
 (func $~lib/near-sdk-core/util/util.parseFromBytes<assembly/multicall/model/MulticallArgs> (param $0 i32) (result i32)
  local.get $0
  i32.const 528
  call $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/MulticallArgs,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/JobActivateArgs> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/JobActivateArgs> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/JobActivateArgs> (result i32)
  i32.const 4
  i32.const 47
  call $~lib/rt/stub/__new
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<u32> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<u32> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
 )
 (func $~lib/near-sdk-bindgen/index/decode<u32,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<u32>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<u32>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 1
     drop
     i32.const 3664
     i32.const 9168
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 317
     i32.const 11
     call $~lib/builtins/abort
     unreachable
    else
     i32.const 3664
     i32.const 9168
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 36
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 9168
   call $~lib/string/String.__concat
   i32.const 9200
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 358
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.tee $5
  i32.const 36
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 367
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  i64.load
  i32.wrap_i64
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<u32> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
  return
 )
 (func $assembly/multicall/model/JobActivateArgs#set:job_id (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $assembly/multicall/model/JobActivateArgs#_decode (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.const 9136
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/decode<u32,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<u32>
  end
  call $assembly/multicall/model/JobActivateArgs#set:job_id
  local.get $0
 )
 (func $assembly/multicall/model/JobActivateArgs#decode<~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $1
  local.set $2
  local.get $0
  local.get $2
  call $assembly/multicall/model/JobActivateArgs#_decode
 )
 (func $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/JobActivateArgs,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  call $~lib/assemblyscript-json/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/JobActivateArgs>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/JobActivateArgs>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 9072
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/JobActivateArgs>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 9072
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 9072
   call $~lib/string/String.__concat
   i32.const 4352
   call $~lib/string/String.__concat
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
   i32.const 0
   call $~lib/number/Bool#toString
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/JobActivateArgs>
  local.set $6
  i32.const 0
  drop
  local.get $6
  local.get $3
  local.tee $5
  i32.const 22
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 418
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  call $assembly/multicall/model/JobActivateArgs#decode<~lib/assemblyscript-json/JSON/Obj>
  return
 )
 (func $~lib/near-sdk-core/util/util.parseFromBytes<assembly/multicall/model/JobActivateArgs> (param $0 i32) (result i32)
  local.get $0
  i32.const 528
  call $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/JobActivateArgs,~lib/typedarray/Uint8Array>
 )
 (func $~lib/number/U32#toString (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/util/number/utoa32
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#_key (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  i32.const 10
  call $~lib/number/U32#toString
  call $~lib/string/String.__concat
 )
 (func $~lib/near-sdk-core/storage/Storage.hasKey (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.contains
 )
 (func $~lib/near-sdk-core/storage/Storage._internalReadBytes (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $1
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-sdk-core/env/env/env.storage_read
  local.set $2
  local.get $2
  i64.const 1
  i64.eq
  if
   i64.const 0
   call $~lib/near-sdk-core/util/util.read_register
   return
  else
   i32.const 0
   return
  end
  unreachable
 )
 (func $~lib/near-sdk-core/storage/Storage.getString (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-sdk-core/storage/Storage._internalReadBytes
  call $~lib/near-sdk-core/util/util.bytesToString
 )
 (func $~lib/number/I64.parseInt (param $0 i32) (param $1 i32) (result i64)
  local.get $0
  local.get $1
  call $~lib/util/string/strtol<i64>
 )
 (func $~lib/near-sdk-core/util/util.parseFromString<i32> (param $0 i32) (result i32)
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  i32.const 0
  call $~lib/number/I64.parseInt
  i32.wrap_i64
  return
 )
 (func $~lib/near-sdk-core/storage/Storage.getSome<i32> (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.hasKey
  i32.eqz
  if
   i32.const 0
   i32.eqz
   if
    i32.const 9328
    local.get $0
    call $~lib/string/String.__concat
    i32.const 9360
    call $~lib/string/String.__concat
    i32.const 9456
    i32.const 237
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.getString
  local.tee $1
  if (result i32)
   local.get $1
  else
   i32.const 1136
   i32.const 9456
   i32.const 240
   i32.const 38
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.parseFromString<i32>
  return
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#getSome (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#_key
  call $~lib/near-sdk-core/storage/Storage.getSome<i32>
 )
 (func $~lib/near-sdk-core/storage/Storage.getPrimitive<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  i32.eqz
  drop
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.getString
  local.set $2
  local.get $2
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $1
  else
   local.get $2
   local.tee $3
   if (result i32)
    local.get $3
   else
    i32.const 1136
    i32.const 9456
    i32.const 218
    i32.const 41
    call $~lib/builtins/abort
    unreachable
   end
   call $~lib/near-sdk-core/util/util.parseFromString<i32>
  end
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.lt_s
  if
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 0
   call $~lib/near-sdk-core/storage/Storage.getPrimitive<i32>
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_length
  end
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#containsIndex (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $1
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
   i32.lt_s
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-core/storage/Storage.getBytes (param $0 i32) (result i32)
  local.get $0
  call $~lib/near-sdk-core/storage/Storage._internalReadBytes
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-core/util/util.allocate<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>> (result i32)
  i32.const 8
  i32.const 20
  call $~lib/rt/stub/__new
 )
 (func $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#set:key (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/JobSchema> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/JobSchema> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/JobSchema> (result i32)
  i32.const 72
  i32.const 12
  call $~lib/rt/stub/__new
 )
 (func $assembly/multicall/model/JobSchema#set:id (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $assembly/multicall/model/JobSchema#set:croncat_hash (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/JobSchema#set:creator (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/JobSchema#set:bond (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/JobSchema#set:cadence (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/JobSchema#set:trigger_gas (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=24
 )
 (func $assembly/multicall/model/JobSchema#set:trigger_deposit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=32
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/JobSchema#set:croncat_budget (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=36
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/JobSchema#set:start_at (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=40
 )
 (func $assembly/multicall/model/JobSchema#set:runs_max (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=48
 )
 (func $assembly/multicall/model/JobSchema#set:runs_current (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=56
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<bool> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<bool> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
 )
 (func $~lib/near-sdk-bindgen/index/decode<bool,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<bool>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<bool>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 1
     drop
     i32.const 3664
     i32.const 10464
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 317
     i32.const 11
     call $~lib/builtins/abort
     unreachable
    else
     i32.const 3664
     i32.const 10464
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 33
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 10464
   call $~lib/string/String.__concat
   i32.const 10496
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 331
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.tee $5
  i32.const 33
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 340
   i32.const 24
   call $~lib/builtins/abort
   unreachable
  end
  i32.load8_u
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<bool> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
  return
 )
 (func $assembly/multicall/model/JobSchema#set:is_active (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8 offset=64
 )
 (func $assembly/multicall/model/JobSchema#set:calls (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=68
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/JobSchema#_decode (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.const 9904
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 9904
   call $~lib/near-sdk-bindgen/index/decode<u32,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<u32>
  end
  call $assembly/multicall/model/JobSchema#set:id
  local.get $0
  local.get $1
  i32.const 9936
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 9936
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  end
  call $assembly/multicall/model/JobSchema#set:croncat_hash
  local.get $0
  local.get $1
  i32.const 9984
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 9984
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  end
  call $assembly/multicall/model/JobSchema#set:creator
  local.get $0
  local.get $1
  i32.const 10032
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 10032
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
  end
  call $assembly/multicall/model/JobSchema#set:bond
  local.get $0
  local.get $1
  i32.const 10064
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 10064
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  end
  call $assembly/multicall/model/JobSchema#set:cadence
  local.get $0
  local.get $1
  i32.const 10112
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $1
   i32.const 10112
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  end
  call $assembly/multicall/model/JobSchema#set:trigger_gas
  local.get $0
  local.get $1
  i32.const 10160
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 10160
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
  end
  call $assembly/multicall/model/JobSchema#set:trigger_deposit
  local.get $0
  local.get $1
  i32.const 10224
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 10224
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
  end
  call $assembly/multicall/model/JobSchema#set:croncat_budget
  local.get $0
  local.get $1
  i32.const 10272
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $1
   i32.const 10272
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  end
  call $assembly/multicall/model/JobSchema#set:start_at
  local.get $0
  local.get $1
  i32.const 10320
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $1
   i32.const 10320
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  end
  call $assembly/multicall/model/JobSchema#set:runs_max
  local.get $0
  local.get $1
  i32.const 10368
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $1
   i32.const 10368
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  end
  call $assembly/multicall/model/JobSchema#set:runs_current
  local.get $0
  local.get $1
  i32.const 10416
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 10416
   call $~lib/near-sdk-bindgen/index/decode<bool,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<bool>
  end
  call $assembly/multicall/model/JobSchema#set:is_active
  local.get $0
  local.get $1
  i32.const 3520
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 3520
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
  end
  call $assembly/multicall/model/JobSchema#set:calls
  local.get $0
 )
 (func $assembly/multicall/model/JobSchema#decode<~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $1
  local.set $2
  local.get $0
  local.get $2
  call $assembly/multicall/model/JobSchema#_decode
 )
 (func $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/JobSchema,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/JobSchema>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<assembly/multicall/model/JobSchema>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 9856
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<assembly/multicall/model/JobSchema>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 9856
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 9856
   call $~lib/string/String.__concat
   i32.const 4352
   call $~lib/string/String.__concat
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
   i32.const 0
   call $~lib/number/Bool#toString
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.allocate<assembly/multicall/model/JobSchema>
  local.set $6
  i32.const 0
  drop
  local.get $6
  local.get $3
  local.tee $5
  i32.const 22
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 418
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  call $assembly/multicall/model/JobSchema#decode<~lib/assemblyscript-json/JSON/Obj>
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<assembly/multicall/model/JobSchema> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#set:value (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#_decode (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.const 9792
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 9792
   call $~lib/near-sdk-bindgen/index/decode<u32,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<u32>
  end
  call $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#set:key
  local.get $0
  local.get $1
  i32.const 9824
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $1
   i32.const 9824
   call $~lib/near-sdk-bindgen/index/decode<assembly/multicall/model/JobSchema,~lib/assemblyscript-json/JSON/Obj>
  else
   call $~lib/near-sdk-bindgen/index/defaultValue<assembly/multicall/model/JobSchema>
  end
  call $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#set:value
  local.get $0
 )
 (func $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#decode<~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $1
  local.set $2
  local.get $0
  local.get $2
  call $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#_decode
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  call $~lib/assemblyscript-json/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 9664
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 9664
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 9664
   call $~lib/string/String.__concat
   i32.const 4352
   call $~lib/string/String.__concat
   local.get $3
   local.tee $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    i32.const 22
    call $~lib/rt/__instanceof
   end
   i32.const 0
   call $~lib/number/Bool#toString
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.allocate<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>
  local.set $6
  i32.const 0
  drop
  local.get $6
  local.get $3
  local.tee $5
  i32.const 22
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 418
   i32.const 47
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#decode<~lib/assemblyscript-json/JSON/Obj>
  return
 )
 (func $~lib/near-sdk-core/util/util.parseFromBytes<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>> (param $0 i32) (result i32)
  local.get $0
  i32.const 528
  call $~lib/near-sdk-bindgen/index/decode<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/storage/Storage.getSome<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>> (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.hasKey
  i32.eqz
  if
   i32.const 0
   i32.eqz
   if
    i32.const 9328
    local.get $0
    call $~lib/string/String.__concat
    i32.const 9360
    call $~lib/string/String.__concat
    i32.const 9456
    i32.const 237
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.getBytes
  local.tee $1
  if (result i32)
   local.get $1
  else
   i32.const 1136
   i32.const 9456
   i32.const 242
   i32.const 37
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.parseFromBytes<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>
  return
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $3
  local.get $1
  local.set $2
  local.get $3
  i32.load
  local.get $2
  i32.const 10
  call $~lib/number/I32#toString
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/storage/Storage.getSome<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#containsIndex
  i32.eqz
  if
   i32.const 1296
   i32.const 9536
   i32.const 40
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_get
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#getSome (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#getSome
  local.set $2
  local.get $0
  i32.load offset=4
  local.get $2
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__get
  i32.load offset=4
 )
 (func $~lib/string/String#toString (param $0 i32) (result i32)
  local.get $0
 )
 (func $~lib/near-sdk-core/logging/logging.log<~lib/string/String> (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  call $~lib/string/String#toString
  local.set $2
  local.get $2
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $1
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.log_utf8
 )
 (func $assembly/multicall/model/JobActivateArgs#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 47
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<u32>
  call $assembly/multicall/model/JobActivateArgs#set:job_id
  local.get $0
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#set:contract_id (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#set:function_id (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#set:cadence (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#set:recurring (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8 offset=12
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#set:deposit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#set:gas (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store offset=24
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 1488
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  i32.const 1
 )
 (func $~lib/util/number/decimalCount64High (param $0 i64) (result i32)
  local.get $0
  i64.const 1000000000000000
  i64.lt_u
  if
   local.get $0
   i64.const 1000000000000
   i64.lt_u
   if
    i32.const 10
    local.get $0
    i64.const 100000000000
    i64.ge_u
    i32.add
    local.get $0
    i64.const 10000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 13
    local.get $0
    i64.const 100000000000000
    i64.ge_u
    i32.add
    local.get $0
    i64.const 10000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $0
   i64.const 100000000000000000
   i64.lt_u
   if
    i32.const 16
    local.get $0
    i64.const 10000000000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 18
    local.get $0
    i64.const -8446744073709551616
    i64.ge_u
    i32.add
    local.get $0
    i64.const 1000000000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa64_dec_lut (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  loop $while-continue|0
   local.get $1
   i64.const 100000000
   i64.ge_u
   local.set $3
   local.get $3
   if
    local.get $1
    i64.const 100000000
    i64.div_u
    local.set $4
    local.get $1
    local.get $4
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 10000
    i32.div_u
    local.set $6
    local.get $5
    i32.const 10000
    i32.rem_u
    local.set $7
    local.get $6
    i32.const 100
    i32.div_u
    local.set $8
    local.get $6
    i32.const 100
    i32.rem_u
    local.set $9
    local.get $7
    i32.const 100
    i32.div_u
    local.set $10
    local.get $7
    i32.const 100
    i32.rem_u
    local.set $11
    i32.const 6364
    local.get $10
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $12
    i32.const 6364
    local.get $11
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $13
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $12
    local.get $13
    i64.const 32
    i64.shl
    i64.or
    i64.store
    i32.const 6364
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $12
    i32.const 6364
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $13
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $12
    local.get $13
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $0
  local.get $1
  i32.wrap_i64
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/util/number/itoa64 (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 6160
   i32.const 6288
   i32.const 431
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 6352
   return
  end
  local.get $0
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  local.set $2
  local.get $2
  if
   i64.const 0
   local.get $0
   i64.sub
   local.set $0
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $0
    i32.wrap_i64
    local.set $4
    local.get $4
    call $~lib/util/number/decimalCount32
    local.get $2
    i32.add
    local.set $5
    local.get $5
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $3
    local.get $3
    local.set $8
    local.get $4
    local.set $7
    local.get $5
    local.set $6
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $8
    local.get $7
    local.get $6
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $0
    call $~lib/util/number/decimalCount64High
    local.get $2
    i32.add
    local.set $5
    local.get $5
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $3
    local.get $3
    local.set $7
    local.get $0
    local.set $9
    local.get $5
    local.set $6
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $7
    local.get $9
    local.get $6
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $0
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.get $2
    i32.add
    local.set $5
    local.get $5
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $3
    local.get $3
    local.set $4
    local.get $0
    local.set $9
    local.get $5
    local.set $8
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $4
    local.get $9
    local.get $8
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.get $1
    call $~lib/util/number/ulog_base
    local.get $2
    i32.add
    local.set $5
    local.get $5
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $3
    local.get $3
    local.get $0
    local.get $5
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  local.get $3
 )
 (func $~lib/number/I64#toString (param $0 i64) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/util/number/itoa64
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeInteger (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i32.const 10
  call $~lib/number/I64#toString
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setInteger (param $0 i32) (param $1 i32) (param $2 i64)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeInteger
 )
 (func $~lib/near-sdk-bindgen/index/encode<u32,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $2
  local.get $1
  local.get $0
  i64.extend_i32_u
  call $~lib/assemblyscript-json/encoder/JSONEncoder#setInteger
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $~lib/array/Array<i32>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.lt_s
  if
   i32.const 2784
   i32.const 1088
   i32.const 276
   i32.const 21
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#set:length_
  local.get $2
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#popObject (param $0 i32)
  local.get $0
  i32.const 1808
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  call $~lib/array/Array<i32>#pop
  drop
 )
 (func $assembly/multicall/model/JobActivateArgs#_encode (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
  else
   local.get $2
  end
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 9136
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u32,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
 )
 (func $assembly/multicall/model/JobActivateArgs#encode (param $0 i32) (result i32)
  local.get $0
  i32.const 528
  i32.const 0
  call $assembly/multicall/model/JobActivateArgs#_encode
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
 )
 (func $~lib/near-sdk-core/base64/base64.encode (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 3
  i32.rem_s
  local.set $3
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  local.get $3
  i32.sub
  local.set $4
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 3
  i32.div_s
  i32.const 4
  i32.mul
  local.get $3
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
  else
   i32.const 4
  end
  i32.add
  local.set $5
  local.get $5
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $6
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 0
  i32.eq
  if
   i32.const 528
   return
  end
  local.get $6
  i32.const 2
  i32.sub
  local.set $7
  i32.const 0
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $0
    local.get $1
    call $~lib/typedarray/Uint8Array#__get
    i32.const 16
    i32.shl
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    call $~lib/typedarray/Uint8Array#__get
    i32.const 8
    i32.shl
    i32.or
    local.get $0
    local.get $1
    i32.const 2
    i32.add
    call $~lib/typedarray/Uint8Array#__get
    i32.or
    local.set $2
    local.get $7
    i32.const 2
    i32.add
    local.tee $7
    global.get $~lib/near-sdk-core/base64/ALPHA
    local.get $2
    i32.const 18
    i32.shr_u
    call $~lib/string/String#charCodeAt
    i32.store16
    local.get $7
    i32.const 2
    i32.add
    local.tee $7
    global.get $~lib/near-sdk-core/base64/ALPHA
    local.get $2
    i32.const 12
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charCodeAt
    i32.store16
    local.get $7
    i32.const 2
    i32.add
    local.tee $7
    global.get $~lib/near-sdk-core/base64/ALPHA
    local.get $2
    i32.const 6
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charCodeAt
    i32.store16
    local.get $7
    i32.const 2
    i32.add
    local.tee $7
    global.get $~lib/near-sdk-core/base64/ALPHA
    local.get $2
    i32.const 63
    i32.and
    call $~lib/string/String#charCodeAt
    i32.store16
    local.get $1
    i32.const 3
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  block $break|1
   block $case1|1
    block $case0|1
     local.get $0
     call $~lib/typedarray/Uint8Array#get:length
     local.get $4
     i32.sub
     local.set $8
     local.get $8
     i32.const 1
     i32.eq
     br_if $case0|1
     local.get $8
     i32.const 2
     i32.eq
     br_if $case1|1
     br $break|1
    end
    local.get $0
    local.get $1
    call $~lib/typedarray/Uint8Array#__get
    i32.const 16
    i32.shl
    local.set $2
    local.get $7
    i32.const 2
    i32.add
    local.tee $7
    global.get $~lib/near-sdk-core/base64/ALPHA
    local.get $2
    i32.const 18
    i32.shr_u
    call $~lib/string/String#charCodeAt
    i32.store16
    local.get $7
    i32.const 2
    i32.add
    local.tee $7
    global.get $~lib/near-sdk-core/base64/ALPHA
    local.get $2
    i32.const 12
    i32.shr_u
    i32.const 63
    i32.and
    call $~lib/string/String#charCodeAt
    i32.store16
    local.get $7
    i32.const 2
    i32.add
    local.tee $7
    global.get $~lib/near-sdk-core/base64/PADCHAR
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.store16
    local.get $7
    i32.const 2
    i32.add
    local.tee $7
    global.get $~lib/near-sdk-core/base64/PADCHAR
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.store16
    br $break|1
   end
   local.get $0
   local.get $1
   call $~lib/typedarray/Uint8Array#__get
   i32.const 16
   i32.shl
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/typedarray/Uint8Array#__get
   i32.const 8
   i32.shl
   i32.or
   local.set $2
   local.get $7
   i32.const 2
   i32.add
   local.tee $7
   global.get $~lib/near-sdk-core/base64/ALPHA
   local.get $2
   i32.const 18
   i32.shr_u
   call $~lib/string/String#charCodeAt
   i32.store16
   local.get $7
   i32.const 2
   i32.add
   local.tee $7
   global.get $~lib/near-sdk-core/base64/ALPHA
   local.get $2
   i32.const 12
   i32.shr_u
   i32.const 63
   i32.and
   call $~lib/string/String#charCodeAt
   i32.store16
   local.get $7
   i32.const 2
   i32.add
   local.tee $7
   global.get $~lib/near-sdk-core/base64/ALPHA
   local.get $2
   i32.const 6
   i32.shr_u
   i32.const 63
   i32.and
   call $~lib/string/String#charCodeAt
   i32.store16
   local.get $7
   i32.const 2
   i32.add
   local.tee $7
   global.get $~lib/near-sdk-core/base64/PADCHAR
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.store16
   br $break|1
  end
  local.get $6
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#set:arguments (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=32
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 36
   i32.const 48
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/CroncatCreateTaskArgs#set:contract_id
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/CroncatCreateTaskArgs#set:function_id
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/CroncatCreateTaskArgs#set:cadence
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<bool>
  call $assembly/multicall/model/CroncatCreateTaskArgs#set:recurring
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
  call $assembly/multicall/model/CroncatCreateTaskArgs#set:deposit
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  call $assembly/multicall/model/CroncatCreateTaskArgs#set:gas
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/CroncatCreateTaskArgs#set:arguments
  local.get $0
 )
 (func $~lib/near-sdk-core/contract/Context.get:prepaidGas (result i64)
  call $~lib/near-sdk-core/env/env/env.prepaid_gas
 )
 (func $~lib/near-sdk-core/util/util.parseFromString<~lib/string/String> (param $0 i32) (result i32)
  i32.const 1
  drop
  local.get $0
  return
 )
 (func $~lib/near-sdk-core/storage/Storage.getSome<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.hasKey
  i32.eqz
  if
   i32.const 0
   i32.eqz
   if
    i32.const 9328
    local.get $0
    call $~lib/string/String.__concat
    i32.const 9360
    call $~lib/string/String.__concat
    i32.const 9456
    i32.const 237
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.getString
  local.tee $1
  if (result i32)
   local.get $1
  else
   i32.const 1136
   i32.const 9456
   i32.const 240
   i32.const 38
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.parseFromString<~lib/string/String>
  return
 )
 (func $assembly/multicall/utils/Croncat#get_manager_address (param $0 i32) (result i32)
  local.get $0
  i32.load
  call $~lib/near-sdk-core/storage/Storage.getSome<~lib/string/String>
 )
 (func $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/CroncatCreateTaskArgs> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/string/String>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   local.get $2
   local.get $1
   local.get $0
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#writeBoolean (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  if (result i32)
   i32.const 3088
  else
   i32.const 2976
  end
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#setBoolean (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeBoolean
 )
 (func $~lib/near-sdk-bindgen/index/encode<bool,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 1
  drop
  local.get $2
  local.get $1
  local.get $0
  call $~lib/assemblyscript-json/encoder/JSONEncoder#setBoolean
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/isNull<~lib/as-bignum/integer/safe/u128/u128> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/as-bignum/integer/u128/u128#clone (param $0 i32) (result i32)
  i32.const 0
  local.get $0
  i64.load
  local.get $0
  i64.load offset=8
  call $~lib/as-bignum/integer/u128/u128#constructor
 )
 (func $~lib/typedarray/Int8Array#constructor (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 12
   i32.const 50
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $0
  local.get $0
 )
 (func $~lib/typedarray/Int8Array#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
 )
 (func $~lib/typedarray/Int8Array#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 1296
   i32.const 1360
   i32.const 24
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_s
 )
 (func $~lib/typedarray/Int8Array#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 1296
   i32.const 1360
   i32.const 35
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  local.get $2
  i32.store8
 )
 (func $~lib/as-bignum/utils/processU64 (param $0 i32) (param $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  call $~lib/typedarray/Int8Array#get:length
  i32.const 1
  i32.sub
  local.set $2
  i32.const 63
  local.set $3
  loop $for-loop|0
   local.get $3
   i32.const -1
   i32.ne
   local.set $4
   local.get $4
   if
    i32.const 0
    local.set $5
    loop $for-loop|1
     local.get $5
     local.get $2
     i32.le_s
     local.set $6
     local.get $6
     if
      local.get $0
      local.get $5
      local.get $0
      local.get $5
      call $~lib/typedarray/Int8Array#__get
      local.get $0
      local.get $5
      call $~lib/typedarray/Int8Array#__get
      i32.const 5
      i32.ge_s
      i32.const 3
      i32.mul
      i32.add
      i32.const 24
      i32.shl
      i32.const 24
      i32.shr_s
      call $~lib/typedarray/Int8Array#__set
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|1
     end
    end
    local.get $2
    local.set $5
    loop $for-loop|2
     local.get $5
     i32.const -1
     i32.ne
     local.set $6
     local.get $6
     if
      local.get $0
      local.get $5
      local.get $0
      local.get $5
      call $~lib/typedarray/Int8Array#__get
      i32.const 1
      i32.const 7
      i32.and
      i32.shl
      i32.const 24
      i32.shl
      i32.const 24
      i32.shr_s
      call $~lib/typedarray/Int8Array#__set
      local.get $5
      local.get $2
      i32.lt_s
      if
       local.get $0
       local.get $5
       i32.const 1
       i32.add
       local.get $0
       local.get $5
       i32.const 1
       i32.add
       call $~lib/typedarray/Int8Array#__get
       local.get $0
       local.get $5
       call $~lib/typedarray/Int8Array#__get
       i32.const 15
       i32.gt_s
       i32.or
       i32.const 24
       i32.shl
       i32.const 24
       i32.shr_s
       call $~lib/typedarray/Int8Array#__set
      end
      local.get $0
      local.get $5
      local.get $0
      local.get $5
      call $~lib/typedarray/Int8Array#__get
      i32.const 15
      i32.and
      call $~lib/typedarray/Int8Array#__set
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $for-loop|2
     end
    end
    local.get $0
    i32.const 0
    local.get $0
    i32.const 0
    call $~lib/typedarray/Int8Array#__get
    local.get $1
    i64.const 1
    local.get $3
    i64.extend_i32_s
    i64.shl
    i64.and
    i64.const 0
    i64.ne
    i32.add
    i32.const 24
    i32.shl
    i32.const 24
    i32.shr_s
    call $~lib/typedarray/Int8Array#__set
    local.get $3
    i32.const 1
    i32.sub
    local.set $3
    br $for-loop|0
   end
  end
 )
 (func $~lib/as-bignum/utils/u128toa10 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 40
  local.set $1
  i32.const 0
  local.get $1
  call $~lib/typedarray/Int8Array#constructor
  local.set $2
  local.get $2
  local.get $0
  i64.load offset=8
  call $~lib/as-bignum/utils/processU64
  local.get $2
  local.get $0
  i64.load
  call $~lib/as-bignum/utils/processU64
  i32.const 528
  local.set $3
  i32.const 0
  local.set $4
  local.get $1
  i32.const 1
  i32.sub
  local.set $5
  loop $for-loop|0
   local.get $5
   i32.const -1
   i32.ne
   local.set $6
   local.get $6
   if
    local.get $4
    i32.eqz
    if (result i32)
     local.get $2
     local.get $5
     call $~lib/typedarray/Int8Array#__get
     i32.const 0
     i32.gt_s
    else
     i32.const 0
    end
    if
     i32.const 1
     local.set $4
    end
    local.get $4
    if
     local.get $3
     global.get $~lib/as-bignum/utils/HEX_CHARS
     local.get $2
     local.get $5
     call $~lib/typedarray/Int8Array#__get
     call $~lib/string/String#charAt
     call $~lib/string/String#concat
     local.set $3
    end
    local.get $5
    i32.const 1
    i32.sub
    local.set $5
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $~lib/as-bignum/integer/u128/u128#toString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  local.get $1
  i32.const 10
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 16
   i32.eq
  end
  i32.eqz
  if
   i32.const 11216
   i32.const 8144
   i32.const 929
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $2
  local.get $2
  i64.load
  local.get $2
  i64.load offset=8
  i64.or
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 6352
   return
  end
  i32.const 528
  local.set $3
  local.get $0
  call $~lib/as-bignum/integer/u128/u128#clone@virtual
  local.set $4
  local.get $1
  i32.const 16
  i32.eq
  if
   i32.const 124
   local.get $4
   local.set $2
   local.get $2
   i64.load
   local.set $6
   local.get $2
   i64.load offset=8
   local.set $5
   local.get $5
   local.get $5
   i64.const 1
   i64.sub
   i64.xor
   i64.const 63
   i64.shr_s
   local.set $7
   local.get $5
   local.get $7
   i64.const -1
   i64.xor
   i64.and
   local.get $6
   local.get $7
   i64.and
   i64.or
   i64.clz
   i32.wrap_i64
   local.get $7
   i32.wrap_i64
   i32.const 64
   i32.and
   i32.add
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.sub
   local.set $2
   loop $while-continue|0
    local.get $2
    i32.const 0
    i32.ge_s
    local.set $8
    local.get $8
    if
     local.get $4
     local.set $10
     local.get $2
     local.set $9
     local.get $9
     i32.const 127
     i32.and
     local.set $9
     local.get $9
     i64.extend_i32_s
     local.set $7
     local.get $7
     i64.const 127
     i64.add
     local.get $7
     i64.or
     i64.const 64
     i64.and
     i64.const 6
     i64.shr_u
     i64.const 1
     i64.sub
     local.set $6
     local.get $7
     i64.const 6
     i64.shr_u
     i64.const 1
     i64.sub
     local.set $5
     local.get $7
     i64.const 63
     i64.and
     local.set $7
     local.get $10
     i64.load offset=8
     local.set $11
     local.get $11
     local.get $7
     i64.shr_u
     local.set $12
     local.get $12
     local.get $5
     i64.const -1
     i64.xor
     i64.and
     local.set $13
     local.get $13
     local.get $10
     i64.load
     local.get $7
     i64.shr_u
     local.get $11
     i64.const 64
     local.get $7
     i64.sub
     i64.shl
     local.get $6
     i64.and
     i64.or
     local.get $5
     i64.and
     i64.or
     local.set $13
     i32.const 0
     local.get $13
     local.get $12
     local.get $5
     i64.and
     call $~lib/as-bignum/integer/u128/u128#constructor
     local.set $4
     local.get $3
     global.get $~lib/as-bignum/integer/u128/HEX_CHARS
     local.get $4
     i64.load
     i64.const 15
     i64.and
     i32.wrap_i64
     call $~lib/string/String#charAt
     call $~lib/string/String#concat
     local.set $3
     local.get $2
     i32.const 4
     i32.sub
     local.set $2
     br $while-continue|0
    end
   end
   local.get $3
   return
  end
  local.get $0
  call $~lib/as-bignum/utils/u128toa10
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/as-bignum/integer/safe/u128/u128>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 0
   drop
   i32.const 0
   drop
   i32.const 1
   drop
   local.get $2
   local.get $1
   local.get $0
   i32.const 10
   call $~lib/as-bignum/integer/u128/u128#toString
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $~lib/util/number/utoa64 (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 6160
   i32.const 6288
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 6352
   return
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $0
    i32.wrap_i64
    local.set $3
    local.get $3
    call $~lib/util/number/decimalCount32
    local.set $4
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $2
    local.get $2
    local.set $7
    local.get $3
    local.set $6
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $7
    local.get $6
    local.get $5
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $0
    call $~lib/util/number/decimalCount64High
    local.set $4
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $2
    local.get $2
    local.set $6
    local.get $0
    local.set $8
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $6
    local.get $8
    local.get $5
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $0
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $4
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $2
    local.get $2
    local.set $3
    local.get $0
    local.set $8
    local.get $4
    local.set $7
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $3
    local.get $8
    local.get $7
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $4
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/stub/__new
    local.set $2
    local.get $2
    local.get $0
    local.get $4
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
 )
 (func $~lib/number/U64#toString (param $0 i64) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/util/number/utoa64
 )
 (func $~lib/near-sdk-bindgen/index/encode<u64,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i64) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $2
  local.get $1
  local.get $0
  i32.const 10
  call $~lib/number/U64#toString
  call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $assembly/multicall/model/CroncatCreateTaskArgs#_encode (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
  else
   local.get $2
  end
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 11072
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=4
  i32.const 8880
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=8
  i32.const 10064
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load8_u offset=12
  i32.const 11120
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<bool,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=16
  i32.const 11168
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i64.load offset=24
  i32.const 4864
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u64,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=32
  i32.const 11392
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatCreateTaskArgs,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/CroncatCreateTaskArgs>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $0
   local.get $1
   local.get $2
   call $assembly/multicall/model/CroncatCreateTaskArgs#_encode
   drop
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatCreateTaskArgs,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatCreateTaskArgs,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/contract/encodeArgs<assembly/multicall/model/CroncatCreateTaskArgs> (param $0 i32) (result i32)
  i32.const 0
  drop
  local.get $0
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatCreateTaskArgs,~lib/typedarray/Uint8Array>@varargs
 )
 (func $~lib/near-sdk-core/contract/ContractPromise#set:id (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store
 )
 (func $~lib/near-sdk-core/contract/ContractPromise#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 49
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i64.const 0
  call $~lib/near-sdk-core/contract/ContractPromise#set:id
  local.get $0
 )
 (func $~lib/near-sdk-core/contract/ContractPromise.create<assembly/multicall/model/CroncatCreateTaskArgs> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i64)
  local.get $2
  call $~lib/near-sdk-core/contract/encodeArgs<assembly/multicall/model/CroncatCreateTaskArgs>
  local.set $5
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $6
  local.get $1
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $7
  local.get $4
  local.set $8
  i32.const 0
  local.set $9
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $10
  local.get $8
  local.set $13
  local.get $10
  i32.load offset=4
  local.set $12
  local.get $9
  local.set $11
  local.get $11
  if
   local.get $13
   local.set $15
   local.get $12
   local.set $14
   local.get $14
   local.get $15
   i64.load offset=8
   call $~lib/polyfills/bswap<u64>
   i64.store
   local.get $14
   local.get $15
   i64.load
   call $~lib/polyfills/bswap<u64>
   i64.store offset=8
  else
   local.get $13
   local.set $15
   local.get $12
   local.set $14
   local.get $14
   local.get $15
   i64.load
   i64.store
   local.get $14
   local.get $15
   i64.load offset=8
   i64.store offset=8
  end
  local.get $10
  local.set $10
  local.get $6
  i32.load offset=8
  i64.extend_i32_s
  local.get $6
  i32.load offset=4
  i64.extend_i32_u
  local.get $7
  i32.load offset=8
  i64.extend_i32_s
  local.get $7
  i32.load offset=4
  i64.extend_i32_u
  local.get $5
  i32.load offset=8
  i64.extend_i32_s
  local.get $5
  i32.load offset=4
  i64.extend_i32_u
  local.get $10
  i32.load offset=4
  i64.extend_i32_u
  local.get $3
  call $~lib/near-sdk-core/env/env/env.promise_create
  local.set $16
  i32.const 0
  call $~lib/near-sdk-core/contract/ContractPromise#constructor
  local.set $9
  local.get $9
  local.get $16
  call $~lib/near-sdk-core/contract/ContractPromise#set:id
  local.get $9
 )
 (func $assembly/multicall/utils/Croncat#create_task (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  local.get $0
  call $assembly/multicall/utils/Croncat#get_manager_address
  i32.const 11024
  local.get $1
  local.get $2
  local.get $3
  call $~lib/near-sdk-core/contract/ContractPromise.create<assembly/multicall/model/CroncatCreateTaskArgs>
 )
 (func $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/JobActivateArgs> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/JobActivateArgs,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/JobActivateArgs>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $0
   local.get $1
   local.get $2
   call $assembly/multicall/model/JobActivateArgs#_encode
   drop
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/JobActivateArgs,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/JobActivateArgs,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/contract/encodeArgs<assembly/multicall/model/JobActivateArgs> (param $0 i32) (result i32)
  i32.const 0
  drop
  local.get $0
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/JobActivateArgs,~lib/typedarray/Uint8Array>@varargs
 )
 (func $~lib/near-sdk-core/contract/ContractPromise#then<assembly/multicall/model/JobActivateArgs> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i64)
  local.get $3
  call $~lib/near-sdk-core/contract/encodeArgs<assembly/multicall/model/JobActivateArgs>
  local.set $6
  local.get $1
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $7
  local.get $2
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $8
  local.get $5
  local.set $9
  i32.const 0
  local.set $10
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $11
  local.get $9
  local.set $14
  local.get $11
  i32.load offset=4
  local.set $13
  local.get $10
  local.set $12
  local.get $12
  if
   local.get $14
   local.set $16
   local.get $13
   local.set $15
   local.get $15
   local.get $16
   i64.load offset=8
   call $~lib/polyfills/bswap<u64>
   i64.store
   local.get $15
   local.get $16
   i64.load
   call $~lib/polyfills/bswap<u64>
   i64.store offset=8
  else
   local.get $14
   local.set $16
   local.get $13
   local.set $15
   local.get $15
   local.get $16
   i64.load
   i64.store
   local.get $15
   local.get $16
   i64.load offset=8
   i64.store offset=8
  end
  local.get $11
  local.set $11
  local.get $0
  i64.load
  local.get $7
  i32.load offset=8
  i64.extend_i32_s
  local.get $7
  i32.load offset=4
  i64.extend_i32_u
  local.get $8
  i32.load offset=8
  i64.extend_i32_s
  local.get $8
  i32.load offset=4
  i64.extend_i32_u
  local.get $6
  i32.load offset=8
  i64.extend_i32_s
  local.get $6
  i32.load offset=4
  i64.extend_i32_u
  local.get $11
  i32.load offset=4
  i64.extend_i32_u
  local.get $4
  call $~lib/near-sdk-core/env/env/env.promise_then
  local.set $17
  i32.const 0
  call $~lib/near-sdk-core/contract/ContractPromise#constructor
  local.set $10
  local.get $10
  local.get $17
  call $~lib/near-sdk-core/contract/ContractPromise#set:id
  local.get $10
 )
 (func $~lib/near-sdk-core/contract/ContractPromise#returnAsResult (param $0 i32)
  local.get $0
  i64.load
  call $~lib/near-sdk-core/env/env/env.promise_return
 )
 (func $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 20
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#set:key
  local.get $0
  local.get $2
  call $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#set:value
  local.get $0
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#contains (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#_key
  call $~lib/near-sdk-core/storage/Storage.contains
 )
 (func $~lib/near-sdk-bindgen/index/isNull<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/JobSchema> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#writeKey
  local.get $0
  i32.const 2832
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  i32.const 1
 )
 (func $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<assembly/multicall/model/BatchCall>> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/BatchCall> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<assembly/multicall/model/FunctionCall>> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/FunctionCall> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $assembly/multicall/model/FunctionCall#_encode (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
  else
   local.get $2
  end
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 4800
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=4
  i32.const 4832
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i64.load offset=8
  i32.const 4864
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u64,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=16
  i32.const 5088
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/FunctionCall,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/FunctionCall>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $0
   local.get $1
   local.get $2
   call $assembly/multicall/model/FunctionCall#_encode
   drop
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $~lib/assemblyscript-json/encoder/JSONEncoder#popArray (param $0 i32)
  local.get $0
  i32.const 2864
  call $~lib/assemblyscript-json/encoder/JSONEncoder#write
  local.get $0
  i32.load
  call $~lib/array/Array<i32>#pop
  drop
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<assembly/multicall/model/FunctionCall>,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<assembly/multicall/model/FunctionCall>>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 0
   drop
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray
   drop
   i32.const 0
   local.set $3
   loop $for-loop|0
    local.get $3
    local.get $0
    call $~lib/array/Array<assembly/multicall/model/FunctionCall>#get:length
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $0
     local.get $3
     call $~lib/array/Array<assembly/multicall/model/FunctionCall>#__get
     i32.const 0
     local.get $2
     call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/FunctionCall,~lib/near-sdk-bindgen/index/JSONEncoder>
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   local.get $2
   call $~lib/assemblyscript-json/encoder/JSONEncoder#popArray
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $assembly/multicall/model/BatchCall#_encode (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
  else
   local.get $2
  end
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 4432
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=4
  i32.const 4592
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<assembly/multicall/model/FunctionCall>,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/BatchCall,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/BatchCall>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $0
   local.get $1
   local.get $2
   call $assembly/multicall/model/BatchCall#_encode
   drop
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<assembly/multicall/model/BatchCall>,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<assembly/multicall/model/BatchCall>>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 0
   drop
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray
   drop
   i32.const 0
   local.set $3
   loop $for-loop|0
    local.get $3
    local.get $0
    call $~lib/array/Array<assembly/multicall/model/BatchCall>#get:length
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $0
     local.get $3
     call $~lib/array/Array<assembly/multicall/model/BatchCall>#__get
     i32.const 0
     local.get $2
     call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/BatchCall,~lib/near-sdk-bindgen/index/JSONEncoder>
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   local.get $2
   call $~lib/assemblyscript-json/encoder/JSONEncoder#popArray
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 0
   drop
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray
   drop
   i32.const 0
   local.set $3
   loop $for-loop|0
    local.get $3
    local.get $0
    call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#get:length
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $0
     local.get $3
     call $~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>#__get
     i32.const 0
     local.get $2
     call $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<assembly/multicall/model/BatchCall>,~lib/near-sdk-bindgen/index/JSONEncoder>
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   local.get $2
   call $~lib/assemblyscript-json/encoder/JSONEncoder#popArray
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $assembly/multicall/model/JobSchema#_encode (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
  else
   local.get $2
  end
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 9904
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u32,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=4
  i32.const 9936
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=8
  i32.const 9984
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=12
  i32.const 10032
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=16
  i32.const 10064
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i64.load offset=24
  i32.const 10112
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u64,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=32
  i32.const 10160
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=36
  i32.const 10224
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i64.load offset=40
  i32.const 10272
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u64,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i64.load offset=48
  i32.const 10320
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u64,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i64.load offset=56
  i32.const 10368
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u64,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load8_u offset=64
  i32.const 10416
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<bool,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=68
  i32.const 3520
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/JobSchema,~lib/near-sdk-bindgen/index/JSONEncoder> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/JobSchema>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $0
   local.get $1
   local.get $2
   call $assembly/multicall/model/JobSchema#_encode
   drop
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
 )
 (func $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#_encode (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
  else
   local.get $2
  end
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 9792
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<u32,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $0
  i32.load offset=4
  i32.const 9824
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/JobSchema,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $0
   local.get $1
   local.get $2
   call $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#_encode
   drop
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/storage/Storage.setBytes (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i64)
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $2
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-sdk-core/env/env/env.storage_write
  local.set $3
 )
 (func $~lib/near-sdk-core/storage/Storage.set<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>> (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $0
  local.get $1
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array>@varargs
  call $~lib/near-sdk-core/storage/Storage.setBytes
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  i32.const 10
  call $~lib/number/I32#toString
  call $~lib/string/String.__concat
  local.get $2
  call $~lib/near-sdk-core/storage/Storage.set<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#containsIndex
  i32.eqz
  if
   i32.const 1296
   i32.const 9536
   i32.const 49
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_set
 )
 (func $~lib/near-sdk-core/storage/Storage.setString (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $2
  local.get $1
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $3
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  local.get $3
  i32.load offset=8
  i64.extend_i32_s
  local.get $3
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-sdk-core/env/env/env.storage_write
  local.set $4
 )
 (func $~lib/near-sdk-core/storage/Storage.set<i32> (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  local.get $1
  i32.const 10
  call $~lib/number/I32#toString
  call $~lib/near-sdk-core/storage/Storage.setString
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#_key
  local.get $2
  call $~lib/near-sdk-core/storage/Storage.set<i32>
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:length (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:_length
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/near-sdk-core/storage/Storage.set<i32>
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
  local.set $2
  local.get $0
  local.get $2
  i32.const 1
  i32.add
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:length
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_set
  local.get $2
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  local.get $1
  local.get $2
  call $~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>#constructor
  local.set $3
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#contains
  if
   local.get $0
   i32.load
   local.get $1
   call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#getSome
   local.set $4
   local.get $0
   i32.load offset=4
   local.get $4
   local.get $3
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__set
  else
   local.get $0
   i32.load
   local.get $1
   local.get $0
   i32.load offset=4
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
   call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#set
   local.get $0
   i32.load offset=4
   local.get $3
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#push
   drop
  end
 )
 (func $assembly/multicall/jobs/Jobs#activate (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#getSome
  local.set $3
  local.get $3
  i32.load8_u offset=64
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  if
   i32.const 10656
   i32.const 1
   local.get $3
   i32.load
   i32.const 10
   call $~lib/number/U32#toString
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 10656
   i32.const 528
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   call $~lib/near-sdk-core/logging/logging.log<~lib/string/String>
   return
  end
  local.get $3
  i32.load offset=4
  i32.const 528
  call $~lib/string/String.__ne
  if
   i32.const 10768
   i32.const 1
   local.get $3
   i32.load
   i32.const 10
   call $~lib/number/U32#toString
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 10768
   i32.const 3
   local.get $3
   i32.load offset=4
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 10768
   i32.const 528
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   call $~lib/near-sdk-core/logging/logging.log<~lib/string/String>
  else
   i32.const 0
   call $assembly/multicall/model/JobActivateArgs#constructor
   local.set $4
   local.get $4
   local.get $3
   i32.load
   call $assembly/multicall/model/JobActivateArgs#set:job_id
   local.get $4
   local.set $5
   local.get $0
   i32.load offset=8
   i32.const 0
   call $assembly/multicall/model/CroncatCreateTaskArgs#constructor
   local.set $6
   local.get $6
   call $~lib/near-sdk-core/contract/Context.get:contractName
   call $assembly/multicall/model/CroncatCreateTaskArgs#set:contract_id
   local.get $6
   i32.const 10816
   call $assembly/multicall/model/CroncatCreateTaskArgs#set:function_id
   local.get $6
   local.get $3
   i32.load offset=16
   call $assembly/multicall/model/CroncatCreateTaskArgs#set:cadence
   local.get $6
   local.get $3
   i64.load offset=48
   i64.const 1
   i64.gt_u
   if (result i32)
    i32.const 1
   else
    i32.const 0
   end
   call $assembly/multicall/model/CroncatCreateTaskArgs#set:recurring
   local.get $6
   local.get $3
   i32.load offset=32
   call $assembly/multicall/model/CroncatCreateTaskArgs#set:deposit
   local.get $6
   local.get $3
   i64.load offset=24
   call $assembly/multicall/model/CroncatCreateTaskArgs#set:gas
   local.get $6
   local.get $5
   call $assembly/multicall/model/JobActivateArgs#encode
   call $~lib/near-sdk-core/base64/base64.encode
   call $assembly/multicall/model/CroncatCreateTaskArgs#set:arguments
   local.get $6
   call $~lib/near-sdk-core/contract/Context.get:prepaidGas
   local.get $0
   i64.load offset=16
   i64.sub
   local.get $3
   i32.load offset=36
   call $assembly/multicall/utils/Croncat#create_task
   call $~lib/near-sdk-core/contract/Context.get:contractName
   local.get $2
   local.get $5
   local.get $0
   i64.load offset=40
   i32.const 0
   i64.const 0
   i64.const 0
   call $~lib/as-bignum/integer/safe/u128/u128#constructor
   call $~lib/near-sdk-core/contract/ContractPromise#then<assembly/multicall/model/JobActivateArgs>
   local.set $7
   local.get $7
   call $~lib/near-sdk-core/contract/ContractPromise#returnAsResult
  end
  local.get $3
  i32.load offset=12
  local.set $7
  i32.const 0
  i64.const 0
  i64.const 0
  call $~lib/as-bignum/integer/safe/u128/u128#constructor
  local.set $5
  local.get $7
  i64.load offset=8
  local.set $8
  local.get $5
  i64.load offset=8
  local.set $9
  local.get $8
  local.get $9
  i64.eq
  if (result i32)
   local.get $7
   i64.load
   local.get $5
   i64.load
   i64.gt_u
  else
   local.get $8
   local.get $9
   i64.gt_u
  end
  if
   local.get $3
   i32.load offset=12
   local.set $7
   local.get $3
   i32.const 0
   i64.const 0
   i64.const 0
   call $~lib/as-bignum/integer/safe/u128/u128#constructor
   call $assembly/multicall/model/JobSchema#set:bond
   local.get $3
   i32.load offset=8
   call $~lib/near-sdk-core/promise/ContractPromiseBatch.create
   local.get $7
   call $~lib/near-sdk-core/promise/ContractPromiseBatch#transfer
   drop
   local.get $0
   i32.load offset=12
   local.get $3
   i32.load
   local.get $3
   call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set
  end
 )
 (func $assembly/multicall/index/ft_on_transfer (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $assembly/multicall/index/tokens
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#has
  i32.eqz
  if
   i32.const 8784
   i32.const 1
   call $~lib/near-sdk-core/contract/Context.get:predecessor
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 8784
   i32.const 528
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 8064
   i32.const 40
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $assembly/multicall/index/_is_admin
  local.get $2
  call $~lib/near-sdk-core/util/util.parseFromString<assembly/multicall/model/FtOnTransferArgs>
  local.set $3
  local.get $3
  i32.load
  i32.const 8928
  call $~lib/string/String.__eq
  if
   local.get $3
   i32.load offset=4
   call $~lib/near-sdk-core/base64/base64.decode
   call $~lib/near-sdk-core/util/util.parseFromBytes<assembly/multicall/model/MulticallArgs>
   local.set $4
   local.get $4
   i32.load
   call $assembly/multicall/internal/_internal_multicall
  else
   local.get $3
   i32.load
   i32.const 9024
   call $~lib/string/String.__eq
   if
    local.get $3
    i32.load offset=4
    call $~lib/near-sdk-core/base64/base64.decode
    call $~lib/near-sdk-core/util/util.parseFromBytes<assembly/multicall/model/JobActivateArgs>
    local.set $4
    global.get $assembly/multicall/index/_jobs
    local.get $4
    i32.load
    i32.const 9264
    call $assembly/multicall/jobs/Jobs#activate
   end
  end
 )
 (func $assembly/multicall/index/__wrapper_ft_on_transfer
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 8592
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 8592
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 8592
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/string/String>
  end
  local.get $0
  i32.const 8640
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 8640
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 8640
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/as-bignum/integer/safe/u128/u128>
  end
  local.get $0
  i32.const 8672
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 8672
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 8672
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/string/String>
  end
  call $assembly/multicall/index/ft_on_transfer
 )
 (func $assembly/multicall/utils/StorageCostUtils.storage_byte_cost (result i32)
  global.get $assembly/multicall/utils/StorageCostUtils.STORAGE_PRICE_PER_BYTE
 )
 (func $~lib/near-sdk-core/contract/Context.get:storageUsage (result i64)
  call $~lib/near-sdk-core/env/env/env.storage_usage
 )
 (func $~lib/as-bignum/integer/safe/u128/u128.mul (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i32)
  local.get $0
  local.set $2
  local.get $2
  i64.load
  local.get $2
  i64.load offset=8
  i64.or
  i64.const 0
  i64.ne
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $1
   local.set $2
   local.get $2
   i64.load
   local.get $2
   i64.load offset=8
   i64.or
   i64.const 0
   i64.ne
   i32.eqz
  end
  if
   i32.const 0
   i64.const 0
   i64.const 0
   call $~lib/as-bignum/integer/safe/u128/u128#constructor
   return
  end
  local.get $0
  local.set $2
  local.get $2
  i64.load
  local.set $4
  local.get $2
  i64.load offset=8
  local.set $3
  local.get $3
  local.get $3
  i64.const 1
  i64.sub
  i64.xor
  i64.const 63
  i64.shr_s
  local.set $5
  local.get $3
  local.get $5
  i64.const -1
  i64.xor
  i64.and
  local.get $4
  local.get $5
  i64.and
  i64.or
  i64.clz
  i32.wrap_i64
  local.get $5
  i32.wrap_i64
  i32.const 64
  i32.and
  i32.add
  local.get $1
  local.set $2
  local.get $2
  i64.load
  local.set $4
  local.get $2
  i64.load offset=8
  local.set $3
  local.get $3
  local.get $3
  i64.const 1
  i64.sub
  i64.xor
  i64.const 63
  i64.shr_s
  local.set $5
  local.get $3
  local.get $5
  i64.const -1
  i64.xor
  i64.and
  local.get $4
  local.get $5
  i64.and
  i64.or
  i64.clz
  i32.wrap_i64
  local.get $5
  i32.wrap_i64
  i32.const 64
  i32.and
  i32.add
  i32.add
  local.set $6
  local.get $6
  i32.const 127
  i32.lt_s
  if
   i32.const 11488
   i32.const 11568
   i32.const 252
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $6
  i32.const 127
  i32.eq
  if
   local.get $0
   local.set $11
   local.get $1
   local.set $7
   i32.const 1
   local.set $2
   local.get $2
   i32.const 127
   i32.and
   local.set $2
   local.get $2
   i64.extend_i32_s
   local.set $5
   local.get $5
   i64.const 127
   i64.add
   local.get $5
   i64.or
   i64.const 64
   i64.and
   i64.const 6
   i64.shr_u
   i64.const 1
   i64.sub
   local.set $4
   local.get $5
   i64.const 6
   i64.shr_u
   i64.const 1
   i64.sub
   local.set $3
   local.get $5
   i64.const 63
   i64.and
   local.set $5
   local.get $7
   i64.load offset=8
   local.set $8
   local.get $8
   local.get $5
   i64.shr_u
   local.set $9
   local.get $9
   local.get $3
   i64.const -1
   i64.xor
   i64.and
   local.set $10
   local.get $10
   local.get $7
   i64.load
   local.get $5
   i64.shr_u
   local.get $8
   i64.const 64
   local.get $5
   i64.sub
   i64.shl
   local.get $4
   i64.and
   i64.or
   local.get $3
   i64.and
   i64.or
   local.set $10
   i32.const 0
   local.get $10
   local.get $9
   local.get $3
   i64.and
   call $~lib/as-bignum/integer/u128/u128#constructor
   local.set $2
   i32.const 0
   local.get $11
   i64.load
   local.get $11
   i64.load offset=8
   local.get $2
   i64.load
   local.get $2
   i64.load offset=8
   call $~lib/as-bignum/globals/__multi3
   global.get $~lib/as-bignum/globals/__res128_hi
   call $~lib/as-bignum/integer/u128/u128#constructor
   local.set $11
   local.get $11
   i64.load offset=8
   i64.const 63
   i64.shr_u
   i64.const 0
   i64.ne
   if
    i32.const 11488
    i32.const 11568
    i32.const 260
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   local.get $11
   local.set $2
   i32.const 1
   local.set $7
   local.get $7
   i32.const 127
   i32.and
   local.set $7
   local.get $7
   i64.extend_i32_s
   local.set $10
   local.get $10
   i64.const 127
   i64.add
   local.get $10
   i64.or
   i64.const 64
   i64.and
   i64.const 6
   i64.shr_u
   i64.const 1
   i64.sub
   local.set $9
   local.get $10
   i64.const 6
   i64.shr_u
   i64.const 1
   i64.sub
   local.set $8
   local.get $10
   i64.const 63
   i64.and
   local.set $10
   local.get $2
   i64.load
   local.set $3
   local.get $3
   local.get $10
   i64.shl
   local.set $4
   local.get $4
   local.get $8
   i64.const -1
   i64.xor
   i64.and
   local.set $5
   local.get $5
   local.get $2
   i64.load offset=8
   local.get $10
   i64.shl
   local.get $3
   i64.const 64
   local.get $10
   i64.sub
   i64.shr_u
   local.get $9
   i64.and
   i64.or
   local.get $8
   i64.and
   i64.or
   local.set $5
   i32.const 0
   local.get $4
   local.get $8
   i64.and
   local.get $5
   call $~lib/as-bignum/integer/u128/u128#constructor
   local.set $2
   local.get $1
   i64.load
   i64.const 1
   i64.and
   i64.const 0
   i64.ne
   if
    local.get $2
    local.set $12
    local.get $0
    local.set $7
    local.get $12
    i64.load
    local.set $5
    local.get $5
    local.get $7
    i64.load
    i64.add
    local.set $4
    local.get $12
    i64.load offset=8
    local.get $7
    i64.load offset=8
    i64.add
    local.get $4
    local.get $5
    i64.lt_u
    i64.extend_i32_u
    i64.add
    local.set $3
    i32.const 0
    local.get $4
    local.get $3
    call $~lib/as-bignum/integer/u128/u128#constructor
    local.set $2
    local.get $2
    local.set $12
    local.get $0
    local.set $7
    local.get $12
    i64.load offset=8
    local.set $3
    local.get $7
    i64.load offset=8
    local.set $4
    local.get $3
    local.get $4
    i64.eq
    if (result i32)
     local.get $12
     i64.load
     local.get $7
     i64.load
     i64.lt_u
    else
     local.get $3
     local.get $4
     i64.lt_u
    end
    if
     i32.const 11488
     i32.const 11568
     i32.const 269
     i32.const 11
     call $~lib/builtins/abort
     unreachable
    end
   end
   local.get $2
   return
  end
  local.get $0
  local.set $12
  local.get $1
  local.set $7
  i32.const 0
  local.get $12
  i64.load
  local.get $12
  i64.load offset=8
  local.get $7
  i64.load
  local.get $7
  i64.load offset=8
  call $~lib/as-bignum/globals/__multi3
  global.get $~lib/as-bignum/globals/__res128_hi
  call $~lib/as-bignum/integer/u128/u128#constructor
 )
 (func $assembly/multicall/utils/StorageCostUtils.get_min_storage_balance (result i32)
  (local $0 i64)
  (local $1 i64)
  call $assembly/multicall/utils/StorageCostUtils.storage_byte_cost
  call $~lib/near-sdk-core/contract/Context.get:storageUsage
  local.set $0
  local.get $0
  local.set $1
  i32.const 0
  local.get $1
  i64.const 0
  call $~lib/as-bignum/integer/u128/u128#constructor
  call $~lib/as-bignum/integer/safe/u128/u128.mul
 )
 (func $~lib/near-sdk-core/contract/Context.get:accountBalance (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $0
  local.get $0
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-core/env/env/env.account_balance
  local.get $0
  local.set $1
  i32.const 0
  local.set $2
  block $~lib/as-bignum/integer/u128/u128.fromBytes<~lib/typedarray/Uint8Array>|inlined.1 (result i32)
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   i32.const 0
   drop
   i32.const 1
   drop
   local.get $3
   if (result i32)
    local.get $4
    local.set $5
    local.get $5
    call $~lib/typedarray/Uint8Array#get:length
    if (result i32)
     local.get $5
     call $~lib/typedarray/Uint8Array#get:length
     i32.const 15
     i32.and
     i32.const 0
     i32.eq
    else
     i32.const 0
    end
    i32.eqz
    if
     i32.const 0
     i32.const 8144
     i32.const 143
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $5
    i32.load offset=4
    local.set $6
    i32.const 0
    local.get $6
    i64.load offset=8
    call $~lib/polyfills/bswap<u64>
    local.get $6
    i64.load
    call $~lib/polyfills/bswap<u64>
    call $~lib/as-bignum/integer/u128/u128#constructor
   else
    local.get $4
    local.set $5
    local.get $5
    call $~lib/typedarray/Uint8Array#get:length
    if (result i32)
     local.get $5
     call $~lib/typedarray/Uint8Array#get:length
     i32.const 15
     i32.and
     i32.const 0
     i32.eq
    else
     i32.const 0
    end
    i32.eqz
    if
     i32.const 0
     i32.const 8144
     i32.const 132
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $5
    i32.load offset=4
    local.set $6
    i32.const 0
    local.get $6
    i64.load
    local.get $6
    i64.load offset=8
    call $~lib/as-bignum/integer/u128/u128#constructor
   end
   br $~lib/as-bignum/integer/u128/u128.fromBytes<~lib/typedarray/Uint8Array>|inlined.1
  end
 )
 (func $~lib/as-bignum/integer/safe/u128/u128.sub (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  local.get $0
  local.set $3
  local.get $1
  local.set $2
  local.get $3
  i64.load offset=8
  local.set $4
  local.get $2
  i64.load offset=8
  local.set $5
  local.get $4
  local.get $5
  i64.eq
  if (result i32)
   local.get $3
   i64.load
   local.get $2
   i64.load
   i64.lt_u
  else
   local.get $4
   local.get $5
   i64.lt_u
  end
  if
   i32.const 11664
   i32.const 11568
   i32.const 239
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $3
  local.get $1
  local.set $2
  local.get $3
  i64.load
  local.set $5
  local.get $5
  local.get $2
  i64.load
  i64.sub
  local.set $4
  local.get $3
  i64.load offset=8
  local.get $2
  i64.load offset=8
  i64.sub
  local.get $4
  local.get $5
  i64.gt_u
  i64.extend_i32_u
  i64.sub
  local.set $6
  i32.const 0
  local.get $4
  local.get $6
  call $~lib/as-bignum/integer/u128/u128#constructor
 )
 (func $assembly/multicall/index/near_transfer (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  local.get $1
  local.set $3
  i32.const 0
  i64.const -1
  i64.const -1
  call $~lib/as-bignum/integer/safe/u128/u128#constructor
  local.set $2
  local.get $3
  i64.load offset=8
  local.get $2
  i64.load offset=8
  i64.eq
  if (result i32)
   local.get $3
   i64.load
   local.get $2
   i64.load
   i64.eq
  else
   i32.const 0
  end
  if
   call $assembly/multicall/utils/StorageCostUtils.get_min_storage_balance
   local.set $3
   call $~lib/near-sdk-core/contract/Context.get:accountBalance
   local.get $3
   call $~lib/as-bignum/integer/safe/u128/u128.sub
   local.set $1
  end
  local.get $0
  call $~lib/near-sdk-core/promise/ContractPromiseBatch.create
  local.get $1
  call $~lib/near-sdk-core/promise/ContractPromiseBatch#transfer
  drop
 )
 (func $assembly/multicall/index/__wrapper_near_transfer
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 11440
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 11440
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 11440
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/string/String>
  end
  local.get $0
  i32.const 8640
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 8640
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 0
   i64.const -1
   i64.const -1
   call $~lib/as-bignum/integer/safe/u128/u128#constructor
  end
  call $assembly/multicall/index/near_transfer
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<~lib/string/String>> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<~lib/string/String>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Value> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/string/String>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/string/String>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 4480
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/string/String>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 4480
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 1
  drop
  local.get $3
  local.set $5
  local.get $1
  local.set $4
  local.get $5
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 32
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $4
   call $~lib/string/String.__concat
   i32.const 4512
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 218
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  local.tee $7
  i32.const 32
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $7
  else
   i32.const 1648
   i32.const 3440
   i32.const 222
   i32.const 21
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  return
 )
 (func $~lib/near-sdk-bindgen/index/decodeArray<~lib/string/String> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.tee $2
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $2
   i32.const 30
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 4112
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 226
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $2
  local.get $0
  local.tee $3
  i32.const 30
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $3
  else
   i32.const 1648
   i32.const 3440
   i32.const 231
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $3
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#__get
    i32.const 528
    call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Value>
    local.set $6
    local.get $2
    local.get $6
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/string/String>,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<~lib/string/String>>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<~lib/string/String>>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 11792
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<~lib/string/String>>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 11792
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $3
  local.get $1
  call $~lib/near-sdk-bindgen/index/decodeArray<~lib/string/String>
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<~lib/string/String>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/string/String>> (param $0 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 11792
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<~lib/string/String>>
 )
 (func $~lib/array/Array<~lib/string/String>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 1520
   i32.const 1088
   i32.const 103
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 0
  i32.lt_s
  if
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 0
   call $~lib/near-sdk-core/storage/Storage.getPrimitive<i32>
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_length
  end
  local.get $0
  i32.load offset=8
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#_key
  local.get $2
  call $~lib/near-sdk-core/storage/Storage.set<i32>
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:length (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:_length
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/near-sdk-core/storage/Storage.set<i32>
 )
 (func $~lib/near-sdk-core/storage/Storage.set<~lib/string/String> (param $0 i32) (param $1 i32)
  i32.const 1
  drop
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/storage/Storage.setString
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  i32.const 10
  call $~lib/number/I32#toString
  call $~lib/string/String.__concat
  local.get $2
  call $~lib/near-sdk-core/storage/Storage.set<~lib/string/String>
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  local.set $2
  local.get $0
  local.get $2
  i32.const 1
  i32.add
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:length
  local.get $0
  local.get $2
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set
  local.get $2
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#add (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#has
  if
   return
  end
  local.get $0
  i32.load
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#_hashedItem
  local.get $0
  i32.load offset=4
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#set
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#push
  drop
 )
 (func $assembly/multicall/index/admins_add (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  i32.const 0
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   local.set $2
   local.get $2
   if
    global.get $assembly/multicall/index/admins
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#__get
    call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#add
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
 )
 (func $assembly/multicall/index/__wrapper_admins_add
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 11744
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 11744
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/string/String>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 11744
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/string/String>>
  end
  call $assembly/multicall/index/admins_add
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $3
  local.get $1
  local.set $2
  local.get $3
  i32.load
  local.get $2
  i32.const 10
  call $~lib/number/I32#toString
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/storage/Storage.getSome<~lib/string/String>
 )
 (func $~lib/near-sdk-core/storage/Storage.delete (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $1
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  i64.const 0
  call $~lib/near-sdk-core/env/env/env.storage_remove
  local.set $2
  local.get $2
  i64.const 0
  i64.ne
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 0
  i32.gt_s
  i32.eqz
  if
   i32.const 12096
   i32.const 9536
   i32.const 67
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  local.set $1
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:length
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get
  local.set $2
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  i32.const 10
  call $~lib/number/I32#toString
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/storage/Storage.delete
  drop
  local.get $2
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#delete (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#_key
  call $~lib/near-sdk-core/storage/Storage.delete
  drop
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#clear (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  loop $while-continue|0
   local.get $0
   i32.load offset=4
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
   i32.const 0
   i32.gt_s
   local.set $1
   local.get $1
   if
    local.get $0
    i32.load offset=4
    local.set $2
    local.get $2
    call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#pop
    local.set $2
    local.get $0
    i32.load
    local.get $0
    local.get $2
    call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#_hashedItem
    call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#delete
    br $while-continue|0
   end
  end
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $1
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
   i32.lt_s
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#containsIndex
  i32.eqz
  if
   i32.const 1296
   i32.const 9536
   i32.const 40
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:back (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__get
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#getSome (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#_key
  call $~lib/near-sdk-core/storage/Storage.getSome<i32>
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#swap_remove (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.lt_s
  i32.eqz
  if
   i32.const 12160
   i32.const 9536
   i32.const 79
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.add
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.eq
  if
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#pop
   return
  else
   local.get $0
   local.get $1
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get
   local.set $2
   local.get $0
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
   i32.const 1
   i32.sub
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_get
   local.set $3
   local.get $0
   local.set $5
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
   i32.const 1
   i32.sub
   local.set $4
   local.get $5
   i32.load
   local.get $4
   i32.const 10
   call $~lib/number/I32#toString
   call $~lib/string/String.__concat
   call $~lib/near-sdk-core/storage/Storage.delete
   drop
   local.get $0
   local.get $1
   local.get $3
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__unchecked_set
   local.get $0
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
   i32.const 1
   i32.sub
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#set:length
   local.get $2
   return
  end
  unreachable
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#delete (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#_hashedItem
  local.set $2
  local.get $0
  i32.load
  local.get $2
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#contains
  i32.eqz
  if
   i32.const 11872
   i32.const 11968
   i32.const 36
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
  i32.const 1
  i32.eq
  if
   local.get $0
   call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#clear
   return
  end
  local.get $0
  i32.load offset=4
  local.set $3
  local.get $3
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:back
  local.set $3
  local.get $0
  i32.load
  local.get $2
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#getSome
  local.set $4
  local.get $0
  i32.load offset=4
  local.get $4
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#swap_remove
  drop
  local.get $0
  local.get $3
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#_hashedItem
  local.set $5
  local.get $0
  i32.load
  local.get $5
  local.get $4
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<~lib/typedarray/Uint8Array,i32>#set
 )
 (func $assembly/multicall/index/admins_remove (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  i32.const 0
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   local.set $2
   local.get $2
   if
    global.get $assembly/multicall/index/admins
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#__get
    call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#delete
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
 )
 (func $assembly/multicall/index/__wrapper_admins_remove
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 11744
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 11744
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/string/String>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 11744
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/string/String>>
  end
  call $assembly/multicall/index/admins_remove
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<i32> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<i32> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
 )
 (func $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<i32>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<i32>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 1
     drop
     i32.const 3664
     i32.const 12256
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 317
     i32.const 11
     call $~lib/builtins/abort
     unreachable
    else
     i32.const 3664
     i32.const 12256
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 36
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 12256
   call $~lib/string/String.__concat
   i32.const 9200
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 358
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.tee $5
  i32.const 36
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 367
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  i64.load
  i32.wrap_i64
  return
 )
 (func $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#values (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $1
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.load offset=4
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#get:length
   i32.lt_s
   local.set $3
   local.get $3
   if
    local.get $0
    i32.load offset=4
    local.get $2
    call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/string/String>#__get
    local.set $4
    local.get $1
    local.get $4
    call $~lib/array/Array<~lib/string/String>#push
    drop
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
 )
 (func $~lib/array/Array<~lib/string/String>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $2
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $3
  local.get $3
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.set $6
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $8
  i32.const 1
  drop
  i32.const 0
  local.set $4
  local.get $3
  i32.const 2
  i32.shl
  local.set $5
  loop $while-continue|0
   local.get $4
   local.get $5
   i32.lt_u
   local.set $9
   local.get $9
   if
    local.get $8
    local.get $4
    i32.add
    i32.load
    local.set $10
    local.get $7
    local.get $4
    i32.add
    local.get $10
    i32.store
    local.get $6
    local.get $10
    i32.const 1
    call $~lib/rt/stub/__link
    local.get $4
    i32.const 4
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
  local.get $6
 )
 (func $assembly/multicall/index/get_admins (param $0 i32) (param $1 i32) (result i32)
  global.get $assembly/multicall/index/admins
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#values
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#slice
 )
 (func $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<~lib/string/String>> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<~lib/string/String>>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 0
   drop
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray
   drop
   i32.const 0
   local.set $3
   loop $for-loop|0
    local.get $3
    local.get $0
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $0
     local.get $3
     call $~lib/array/Array<~lib/string/String>#__get
     i32.const 0
     local.get $2
     call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   local.get $2
   call $~lib/assemblyscript-json/encoder/JSONEncoder#popArray
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-bindgen/index/value_return (param $0 i64) (param $1 i64)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/env/env/env.value_return
 )
 (func $assembly/multicall/index/__wrapper_get_admins
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 12224
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12224
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 0
  end
  local.get $0
  i32.const 12288
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12288
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   global.get $~lib/builtins/i32.MAX_VALUE
  end
  call $assembly/multicall/index/get_admins
  local.set $1
  local.get $1
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array>@varargs
  local.set $2
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-bindgen/index/value_return
 )
 (func $assembly/multicall/index/tokens_add (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  i32.const 0
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   local.set $2
   local.get $2
   if
    global.get $assembly/multicall/index/tokens
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#__get
    call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#add
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
 )
 (func $assembly/multicall/index/__wrapper_tokens_add
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 12320
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12320
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/string/String>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12320
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/string/String>>
  end
  call $assembly/multicall/index/tokens_add
 )
 (func $assembly/multicall/index/tokens_remove (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  i32.const 0
  local.set $1
  loop $for-loop|0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   local.set $2
   local.get $2
   if
    global.get $assembly/multicall/index/tokens
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#__get
    call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#delete
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
 )
 (func $assembly/multicall/index/__wrapper_tokens_remove
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 12320
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12320
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/string/String>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12320
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/string/String>>
  end
  call $assembly/multicall/index/tokens_remove
 )
 (func $assembly/multicall/index/get_tokens (param $0 i32) (param $1 i32) (result i32)
  global.get $assembly/multicall/index/tokens
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#values
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#slice
 )
 (func $assembly/multicall/index/__wrapper_get_tokens
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 12224
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12224
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 0
  end
  local.get $0
  i32.const 12288
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12288
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   global.get $~lib/builtins/i32.MAX_VALUE
  end
  call $assembly/multicall/index/get_tokens
  local.set $1
  local.get $1
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<~lib/string/String>,~lib/typedarray/Uint8Array>@varargs
  local.set $2
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-bindgen/index/value_return
 )
 (func $~lib/near-sdk-core/storage/Storage.get<~lib/string/String> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.getString
  local.set $2
  local.get $2
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $1
  else
   local.get $2
   local.tee $3
   if (result i32)
    local.get $3
   else
    i32.const 1136
    i32.const 9456
    i32.const 185
    i32.const 43
    call $~lib/builtins/abort
    unreachable
   end
   call $~lib/near-sdk-core/util/util.parseFromString<~lib/string/String>
  end
  return
 )
 (func $assembly/multicall/utils/Croncat#set_manager_address (param $0 i32) (param $1 i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-sdk-core/storage/Storage.set<~lib/string/String>
 )
 (func $assembly/multicall/jobs/Jobs#set_croncat_manager (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=8
  local.get $1
  call $assembly/multicall/utils/Croncat#set_manager_address
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/as-bignum/integer/safe/u128/u128>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 0
   drop
   i32.const 0
   drop
   i32.const 1
   drop
   local.get $2
   local.get $1
   local.get $0
   i32.const 10
   call $~lib/as-bignum/integer/u128/u128#toString
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setString
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/storage/Storage.set<~lib/as-bignum/integer/safe/u128/u128> (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $0
  local.get $1
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/typedarray/Uint8Array>@varargs
  call $~lib/near-sdk-core/storage/Storage.setBytes
 )
 (func $assembly/multicall/jobs/Jobs#set_bond (param $0 i32) (param $1 i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-sdk-core/storage/Storage.set<~lib/as-bignum/integer/safe/u128/u128>
 )
 (func $assembly/multicall/index/init (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $assembly/multicall/index/KEY_INIT
  i32.const 0
  call $~lib/near-sdk-core/storage/Storage.get<~lib/string/String>
  i32.const 0
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 12528
   i32.const 8064
   i32.const 87
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $assembly/multicall/index/admins
  call $~lib/near-sdk-core/contract/Context.get:contractName
  call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#add
  i32.const 0
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   local.set $4
   local.get $4
   if
    global.get $assembly/multicall/index/admins
    local.get $0
    local.get $3
    call $~lib/array/Array<~lib/string/String>#__get
    call $~lib/near-sdk-core/collections/persistentSet/PersistentSet<~lib/string/String>#add
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $assembly/multicall/index/_jobs
  local.get $1
  call $assembly/multicall/jobs/Jobs#set_croncat_manager
  global.get $assembly/multicall/index/_jobs
  local.get $2
  call $assembly/multicall/jobs/Jobs#set_bond
  global.get $assembly/multicall/index/KEY_INIT
  i32.const 12592
  call $~lib/near-sdk-core/storage/Storage.set<~lib/string/String>
 )
 (func $assembly/multicall/index/__wrapper_init
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 12368
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12368
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/string/String>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12368
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/string/String>>
  end
  local.get $0
  i32.const 12416
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12416
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12416
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/string/String>
  end
  local.get $0
  i32.const 12480
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12480
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12480
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/as-bignum/integer/safe/u128/u128>
  end
  call $assembly/multicall/index/init
 )
 (func $assembly/multicall/index/set_croncat_manager (param $0 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  global.get $assembly/multicall/index/_jobs
  local.get $0
  call $assembly/multicall/jobs/Jobs#set_croncat_manager
 )
 (func $assembly/multicall/index/__wrapper_set_croncat_manager
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 4432
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 4432
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 4432
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/string/String>
  end
  call $assembly/multicall/index/set_croncat_manager
 )
 (func $assembly/multicall/jobs/Jobs#get_croncat_manager (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  call $assembly/multicall/utils/Croncat#get_manager_address
 )
 (func $assembly/multicall/index/get_croncat_manager (result i32)
  global.get $assembly/multicall/index/_jobs
  call $assembly/multicall/jobs/Jobs#get_croncat_manager
 )
 (func $assembly/multicall/index/__wrapper_get_croncat_manager
  (local $0 i32)
  (local $1 i32)
  call $assembly/multicall/index/get_croncat_manager
  local.set $0
  local.get $0
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/typedarray/Uint8Array>@varargs
  local.set $1
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-bindgen/index/value_return
 )
 (func $assembly/multicall/index/job_set_bond (param $0 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  global.get $assembly/multicall/index/_jobs
  local.get $0
  call $assembly/multicall/jobs/Jobs#set_bond
 )
 (func $assembly/multicall/index/__wrapper_job_set_bond
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 8640
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 8640
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 8640
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/as-bignum/integer/safe/u128/u128>
  end
  call $assembly/multicall/index/job_set_bond
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $2
  local.get $2
  call $~lib/assemblyscript-json/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/as-bignum/integer/safe/u128/u128>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/as-bignum/integer/safe/u128/u128>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 5120
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/as-bignum/integer/safe/u128/u128>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 5120
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 32
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 5152
   call $~lib/string/String.__concat
   local.get $3
   call $~lib/near-sdk-bindgen/index/JSONTypeToString<~lib/assemblyscript-json/JSON/Value>
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 468
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.set $5
  local.get $1
  local.set $4
  local.get $5
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 32
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $4
   call $~lib/string/String.__concat
   i32.const 4512
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 218
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  local.tee $7
  i32.const 32
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $7
  else
   i32.const 1648
   i32.const 3440
   i32.const 222
   i32.const 21
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  local.set $7
  i32.const 10
  local.set $5
  local.get $7
  local.get $5
  call $~lib/as-bignum/utils/atou128
  return
 )
 (func $~lib/near-sdk-core/util/util.parseFromBytes<~lib/as-bignum/integer/safe/u128/u128> (param $0 i32) (result i32)
  local.get $0
  i32.const 528
  call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/storage/Storage.getSome<~lib/as-bignum/integer/safe/u128/u128> (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.hasKey
  i32.eqz
  if
   i32.const 0
   i32.eqz
   if
    i32.const 9328
    local.get $0
    call $~lib/string/String.__concat
    i32.const 9360
    call $~lib/string/String.__concat
    i32.const 9456
    i32.const 237
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.getBytes
  local.tee $1
  if (result i32)
   local.get $1
  else
   i32.const 1136
   i32.const 9456
   i32.const 242
   i32.const 37
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/util/util.parseFromBytes<~lib/as-bignum/integer/safe/u128/u128>
  return
 )
 (func $assembly/multicall/jobs/Jobs#get_bond (param $0 i32) (result i32)
  local.get $0
  i32.load
  call $~lib/near-sdk-core/storage/Storage.getSome<~lib/as-bignum/integer/safe/u128/u128>
 )
 (func $assembly/multicall/index/job_get_bond (result i32)
  global.get $assembly/multicall/index/_jobs
  call $assembly/multicall/jobs/Jobs#get_bond
 )
 (func $assembly/multicall/index/__wrapper_job_get_bond
  (local $0 i32)
  (local $1 i32)
  call $assembly/multicall/index/job_get_bond
  local.set $0
  local.get $0
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<~lib/as-bignum/integer/safe/u128/u128,~lib/typedarray/Uint8Array>@varargs
  local.set $1
  local.get $1
  i32.load offset=8
  i64.extend_i32_s
  local.get $1
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-bindgen/index/value_return
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
 )
 (func $~lib/array/Array<assembly/multicall/model/JobSchema>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<assembly/multicall/model/JobSchema>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<assembly/multicall/model/JobSchema>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<assembly/multicall/model/JobSchema>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<assembly/multicall/model/JobSchema>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 51
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:length_
  local.get $0
 )
 (func $~lib/array/Array<assembly/multicall/model/JobSchema>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 1
  call $~lib/rt/stub/__link
  local.get $0
  local.get $3
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#set:length_
  local.get $3
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#values (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/multicall/model/JobSchema>#constructor
  local.set $3
  local.get $2
  local.tee $4
  local.get $0
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#get:length
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  local.set $4
  local.get $1
  local.set $5
  loop $for-loop|0
   local.get $5
   local.get $4
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $3
    local.get $0
    i32.load offset=4
    local.get $5
    call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__get
    i32.load offset=4
    call $~lib/array/Array<assembly/multicall/model/JobSchema>#push
    drop
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $assembly/multicall/jobs/Jobs#get_jobs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.load offset=12
  local.get $1
  local.get $2
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#values
 )
 (func $assembly/multicall/index/get_jobs (param $0 i32) (param $1 i32) (result i32)
  global.get $assembly/multicall/index/_jobs
  local.get $0
  local.get $1
  call $assembly/multicall/jobs/Jobs#get_jobs
 )
 (func $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<assembly/multicall/model/JobSchema>> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $~lib/array/Array<assembly/multicall/model/JobSchema>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<assembly/multicall/model/JobSchema>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 1520
   i32.const 1088
   i32.const 103
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<~lib/array/Array<assembly/multicall/model/JobSchema>>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 0
   drop
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#pushArray
   drop
   i32.const 0
   local.set $3
   loop $for-loop|0
    local.get $3
    local.get $0
    call $~lib/array/Array<assembly/multicall/model/JobSchema>#get:length
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $0
     local.get $3
     call $~lib/array/Array<assembly/multicall/model/JobSchema>#__get
     i32.const 0
     local.get $2
     call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/JobSchema,~lib/near-sdk-bindgen/index/JSONEncoder>
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   local.get $2
   call $~lib/assemblyscript-json/encoder/JSONEncoder#popArray
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array>
 )
 (func $assembly/multicall/index/__wrapper_get_jobs
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 12224
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12224
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 0
  end
  local.get $0
  i32.const 12288
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12288
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   global.get $assembly/multicall/index/_jobs
   i32.load offset=12
   call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#get:length
  end
  call $assembly/multicall/index/get_jobs
  local.set $1
  local.get $1
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<~lib/array/Array<assembly/multicall/model/JobSchema>,~lib/typedarray/Uint8Array>@varargs
  local.set $2
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-bindgen/index/value_return
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<u64> (param $0 i32) (result i64)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 4896
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<u64>
 )
 (func $~lib/near-sdk-core/util/util.parseFromString<u32> (param $0 i32) (result i32)
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $0
  i32.const 0
  call $~lib/number/U64.parseInt
  i32.wrap_i64
  return
 )
 (func $~lib/near-sdk-core/storage/Storage.getPrimitive<u32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  i32.eqz
  drop
  local.get $0
  call $~lib/near-sdk-core/storage/Storage.getString
  local.set $2
  local.get $2
  i32.const 0
  call $~lib/string/String.__eq
  if (result i32)
   local.get $1
  else
   local.get $2
   local.tee $3
   if (result i32)
    local.get $3
   else
    i32.const 1136
    i32.const 9456
    i32.const 218
    i32.const 41
    call $~lib/builtins/abort
    unreachable
   end
   call $~lib/near-sdk-core/util/util.parseFromString<u32>
  end
 )
 (func $assembly/multicall/model/JobSchema#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 72
   i32.const 12
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<u32>
  call $assembly/multicall/model/JobSchema#set:id
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/JobSchema#set:croncat_hash
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/JobSchema#set:creator
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
  call $assembly/multicall/model/JobSchema#set:bond
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/JobSchema#set:cadence
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  call $assembly/multicall/model/JobSchema#set:trigger_gas
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
  call $assembly/multicall/model/JobSchema#set:trigger_deposit
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/as-bignum/integer/safe/u128/u128>
  call $assembly/multicall/model/JobSchema#set:croncat_budget
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  call $assembly/multicall/model/JobSchema#set:start_at
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  call $assembly/multicall/model/JobSchema#set:runs_max
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<u64>
  call $assembly/multicall/model/JobSchema#set:runs_current
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<bool>
  call $assembly/multicall/model/JobSchema#set:is_active
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
  call $assembly/multicall/model/JobSchema#set:calls
  local.get $0
 )
 (func $~lib/near-sdk-core/storage/Storage.set<u32> (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  local.get $1
  i32.const 10
  call $~lib/number/U32#toString
  call $~lib/near-sdk-core/storage/Storage.setString
 )
 (func $assembly/multicall/jobs/Jobs#add (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i32) (param $5 i32) (param $6 i64) (param $7 i64) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i64)
  local.get $0
  call $assembly/multicall/jobs/Jobs#get_bond
  local.set $8
  call $~lib/near-sdk-core/contract/Context.get:attachedDeposit
  local.set $10
  local.get $8
  local.set $9
  local.get $10
  local.set $12
  local.get $9
  local.set $11
  local.get $12
  i64.load offset=8
  local.set $13
  local.get $11
  i64.load offset=8
  local.set $14
  local.get $13
  local.get $14
  i64.eq
  if (result i32)
   local.get $12
   i64.load
   local.get $11
   i64.load
   i64.lt_u
  else
   local.get $13
   local.get $14
   i64.lt_u
  end
  i32.eqz
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 13008
   i32.const 13168
   i32.const 55
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  i32.const 0
  call $~lib/near-sdk-core/storage/Storage.getPrimitive<u32>
  local.set $10
  i32.const 0
  call $assembly/multicall/model/JobSchema#constructor
  local.set $9
  local.get $9
  local.get $10
  call $assembly/multicall/model/JobSchema#set:id
  local.get $9
  i32.const 528
  call $assembly/multicall/model/JobSchema#set:croncat_hash
  local.get $9
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/model/JobSchema#set:creator
  local.get $9
  local.get $8
  call $assembly/multicall/model/JobSchema#set:bond
  local.get $9
  local.get $2
  call $assembly/multicall/model/JobSchema#set:cadence
  local.get $9
  local.get $3
  call $assembly/multicall/model/JobSchema#set:trigger_gas
  local.get $9
  local.get $4
  call $assembly/multicall/model/JobSchema#set:trigger_deposit
  local.get $9
  local.get $5
  call $assembly/multicall/model/JobSchema#set:croncat_budget
  local.get $9
  local.get $7
  call $assembly/multicall/model/JobSchema#set:start_at
  local.get $9
  local.get $6
  call $assembly/multicall/model/JobSchema#set:runs_max
  local.get $9
  i64.const 0
  call $assembly/multicall/model/JobSchema#set:runs_current
  local.get $9
  i32.const 0
  call $assembly/multicall/model/JobSchema#set:is_active
  local.get $9
  local.get $1
  call $assembly/multicall/model/JobSchema#set:calls
  local.get $9
  local.set $12
  local.get $0
  i32.load offset=4
  local.get $12
  i32.load
  i32.const 1
  i32.add
  call $~lib/near-sdk-core/storage/Storage.set<u32>
  local.get $0
  i32.load offset=12
  local.get $12
  i32.load
  local.get $12
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set
  local.get $12
  i32.load
 )
 (func $assembly/multicall/index/job_add (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (param $4 i32) (param $5 i64) (param $6 i64) (result i32)
  global.get $assembly/multicall/index/_jobs
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  call $assembly/multicall/jobs/Jobs#add
 )
 (func $~lib/near-sdk-bindgen/index/encode<i32,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $2
  local.get $1
  local.get $0
  i64.extend_i32_s
  call $~lib/assemblyscript-json/encoder/JSONEncoder#setInteger
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<i32,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<i32,~lib/typedarray/Uint8Array>
 )
 (func $assembly/multicall/index/__wrapper_job_add
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 12624
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12624
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12624
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
  end
  local.get $0
  i32.const 12672
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12672
   call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12672
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/string/String>
  end
  local.get $0
  i32.const 12720
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $0
   i32.const 12720
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12720
   call $~lib/near-sdk-bindgen/index/requireParameter<u64>
  end
  local.get $0
  i32.const 12784
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12784
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12784
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/as-bignum/integer/safe/u128/u128>
  end
  local.get $0
  i32.const 12848
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12848
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12848
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/as-bignum/integer/safe/u128/u128>
  end
  local.get $0
  i32.const 12912
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $0
   i32.const 12912
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12912
   call $~lib/near-sdk-bindgen/index/requireParameter<u64>
  end
  local.get $0
  i32.const 12960
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $0
   i32.const 12960
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12960
   call $~lib/near-sdk-bindgen/index/requireParameter<u64>
  end
  call $assembly/multicall/index/job_add
  local.set $1
  local.get $1
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<i32,~lib/typedarray/Uint8Array>@varargs
  local.set $2
  local.get $2
  i32.load offset=8
  i64.extend_i32_s
  local.get $2
  i32.load offset=4
  i64.extend_i32_u
  call $~lib/near-sdk-bindgen/index/value_return
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<i32> (param $0 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 12256
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<i32>
 )
 (func $assembly/multicall/index/job_activate (param $0 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  global.get $assembly/multicall/index/_jobs
  local.get $0
  i32.const 9264
  call $assembly/multicall/jobs/Jobs#activate
 )
 (func $assembly/multicall/index/__wrapper_job_activate
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 9136
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/requireParameter<i32>
  end
  call $assembly/multicall/index/job_activate
 )
 (func $assembly/multicall/index/_is_private
  call $~lib/near-sdk-core/contract/Context.get:contractName
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 13248
   i32.const 8064
   i32.const 161
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 53
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:length_
  local.get $0
 )
 (func $~lib/near-sdk-core/contract/ContractPromiseResult#set:status (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/near-sdk-core/contract/ContractPromiseResult#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/near-sdk-core/contract/ContractPromiseResult#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 8
   i32.const 52
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/contract/ContractPromiseResult#set:status
  local.get $0
  local.get $2
  call $~lib/near-sdk-core/contract/ContractPromiseResult#set:buffer
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/typedarray/Uint8Array> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-core/contract/ContractPromiseResult#constructor@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   call $~lib/near-sdk-bindgen/index/defaultValue<~lib/typedarray/Uint8Array>
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-core/contract/ContractPromiseResult#constructor
 )
 (func $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1296
    i32.const 1088
    i32.const 115
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#set:length_
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#__uset
 )
 (func $~lib/near-sdk-core/contract/ContractPromise.getResults (result i32)
  (local $0 i64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  call $~lib/near-sdk-core/env/env/env.promise_results_count
  local.set $0
  i32.const 0
  local.get $0
  i32.wrap_i64
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#constructor
  local.set $1
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   i64.extend_i32_s
   local.get $0
   i64.lt_s
   local.set $3
   local.get $3
   if
    block $for-continue|0
     local.get $2
     i64.extend_i32_s
     i64.const 0
     call $~lib/near-sdk-core/env/env/env.promise_result
     i32.wrap_i64
     local.set $4
     local.get $4
     global.get $~lib/near-sdk-core/contract/PromiseStatus.Successful
     i32.eq
     local.set $5
     local.get $5
     i32.eqz
     if
      local.get $1
      local.get $2
      i32.const 0
      local.get $4
      i32.const 1
      global.set $~argumentsLength
      i32.const 0
      call $~lib/near-sdk-core/contract/ContractPromiseResult#constructor@varargs
      call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#__set
      br $for-continue|0
     end
     i64.const 0
     call $~lib/near-sdk-core/util/util.read_register
     local.set $6
     local.get $1
     local.get $2
     i32.const 0
     local.get $4
     local.get $6
     call $~lib/near-sdk-core/contract/ContractPromiseResult#constructor
     call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#__set
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
 )
 (func $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 1520
   i32.const 1088
   i32.const 103
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
 )
 (func $~lib/near-sdk-core/contract/ContractPromiseResult#get:succeeded (param $0 i32) (result i32)
  local.get $0
  i32.load
  global.get $~lib/near-sdk-core/contract/PromiseStatus.Successful
  i32.eq
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.set $2
  local.get $2
  call $~lib/assemblyscript-json/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/string/String>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/string/String>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 4480
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/string/String>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 4480
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 1
  drop
  local.get $3
  local.set $5
  local.get $1
  local.set $4
  local.get $5
  local.tee $7
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $7
   i32.const 32
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $4
   call $~lib/string/String.__concat
   i32.const 4512
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 218
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  local.tee $7
  i32.const 32
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $7
  else
   i32.const 1648
   i32.const 3440
   i32.const 222
   i32.const 21
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  return
 )
 (func $~lib/near-sdk-core/contract/ContractPromiseResult#decode<~lib/string/String> (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.const 528
  call $~lib/near-sdk-bindgen/index/decode<~lib/string/String,~lib/typedarray/Uint8Array>
 )
 (func $assembly/multicall/jobs/Jobs#activate_callback (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#getSome
  local.set $2
  call $~lib/near-sdk-core/contract/ContractPromise.getResults
  i32.const 0
  call $~lib/array/Array<~lib/near-sdk-core/contract/ContractPromiseResult>#__get
  local.set $3
  local.get $3
  call $~lib/near-sdk-core/contract/ContractPromiseResult#get:succeeded
  if
   local.get $2
   local.get $3
   call $~lib/near-sdk-core/contract/ContractPromiseResult#decode<~lib/string/String>
   call $assembly/multicall/model/JobSchema#set:croncat_hash
   local.get $2
   i32.const 1
   call $assembly/multicall/model/JobSchema#set:is_active
   local.get $0
   i32.load offset=12
   local.get $2
   i32.load
   local.get $2
   call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set
  end
 )
 (func $assembly/multicall/index/job_activate_callback (param $0 i32)
  call $assembly/multicall/index/_is_private
  global.get $assembly/multicall/index/_jobs
  local.get $0
  call $assembly/multicall/jobs/Jobs#activate_callback
 )
 (func $assembly/multicall/index/__wrapper_job_activate_callback
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 9136
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/requireParameter<i32>
  end
  call $assembly/multicall/index/job_activate_callback
 )
 (func $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<u32>> (result i32)
  i32.const 1
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<u32>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array<u32>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<u32>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<u32>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<u32>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<u32>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.eqz
  if
   i32.const 16
   i32.const 54
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<u32>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<u32>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<u32>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<u32>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 976
   i32.const 1088
   i32.const 64
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  local.get $4
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $5
  local.get $5
  i32.const 0
  local.get $4
  call $~lib/memory/memory.fill
  local.get $0
  local.get $5
  call $~lib/array/Array<u32>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<u32>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<u32>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<u32>#set:length_
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/decode<u32,~lib/assemblyscript-json/JSON/Value> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<u32>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<u32>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 1
     drop
     i32.const 3664
     i32.const 9168
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 317
     i32.const 11
     call $~lib/builtins/abort
     unreachable
    else
     i32.const 3664
     i32.const 9168
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 36
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 9168
   call $~lib/string/String.__concat
   i32.const 9200
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 358
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.tee $5
  i32.const 36
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $5
  else
   i32.const 1648
   i32.const 3440
   i32.const 367
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  i64.load
  i32.wrap_i64
  return
 )
 (func $~lib/array/Array<u32>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $3
  call $~lib/array/Array<u32>#set:length_
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/decodeArray<u32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.tee $2
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $2
   i32.const 30
   call $~lib/rt/__instanceof
  end
  i32.eqz
  if
   i32.const 4048
   local.get $1
   call $~lib/string/String.__concat
   i32.const 4112
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 226
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 0
  call $~lib/array/Array<u32>#constructor
  local.set $2
  local.get $0
  local.tee $3
  i32.const 30
  call $~lib/rt/__instanceof
  if (result i32)
   local.get $3
  else
   i32.const 1648
   i32.const 3440
   i32.const 231
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#get:length
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $3
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-json/JSON/Value>#__get
    i32.const 528
    call $~lib/near-sdk-bindgen/index/decode<u32,~lib/assemblyscript-json/JSON/Value>
    local.set $6
    local.get $2
    local.get $6
    call $~lib/array/Array<u32>#push
    drop
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $2
 )
 (func $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<u32>,~lib/assemblyscript-json/JSON/Obj> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  local.set $2
  local.get $2
  local.tee $4
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $4
   i32.const 22
   call $~lib/rt/__instanceof
  end
  if (result i32)
   local.get $1
   i32.const 528
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   local.get $2
   local.tee $4
   i32.const 22
   call $~lib/rt/__instanceof
   if (result i32)
    local.get $4
   else
    i32.const 1648
    i32.const 3440
    i32.const 310
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   local.get $4
   local.get $1
   call $~lib/assemblyscript-json/JSON/Obj#get
   local.set $5
   local.get $5
   i32.const 0
   i32.eq
   if
    call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<u32>>
    if (result i32)
     call $~lib/near-sdk-bindgen/index/isNumber<~lib/array/Array<u32>>
     i32.eqz
    else
     i32.const 0
    end
    if
     i32.const 0
     drop
     i32.const 0
     drop
     local.get $5
     return
    else
     i32.const 3664
     i32.const 13360
     call $~lib/string/String.__concat
     i32.const 3840
     call $~lib/string/String.__concat
     i32.const 3440
     i32.const 323
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    unreachable
   end
   local.get $5
   local.set $3
  else
   local.get $2
   local.set $3
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $3
  local.tee $5
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $5
   i32.const 37
   call $~lib/rt/__instanceof
  end
  if
   call $~lib/near-sdk-bindgen/index/isReallyNullable<~lib/array/Array<u32>>
   i32.eqz
   if
    i32.const 3904
    local.get $1
    call $~lib/string/String.__concat
    i32.const 3936
    call $~lib/string/String.__concat
    i32.const 13360
    call $~lib/string/String.__concat
    i32.const 3984
    call $~lib/string/String.__concat
    i32.const 3440
    i32.const 381
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $3
  local.get $1
  call $~lib/near-sdk-bindgen/index/decodeArray<u32>
  return
 )
 (func $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<u32>> (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
  i32.const 0
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<u32>> (param $0 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 13360
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/array/Array<u32>>
 )
 (func $~lib/array/Array<u32>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1296
   i32.const 1088
   i32.const 99
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#contains (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#contains
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#get (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#contains
  i32.eqz
  if
   local.get $2
   return
  end
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#getSome
 )
 (func $assembly/multicall/jobs/Jobs#pause (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.lt_s
   local.set $3
   local.get $3
   if
    block $for-continue|0
     local.get $0
     i32.load offset=12
     local.get $1
     local.get $2
     call $~lib/array/Array<u32>#__get
     i32.const 0
     call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#get
     local.set $4
     local.get $4
     i32.const 0
     i32.ne
     if
      local.get $4
      local.set $5
      local.get $5
      i32.load8_u offset=64
      i32.const 0
      i32.ne
      i32.const 0
      i32.eq
      if
       i32.const 13472
       i32.const 1
       local.get $5
       i32.load
       i32.const 10
       call $~lib/number/U32#toString
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 13472
       i32.const 528
       call $~lib/staticarray/StaticArray<~lib/string/String>#join
       call $~lib/near-sdk-core/logging/logging.log<~lib/string/String>
       br $for-continue|0
      end
      local.get $5
      i32.const 0
      call $assembly/multicall/model/JobSchema#set:is_active
      local.get $0
      i32.load offset=12
      local.get $5
      i32.load
      local.get $5
      call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set
     else
      i32.const 13552
      i32.const 1
      local.get $1
      local.get $2
      call $~lib/array/Array<u32>#__get
      i32.const 10
      call $~lib/number/U32#toString
      call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
      i32.const 13552
      i32.const 528
      call $~lib/staticarray/StaticArray<~lib/string/String>#join
      call $~lib/near-sdk-core/logging/logging.log<~lib/string/String>
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
 )
 (func $assembly/multicall/index/jobs_pause (param $0 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  global.get $assembly/multicall/index/_jobs
  local.get $0
  call $assembly/multicall/jobs/Jobs#pause
 )
 (func $assembly/multicall/index/__wrapper_jobs_pause
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 13312
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 13312
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<u32>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 13312
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<u32>>
  end
  call $assembly/multicall/index/jobs_pause
 )
 (func $assembly/multicall/jobs/Jobs#resume (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.lt_s
   local.set $3
   local.get $3
   if
    block $for-continue|0
     local.get $0
     i32.load offset=12
     local.get $1
     local.get $2
     call $~lib/array/Array<u32>#__get
     i32.const 0
     call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#get
     local.set $4
     local.get $4
     i32.const 0
     i32.ne
     if
      local.get $4
      local.set $5
      local.get $5
      i32.load8_u offset=64
      i32.const 0
      i32.ne
      i32.const 1
      i32.eq
      if
       i32.const 13584
       i32.const 1
       local.get $5
       i32.load
       i32.const 10
       call $~lib/number/U32#toString
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 13584
       i32.const 528
       call $~lib/staticarray/StaticArray<~lib/string/String>#join
       call $~lib/near-sdk-core/logging/logging.log<~lib/string/String>
       br $for-continue|0
      end
      local.get $5
      i32.const 1
      call $assembly/multicall/model/JobSchema#set:is_active
      local.get $0
      i32.load offset=12
      local.get $5
      i32.load
      local.get $5
      call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set
     else
      i32.const 13616
      i32.const 1
      local.get $1
      local.get $2
      call $~lib/array/Array<u32>#__get
      i32.const 10
      call $~lib/number/U32#toString
      call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
      i32.const 13616
      i32.const 528
      call $~lib/staticarray/StaticArray<~lib/string/String>#join
      call $~lib/near-sdk-core/logging/logging.log<~lib/string/String>
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
 )
 (func $assembly/multicall/index/jobs_resume (param $0 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  global.get $assembly/multicall/index/_jobs
  local.get $0
  call $assembly/multicall/jobs/Jobs#resume
 )
 (func $assembly/multicall/index/__wrapper_jobs_resume
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 13312
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 13312
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<u32>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 13312
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<u32>>
  end
  call $assembly/multicall/index/jobs_resume
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<u32> (param $0 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 9168
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<u32>
 )
 (func $~lib/near-sdk-bindgen/index/requireParameter<bool> (param $0 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 5568
   local.get $0
   call $~lib/string/String.__concat
   i32.const 3936
   call $~lib/string/String.__concat
   i32.const 10464
   call $~lib/string/String.__concat
   i32.const 5616
   call $~lib/string/String.__concat
   i32.const 3440
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-bindgen/index/defaultValue<bool>
 )
 (func $assembly/multicall/model/CroncatRefillTaskArgs#set:task_hash (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/CroncatRefillTaskArgs#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 55
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/CroncatRefillTaskArgs#set:task_hash
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/CroncatRefillTaskArgs> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $assembly/multicall/model/CroncatRefillTaskArgs#_encode (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
  else
   local.get $2
  end
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 13744
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatRefillTaskArgs,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/CroncatRefillTaskArgs>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $0
   local.get $1
   local.get $2
   call $assembly/multicall/model/CroncatRefillTaskArgs#_encode
   drop
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatRefillTaskArgs,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatRefillTaskArgs,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/contract/encodeArgs<assembly/multicall/model/CroncatRefillTaskArgs> (param $0 i32) (result i32)
  i32.const 0
  drop
  local.get $0
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatRefillTaskArgs,~lib/typedarray/Uint8Array>@varargs
 )
 (func $~lib/near-sdk-core/contract/ContractPromise.create<assembly/multicall/model/CroncatRefillTaskArgs> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i64)
  local.get $2
  call $~lib/near-sdk-core/contract/encodeArgs<assembly/multicall/model/CroncatRefillTaskArgs>
  local.set $5
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $6
  local.get $1
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $7
  local.get $4
  local.set $8
  i32.const 0
  local.set $9
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $10
  local.get $8
  local.set $13
  local.get $10
  i32.load offset=4
  local.set $12
  local.get $9
  local.set $11
  local.get $11
  if
   local.get $13
   local.set $15
   local.get $12
   local.set $14
   local.get $14
   local.get $15
   i64.load offset=8
   call $~lib/polyfills/bswap<u64>
   i64.store
   local.get $14
   local.get $15
   i64.load
   call $~lib/polyfills/bswap<u64>
   i64.store offset=8
  else
   local.get $13
   local.set $15
   local.get $12
   local.set $14
   local.get $14
   local.get $15
   i64.load
   i64.store
   local.get $14
   local.get $15
   i64.load offset=8
   i64.store offset=8
  end
  local.get $10
  local.set $10
  local.get $6
  i32.load offset=8
  i64.extend_i32_s
  local.get $6
  i32.load offset=4
  i64.extend_i32_u
  local.get $7
  i32.load offset=8
  i64.extend_i32_s
  local.get $7
  i32.load offset=4
  i64.extend_i32_u
  local.get $5
  i32.load offset=8
  i64.extend_i32_s
  local.get $5
  i32.load offset=4
  i64.extend_i32_u
  local.get $10
  i32.load offset=4
  i64.extend_i32_u
  local.get $3
  call $~lib/near-sdk-core/env/env/env.promise_create
  local.set $16
  i32.const 0
  call $~lib/near-sdk-core/contract/ContractPromise#constructor
  local.set $9
  local.get $9
  local.get $16
  call $~lib/near-sdk-core/contract/ContractPromise#set:id
  local.get $9
 )
 (func $assembly/multicall/utils/Croncat#refill_balance (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  local.get $0
  call $assembly/multicall/utils/Croncat#get_manager_address
  i32.const 13696
  local.get $1
  local.get $2
  local.get $3
  call $~lib/near-sdk-core/contract/ContractPromise.create<assembly/multicall/model/CroncatRefillTaskArgs>
 )
 (func $assembly/multicall/jobs/Jobs#edit (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (param $5 i64) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#getSome
  local.set $7
  local.get $7
  local.get $2
  call $assembly/multicall/model/JobSchema#set:calls
  local.get $7
  local.get $4
  call $assembly/multicall/model/JobSchema#set:runs_max
  local.get $7
  local.get $5
  call $assembly/multicall/model/JobSchema#set:start_at
  local.get $7
  local.get $6
  call $assembly/multicall/model/JobSchema#set:is_active
  local.get $7
  i32.load offset=36
  local.set $9
  local.get $3
  local.set $8
  local.get $9
  i64.load offset=8
  local.set $10
  local.get $8
  i64.load offset=8
  local.set $11
  local.get $10
  local.get $11
  i64.eq
  if (result i32)
   local.get $9
   i64.load
   local.get $8
   i64.load
   i64.lt_u
  else
   local.get $10
   local.get $11
   i64.lt_u
  end
  if
   local.get $0
   i32.load offset=8
   i32.const 0
   call $assembly/multicall/model/CroncatRefillTaskArgs#constructor
   local.set $9
   local.get $9
   local.get $7
   i32.load offset=4
   call $assembly/multicall/model/CroncatRefillTaskArgs#set:task_hash
   local.get $9
   call $~lib/near-sdk-core/contract/Context.get:prepaidGas
   local.get $0
   i64.load offset=24
   i64.sub
   local.get $3
   local.get $7
   i32.load offset=36
   call $~lib/as-bignum/integer/safe/u128/u128.sub
   call $assembly/multicall/utils/Croncat#refill_balance
   drop
  end
  local.get $0
  i32.load offset=12
  local.get $7
  i32.load
  local.get $7
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set
 )
 (func $assembly/multicall/index/job_edit (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i64) (param $5 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  global.get $assembly/multicall/index/_jobs
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  call $assembly/multicall/jobs/Jobs#edit
 )
 (func $assembly/multicall/index/__wrapper_job_edit
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 9136
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/decode<u32,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/requireParameter<u32>
  end
  local.get $0
  i32.const 12624
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12624
   call $~lib/near-sdk-bindgen/index/decode<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12624
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/array/Array<~lib/array/Array<assembly/multicall/model/BatchCall>>>
  end
  local.get $0
  i32.const 12848
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 12848
   call $~lib/near-sdk-bindgen/index/decode<~lib/as-bignum/integer/safe/u128/u128,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12848
   call $~lib/near-sdk-bindgen/index/requireParameter<~lib/as-bignum/integer/safe/u128/u128>
  end
  local.get $0
  i32.const 12912
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $0
   i32.const 12912
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12912
   call $~lib/near-sdk-bindgen/index/requireParameter<u64>
  end
  local.get $0
  i32.const 12960
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i64)
   local.get $0
   i32.const 12960
   call $~lib/near-sdk-bindgen/index/decode<u64,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 12960
   call $~lib/near-sdk-bindgen/index/requireParameter<u64>
  end
  local.get $0
  i32.const 13648
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 13648
   call $~lib/near-sdk-bindgen/index/decode<bool,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 13648
   call $~lib/near-sdk-bindgen/index/requireParameter<bool>
  end
  call $assembly/multicall/index/job_edit
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
  i32.const 0
  i32.gt_s
  i32.eqz
  if
   i32.const 12096
   i32.const 9536
   i32.const 67
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
  i32.const 1
  i32.sub
  local.set $1
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:length
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_get
  local.set $2
  local.get $0
  local.set $4
  local.get $1
  local.set $3
  local.get $4
  i32.load
  local.get $3
  i32.const 10
  call $~lib/number/I32#toString
  call $~lib/string/String.__concat
  call $~lib/near-sdk-core/storage/Storage.delete
  drop
  local.get $2
 )
 (func $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#delete (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#_key
  call $~lib/near-sdk-core/storage/Storage.delete
  drop
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:back (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
  i32.const 1
  i32.sub
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__get
 )
 (func $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#swap_remove (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
  i32.lt_s
  i32.eqz
  if
   i32.const 12160
   i32.const 9536
   i32.const 79
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.add
  local.get $0
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
  i32.eq
  if
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#pop
   return
  else
   local.get $0
   local.get $1
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_get
   local.set $2
   local.get $0
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
   i32.const 1
   i32.sub
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_get
   local.set $3
   local.get $0
   local.set $5
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
   i32.const 1
   i32.sub
   local.set $4
   local.get $5
   i32.load
   local.get $4
   i32.const 10
   call $~lib/number/I32#toString
   call $~lib/string/String.__concat
   call $~lib/near-sdk-core/storage/Storage.delete
   drop
   local.get $0
   local.get $1
   local.get $3
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#__unchecked_set
   local.get $0
   local.get $0
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
   i32.const 1
   i32.sub
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#set:length
   local.get $2
   return
  end
  unreachable
 )
 (func $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#delete (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#getSome
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=4
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:length
  i32.const 1
  i32.sub
  i32.eq
  if
   local.get $0
   i32.load offset=4
   local.set $3
   local.get $3
   call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#pop
   local.set $3
   local.get $0
   i32.load
   local.get $3
   i32.load
   call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#delete
   return
  end
  local.get $0
  i32.load offset=4
  local.set $3
  local.get $3
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#get:back
  i32.load
  local.set $3
  local.get $0
  i32.load offset=4
  local.get $2
  call $~lib/near-sdk-core/collections/persistentVector/PersistentVector<~lib/near-sdk-core/collections/util/MapEntry<u32,assembly/multicall/model/JobSchema>>#swap_remove
  drop
  local.get $0
  i32.load
  local.get $3
  local.get $2
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#set
  local.get $0
  i32.load
  local.get $1
  call $~lib/near-sdk-core/collections/persistentMap/PersistentMap<u32,i32>#delete
 )
 (func $assembly/multicall/model/CroncatRemoveTaskArgs#set:task_hash (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/multicall/model/CroncatRemoveTaskArgs#constructor (param $0 i32) (result i32)
  local.get $0
  i32.eqz
  if
   i32.const 4
   i32.const 56
   call $~lib/rt/stub/__new
   local.set $0
  end
  local.get $0
  call $~lib/near-sdk-bindgen/index/defaultValue<~lib/string/String>
  call $assembly/multicall/model/CroncatRemoveTaskArgs#set:task_hash
  local.get $0
 )
 (func $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/CroncatRemoveTaskArgs> (param $0 i32) (result i32)
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 1
  end
  drop
  local.get $0
  i32.const 0
  i32.eq
  return
 )
 (func $assembly/multicall/model/CroncatRemoveTaskArgs#_encode (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
  else
   local.get $2
  end
  local.set $3
  local.get $3
  local.get $1
  call $~lib/assemblyscript-json/encoder/JSONEncoder#pushObject
  drop
  local.get $0
  i32.load
  i32.const 13744
  local.get $3
  call $~lib/near-sdk-bindgen/index/encode<~lib/string/String,~lib/near-sdk-bindgen/index/JSONEncoder>
  drop
  local.get $3
  call $~lib/assemblyscript-json/encoder/JSONEncoder#popObject
  local.get $3
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatRemoveTaskArgs,~lib/typedarray/Uint8Array> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $0
  call $~lib/near-sdk-bindgen/index/isNull<assembly/multicall/model/CroncatRemoveTaskArgs>
  if
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/encoder/JSONEncoder#setNull
  else
   i32.const 1
   drop
   i32.const 0
   drop
   local.get $0
   local.get $1
   local.get $2
   call $assembly/multicall/model/CroncatRemoveTaskArgs#_encode
   drop
  end
  i32.const 1
  drop
  local.get $2
  call $~lib/assemblyscript-json/encoder/JSONEncoder#serialize
  return
 )
 (func $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatRemoveTaskArgs,~lib/typedarray/Uint8Array>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 528
    local.set $1
   end
   i32.const 0
   call $~lib/near-sdk-bindgen/index/JSONEncoder#constructor
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatRemoveTaskArgs,~lib/typedarray/Uint8Array>
 )
 (func $~lib/near-sdk-core/contract/encodeArgs<assembly/multicall/model/CroncatRemoveTaskArgs> (param $0 i32) (result i32)
  i32.const 0
  drop
  local.get $0
  i32.const 528
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/near-sdk-bindgen/index/encode<assembly/multicall/model/CroncatRemoveTaskArgs,~lib/typedarray/Uint8Array>@varargs
 )
 (func $~lib/near-sdk-core/contract/ContractPromise.create<assembly/multicall/model/CroncatRemoveTaskArgs> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i64)
  local.get $2
  call $~lib/near-sdk-core/contract/encodeArgs<assembly/multicall/model/CroncatRemoveTaskArgs>
  local.set $5
  local.get $0
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $6
  local.get $1
  call $~lib/near-sdk-core/util/util.stringToBytes
  local.set $7
  local.get $4
  local.set $8
  i32.const 0
  local.set $9
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Uint8Array#constructor
  local.set $10
  local.get $8
  local.set $13
  local.get $10
  i32.load offset=4
  local.set $12
  local.get $9
  local.set $11
  local.get $11
  if
   local.get $13
   local.set $15
   local.get $12
   local.set $14
   local.get $14
   local.get $15
   i64.load offset=8
   call $~lib/polyfills/bswap<u64>
   i64.store
   local.get $14
   local.get $15
   i64.load
   call $~lib/polyfills/bswap<u64>
   i64.store offset=8
  else
   local.get $13
   local.set $15
   local.get $12
   local.set $14
   local.get $14
   local.get $15
   i64.load
   i64.store
   local.get $14
   local.get $15
   i64.load offset=8
   i64.store offset=8
  end
  local.get $10
  local.set $10
  local.get $6
  i32.load offset=8
  i64.extend_i32_s
  local.get $6
  i32.load offset=4
  i64.extend_i32_u
  local.get $7
  i32.load offset=8
  i64.extend_i32_s
  local.get $7
  i32.load offset=4
  i64.extend_i32_u
  local.get $5
  i32.load offset=8
  i64.extend_i32_s
  local.get $5
  i32.load offset=4
  i64.extend_i32_u
  local.get $10
  i32.load offset=4
  i64.extend_i32_u
  local.get $3
  call $~lib/near-sdk-core/env/env/env.promise_create
  local.set $16
  i32.const 0
  call $~lib/near-sdk-core/contract/ContractPromise#constructor
  local.set $9
  local.get $9
  local.get $16
  call $~lib/near-sdk-core/contract/ContractPromise#set:id
  local.get $9
 )
 (func $assembly/multicall/utils/Croncat#remove_task (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32) (result i32)
  local.get $0
  call $assembly/multicall/utils/Croncat#get_manager_address
  i32.const 13792
  local.get $1
  local.get $2
  local.get $3
  call $~lib/near-sdk-core/contract/ContractPromise.create<assembly/multicall/model/CroncatRemoveTaskArgs>
 )
 (func $assembly/multicall/jobs/Jobs#delete (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#getSome
  local.set $2
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#delete
  local.get $0
  i32.load offset=8
  i32.const 0
  call $assembly/multicall/model/CroncatRemoveTaskArgs#constructor
  local.set $3
  local.get $3
  local.get $2
  i32.load offset=4
  call $assembly/multicall/model/CroncatRemoveTaskArgs#set:task_hash
  local.get $3
  call $~lib/near-sdk-core/contract/Context.get:prepaidGas
  local.get $0
  i64.load offset=32
  i64.sub
  i32.const 0
  i64.const 0
  i64.const 0
  call $~lib/as-bignum/integer/safe/u128/u128#constructor
  call $assembly/multicall/utils/Croncat#remove_task
  call $~lib/near-sdk-core/contract/ContractPromise#returnAsResult
 )
 (func $assembly/multicall/index/job_delete (param $0 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_admin
  call $assembly/multicall/index/_assert_deposit
  global.get $assembly/multicall/index/_jobs
  local.get $0
  call $assembly/multicall/jobs/Jobs#delete
 )
 (func $assembly/multicall/index/__wrapper_job_delete
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 9136
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/decode<u32,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/requireParameter<u32>
  end
  call $assembly/multicall/index/job_delete
 )
 (func $assembly/multicall/index/_is_croncat_manager (param $0 i32)
  call $assembly/multicall/index/get_croncat_manager
  local.get $0
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 13952
   i32.const 1
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 13952
   i32.const 528
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 8064
   i32.const 158
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/near-sdk-core/contract/Context.get:blockTimestamp (result i64)
  call $~lib/near-sdk-core/env/env/env.block_timestamp
 )
 (func $assembly/multicall/jobs/Jobs#trigger (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#getSome
  local.set $2
  local.get $2
  i32.load8_u offset=64
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 14048
   i32.const 1
   local.get $1
   i32.const 10
   call $~lib/number/U32#toString
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 14048
   i32.const 528
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 13168
   i32.const 169
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  call $~lib/near-sdk-core/contract/Context.get:blockTimestamp
  local.get $2
  i64.load offset=40
  i64.ge_u
  i32.eqz
  if
   i32.const 14080
   i32.const 13168
   i32.const 170
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i64.load offset=48
  local.get $2
  i64.load offset=56
  i64.le_u
  if
   i32.const 14272
   i32.const 1
   local.get $1
   i32.const 10
   call $~lib/number/U32#toString
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 14272
   i32.const 528
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   call $~lib/near-sdk-core/logging/logging.log<~lib/string/String>
   local.get $0
   i32.load offset=8
   i32.const 0
   call $assembly/multicall/model/CroncatRemoveTaskArgs#constructor
   local.set $3
   local.get $3
   local.get $2
   i32.load offset=4
   call $assembly/multicall/model/CroncatRemoveTaskArgs#set:task_hash
   local.get $3
   call $~lib/near-sdk-core/contract/Context.get:prepaidGas
   local.get $0
   i64.load offset=32
   i64.sub
   i32.const 0
   i64.const 0
   i64.const 0
   call $~lib/as-bignum/integer/safe/u128/u128#constructor
   call $assembly/multicall/utils/Croncat#remove_task
   call $~lib/near-sdk-core/contract/ContractPromise#returnAsResult
   return
  end
  local.get $2
  local.get $2
  i64.load offset=56
  i64.const 1
  i64.add
  call $assembly/multicall/model/JobSchema#set:runs_current
  i32.const 14416
  i32.const 1
  local.get $2
  i32.load
  i32.const 10
  call $~lib/number/U32#toString
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 14416
  i32.const 3
  local.get $2
  i64.load offset=48
  i32.const 10
  call $~lib/number/U64#toString
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 14416
  i32.const 5
  local.get $2
  i64.load offset=56
  i32.const 10
  call $~lib/number/U64#toString
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 14416
  i32.const 528
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  call $~lib/near-sdk-core/logging/logging.log<~lib/string/String>
  local.get $0
  i32.load offset=12
  local.get $2
  i32.load
  local.get $2
  call $~lib/near-sdk-core/collections/persistentUnorderedMap/PersistentUnorderedMap<u32,assembly/multicall/model/JobSchema>#set
  local.get $2
  i32.load offset=68
  call $assembly/multicall/internal/_internal_multicall
 )
 (func $assembly/multicall/index/job_trigger (param $0 i32)
  call $~lib/near-sdk-core/contract/Context.get:predecessor
  call $assembly/multicall/index/_is_croncat_manager
  global.get $assembly/multicall/index/_jobs
  local.get $0
  call $assembly/multicall/jobs/Jobs#trigger
 )
 (func $assembly/multicall/index/__wrapper_job_trigger
  (local $0 i32)
  call $~lib/near-sdk-bindgen/index/getInput
  local.set $0
  local.get $0
  i32.const 9136
  call $~lib/assemblyscript-json/JSON/Obj#has
  if (result i32)
   local.get $0
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/decode<i32,~lib/assemblyscript-json/JSON/Obj>
  else
   i32.const 9136
   call $~lib/near-sdk-bindgen/index/requireParameter<i32>
  end
  call $assembly/multicall/index/job_trigger
 )
 (func $~lib/as-bignum/integer/safe/u128/u128#clone (param $0 i32) (result i32)
  i32.const 0
  local.get $0
  i64.load
  local.get $0
  i64.load offset=8
  call $~lib/as-bignum/integer/safe/u128/u128#constructor
 )
 (func $~lib/as-bignum/integer/u128/u128#clone@virtual (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $1
    local.get $1
    i32.const 3
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $~lib/as-bignum/integer/safe/u128/u128#clone
   return
  end
  local.get $0
  call $~lib/as-bignum/integer/u128/u128#clone
 )
 (func $~start
  call $start:assembly/multicall/index
  i32.const 0
  call $~lib/assemblyscript-json/JSON/Handler#constructor
  global.set $~lib/assemblyscript-json/JSON/_JSON.handler
  i32.const 0
  global.get $~lib/assemblyscript-json/JSON/_JSON.handler
  call $~lib/assemblyscript-json/decoder/JSONDecoder<~lib/assemblyscript-json/JSON/Handler>#constructor
  global.set $~lib/assemblyscript-json/JSON/_JSON.decoder
  i32.const 0
  call $~lib/assemblyscript-json/JSON/Null#constructor
  global.set $~lib/assemblyscript-json/JSON/NULL
  i32.const 128
  i32.const 0
  i32.const 5
  i32.const 8368
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<u8>
  global.set $~lib/near-sdk-core/base64/ALPHAVALUES
 )
)
